995#;#;#NULL#!#!#
994#;#;#print("Universidade Federal do Amazonas")#!#!#
996#;#;#print("*****")
print("(* o o *)")
print("*  ^  *")
print("* --- *")
print("*****")#!#!#
999#;#;#NULL#!#!#
1000#;#;#NULL#!#!#
578#;#;#NULL#!#!#
1001#;#;#NULL#!#!#
797#;#;#NULL#!#!#
835#;#;#NULL#!#!#
587#;#;#NULL#!#!#
820#;#;## Instituto de Computacao - UFAM
# Lab 01 - Ex 10
# 20 / 05 / 2016

valor = float (input ("Qual o valor do saque? "))

# Quantidade de notas de R$ 50
notas_50 = valor // 50 

# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = valor % 50

# Quantidade de notas de R$ 10
notas_10 = resto_50 // 10

# Valor restante a ser sacado com notas menores que R$ 50
resto_10 = resto_50 % 10

# Quantidade de notas de R$ 2
notas_2 = resto_10 // 2

print(int(notas_50))
print(int(notas_10))
print(int(notas_2))
#!#!#
588#;#;## Leitura de entradas
valor = float(input("Valor de saque do cliente: "))

# Notas de 100
notas_100 = valor // 100
resto_100 = valor % 100

# Notas de 50
notas_50 = resto_100 // 50
resto_50 = resto_100 % 50

# Notas  de 10
notas_10 = resto_50 // 10

# Impressao de saidas
print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
#!#!#
1014#;#;#"""
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 05
@author: IComp / UFAM
"""

vendas = float(input ("Valor vendido: "))

lucro = 0.3 * vendas

print(round(lucro, 2))
#!#!#
1015#;#;#"""
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 06
@author: IComp / UFAM
"""

##
# Sort 3 values entered by the user into increasing order.
#
# Read the numbers from the user, naming them a, b, and c
a= int(input ("Enter the first number: "))
b = int(input ("Enter the second number: "))
c = int(input ( "Enter the third number : "))

mn = min(a,b,c) #the minimum value
mx = max(a,b,c) #the maximum value
md = a + b + c - mn - mx #the middle value

# Display the result
print(mn)
print(md)
print(mx)

#!#!#
825#;#;#"""
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 07
@author: IComp / UFAM
"""

from math import *

# Leitura de dados
raio = float(input("Raio: "))

# Area do circulo
area = pi * raio ** 2

# Volume da esfera
volume = 4.0/3.0 * pi * raio ** 3

# Display the result
print(round(area, 3))
print(round(volume, 3))
#!#!#
1016#;#;#"""
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 08
@author: IComp / UFAM
"""
from math import *

# Read the numbers from the user, naming them a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

s = (a + b + c)/2.0

area = sqrt(s * (s-a) * (s-b) * (s-c))

# Impressao do resultado
print(round(area, 5))
#!#!#
1017#;#;#"""
Introducao a Programacao de Computadores
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 09
Distância entre dois pontos na superfície da Terra
@author: IComp / UFAM

Aluna reportou que haveria diferenca entre usar radians() envolvendo o input 
ou como argumento no interior das funcoes trigonometricas.
Este codigo demonstra que essa impressao eh FALSA.
"""
from math import *

# Leitura de dados do Ponto 1 e conversao para radianos
lat1  = float(input("Latitude do Ponto 1: "))
long1 = float(input("Longitude do Ponto 1: "))

# Leitura de dados do Ponto 2 e conversao para radianos
lat2  = float(input("Latitude do Ponto 2: "))
long2 = float(input("Longitude do Ponto 2: "))

# Raio da Terra
R = 6371.01

# Calculo da distancia entre dois pontos na superficie da Terra
d = R * acos(sin(radians(lat1)) * sin(radians(lat2)) + cos(radians(lat1)) * cos(radians(lat2)) * cos(radians(long1 - long2)))

# Impressao do resultado
print(round(d, 2))
#!#!#
842#;#;#"""
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 09
Soma dos dígitos de um número inteiro
@author: IComp / UFAM
"""

# Leitura de dados
num = int(input("Digite um numero de 4 digitos: "))

# Digito do milhar
milhar = (num // 1000)

# Digito da centena
centena = ((num // 100) % 10)

# Digito da dezena
dezena = ((num // 10) % 10)

# Digito da unidade
unidade = (num % 10)

total = milhar + centena + dezena + unidade

print (total)#!#!#
1024#;#;##!#!#
1037#;#;##!#!#
1002#;#;##!#!#
1029#;#;#consumo = float(input("consumo de chamadas (em minutos) durante o mês: "))

valor_total = 0.28 * consumo + 23
valor_total = valor_total + 0.31 * valor_total

print(round(valor_total, 2))#!#!#
1021#;#;##!#!#
1033#;#;##!#!#
1023#;#;##!#!#
1028#;#;#volume = float(input("volume de agua consumido no mes: "))

valor_mes = 0.37* volume + 15
valor_mes = valor_mes + 0.35 * valor_mes

print(round(valor_mes, 2))#!#!#
1025#;#;##!#!#
1027#;#;#energia = float(input("consumo de energia em kWh: "))

valor_total = 0.43 * energia + 10
valor_total = valor_total + 0.25 * valor_total

print(round(valor_total, 2))#!#!#
1020#;#;##!#!#
1031#;#;#quant_litros = float(input("quantidade de litros de gasolina: "))

valor_total = 2.86 * quant_litros + 50
valor_total = valor_total + 0.34 * valor_total

print(round(valor_total, 2))#!#!#
1018#;#;#a = int(input("Primeiro cateto: "))
b = int(input("Segundo cateto "))#!#!#
1035#;#;##!#!#
1022#;#;##!#!#
1030#;#;#minutos = float(input("minutos excedentes no mes: "))

valor_mes = 0.97 * minutos + 45
valor_mes = valor_mes + 0.42 * valor_mes

print(round(valor_mes, 2))#!#!#
1036#;#;##!#!#
1038#;#;##!#!#
1026#;#;##!#!#
1032#;#;#valor = float(input("valor da encomenda: "))

valor_total = valor + (0.81 * valor) + 12

print(round(valor_total, 2))#!#!#
1019#;#;##!#!#
1034#;#;##!#!#
602#;#;#numero = int(input())

if (numero % 2 == 0):
	print("sim")
else:
	print("nao")
	#!#!#
1053#;#;#patrono = input()

if patrono == "cervo":
    mensagem = "cervo eh patrono do Harry Potter"
else:
    mensagem = patrono + " nao eh patrono do Harry Potter"

print(mensagem)#!#!#
1054#;#;#x = int(input("X: "))
y = int(input("Y: "))

if 2*x + y == 3:
    mensagem = "ponto pertence a reta"
else:
    mensagem = "ponto nao pertence a reta"

print(mensagem)#!#!#
869#;#;#preco = float(input("Preco: "))

if preco >= 200:
    novo_preco = preco - (preco*0.05)
    mensagem = round(novo_preco, 2)
else:
    mensagem = round(preco, 2)

print(mensagem)#!#!#
1055#;#;#import math


v0 = float(input("Velocidade inicial (m/s): "))
alpha = float(input("Alpha: "))
d = float(input("Distancia horizontal: "))

g = 9.8

r = (v0**2) * math.sin(2*math.radians(alpha)) / g

if abs(r - d) <= 0.1:
    mensagem = "sim"
else:
    mensagem = "nao"

print(mensagem)#!#!#
1056#;#;#NULL#!#!#
1081#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
nota4 = float(input("Digite a nota 4: "))

 
media = (nota1 + nota2 + nota3 + nota4) / 4
 
print(round(media, 2))
 
if (media >= 5.0):
    print("Aprovacao")
else:
    print("Reprovacao")
#!#!#
1093#;#;##!#!#
1086#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))

 
media = (nota1 + nota2 + nota3) / 3
 
print(round(media, 1))
 
if (media >= 7.0):
    print("Aprovado")
else:
    print("Reprovado")#!#!#
1091#;#;##!#!#
1090#;#;#limite = float(input("Digite o limite do cartao: "))

compra1 = float(input("Digite valor da compra 1: "))
compra2 = float(input("Digite valor da compra 2: "))
compra3 = float(input("Digite valor da compra 3: "))
compra4 = float(input("Digite valor da compra 4: "))

 
total_compras = compra1 + compra2 + compra3 + compra4
					  
print(round(total_compras, 2))
 
if (total_compras <= limite):
    print("Dentro do limite")
else:
    print("Estourou o limite")#!#!#
1094#;#;##!#!#
1088#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
nota4 = float(input("Digite a nota 4: "))
nota5 = float(input("Digite a nota 5: "))
 
media = (nota1 + nota2 + nota3 + nota4 + nota5) / 5
 
print(round(media, 2))
 
if (media >= 7.0):
    print("Aprovado")
else:
    print("Reprovado por nota")#!#!#
1096#;#;##!#!#
1087#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
nota4 = float(input("Digite a nota 4: "))

 
media = (nota1 + nota2 + nota3 + nota4) / 4
 
print(round(media, 2))
 
if (media >= 7.0):
    print("Aprovado")
else:
    print("Reprovado")#!#!#
1089#;#;#compra1 = float(input("Digite valor da compra 1: "))
compra2 = float(input("Digite valor da compra 2: "))
compra3 = float(input("Digite valor da compra 3: "))
limite = float(input("Digite o limite do cartao: "))
 
total_compras = compra1 + compra2 + compra3
					  
print(round(total_compras, 2))
 
if (total_compras <= limite):
    print("Nao ultrapassou")
else:
    print("Ultrapassou")#!#!#
1097#;#;##!#!#
1092#;#;#numero = int(input())

dezenas = numero % 100
num_centena = (numero - dezenas) // 100
num_unidade = dezenas % 10
num_dezena = (dezenas - num_unidade) // 10

soma_cubos = num_centena **3 + num_dezena**3 + num_unidade**3


if soma_cubos == numero:
    mensagem = "atende"
else:
    mensagem = "nao atende"
    
print(numero)
print(mensagem)#!#!#
1083#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))

 
media = (nota1 + nota2 + nota3) / 3
 
print(round(media, 2))
 
if (media >= 6.0):
    print("Aprovacao")
else:
    print("Reprovacao")#!#!#
1095#;#;##!#!#
1082#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
nota4 = float(input("Digite a nota 4: "))
nota5 = float(input("Digite a nota 5: "))
 
media = (nota1 + nota2 + nota3 + nota4 + nota5) / 5
 
print(round(media, 1))
 
if (media >= 5.0):
    print("Aprovado")
else:
    print("Reprovado")#!#!#
1080#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))

 
media = (nota1 + nota2 + nota3) / 3
 
print(round(media, 1))
 
if (media >= 5.0):
    print("Aprovado")
else:
    print("Reprovado")
#!#!#
1084#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
nota4 = float(input("Digite a nota 4: "))
 
media = (nota1 + nota2 + nota3 + nota4) / 4
 
print(round(media, 1))
 
if (media >= 6.0):
    print("Aprovado")
else:
    print("Reprovado")#!#!#
1098#;#;##!#!#
1085#;#;#nota1 = float(input("Digite a nota 1: "))
nota2 = float(input("Digite a nota 2: "))
nota3 = float(input("Digite a nota 3: "))
nota4 = float(input("Digite a nota 4: "))
nota5 = float(input("Digite a nota 5: "))
 
media = (nota1 + nota2 + nota3 + nota4 + nota5) / 5.
 
print(round(media, 2))
 
if (media >= 6.0):
    print("Aprovacao")
else:
    print("Reprovacao")#!#!#
1079#;#;## Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Parte da saída da versão antiga do enunciado.
# Removido para reduzir o número de mensagens na saída.
# print("Entradas:", a, ",", b, ",", c)

# Testa se todas as entradas são positivas 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem as de um triangulo
	if ((a < b + c) and (b < a + c) and (c < a + b) ):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
#!#!#
1099#;#;## Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Parte da saída da versão antiga do enunciado.
# Removido a fim de reduzir os textos das saídas.
# print("Entradas:", a, ",", b, ",", c)

# Testa se todas as entradas são positivas 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b + c) and (b < a + c) and (c < a + b) ):
		if (a == b and b == c):
			x = "equilatero"
		elif (a == b or b == c or a == c):
			x = "isosceles"
		else:
			x = "escaleno"
	else:
		x = "invalido"
else:
		x = "invalido"

print("Triangulo:",x)
#!#!#
1100#;#;#valor = int(input())
print("Entrada:",valor)
if (valor == 2):
	animal = "Tartaruga"
elif (valor == 5):
	animal = "Garca"
elif (valor == 10):
	animal = "Arara"
elif (valor == 20):
	animal = "Mico-leao-dourado"
elif (valor == 50):
	animal = "Onca-pintada"
elif (valor == 100):
	animal = "Garoupa"
else:
	animal = "Invalido"
print("Animal:",animal)
#!#!#
1101#;#;#consumo = float(input())
tipo = input().upper()
print("Entradas:",consumo,"kWh e tipo",tipo)
if (consumo >= 0):
	if (tipo == "R"):
		if (consumo <= 500):
			conta = consumo * 0.44
		else:
			conta = consumo * 0.65
		print("Valor total: R$",round(conta,2))
	elif (tipo == "C"):
		if (consumo <= 1000):
			conta = consumo * 0.55
		else:
			conta = consumo * 0.60
		print("Valor total: R$",round(conta,2))
	elif (tipo == "I"):
		if (consumo <= 5000):
			conta = consumo * 0.55
		else:
			conta = consumo * 0.60
		print("Valor total: R$",round(conta,2))
	else:
		print("Dados invalidos")
else:
		print("Dados invalidos")#!#!#
1102#;#;#import math

H = float(input())
h = float(input())
r = float(input())

print("Entradas: %.1f , %.1f , %.1f" % (H,h,r))

if H>0 and h>0 and r>0 and H>h and h>2*r:   
    if h<r:#a. antes da semiesfera inferior
        V = (math.pi/3) * h**2 * (3*r - h)#volume calota
    elif h<(H-r): #b. entre bojos semiesféricos inferior e superior
        #volume do cilindro
        V_cilindro = math.pi * r**2 * (h-r)
        #volume da esfera dividido por dois
        V_bojo_semiesferico = (4*(math.pi/3) * r**3)/2
        #volume total será o volume do cilindro mais o volume da esfera dividido por dois
        V = V_cilindro + V_bojo_semiesferico
    else: #c.Semiesfera superior
        #volume total - volume do ar
        V_cilindro = math.pi * r**2 * (H-2*r)
        V_esfera = 4*(math.pi/3) * r**3
        V_total = V_cilindro + V_esfera
        #volume de ar na calota superior
        V_calota = (math.pi/3) * (H-h)**2 * (3*r - (H-h))
        V = V_total - V_calota
    V = V*1000.0        
    print("Volume: %.3f litros" % V)
else:
    print("Entradas invalidas")#!#!#
1103#;#;#x = float(input())
a = float(input())
b = float(input())

if (a < b):
	if (x >= a and x <=b):
		print(x,"pertence","ao intervalo",a,",",b)
	else:
		print(x,"nao pertence","ao intervalo",a,",",b)
else:
	print("entradas",a,"e",b,"invalidas")#!#!#
1104#;#;#a = float(input())
b = float(input())
c = float(input())
d = float(input())

# Prints removidos para minimizar os prints.
# print("Intervalo 1:",a,",",b)
# print("Intervalo 2:",c,",",d)

if (a < b and c < d):
	if ((a < d and c < b) or (c < b and a < d)):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")#!#!#
1105#;#;#brasao = input("Entre com o brasao: ")

if brasao == "lobo":
	print("Casa: Stark")
elif brasao == "leao":
	print("Casa: Lannister")
elif brasao == "veado":
	print("Casa: Baratheon")
elif brasao == "dragao":
	print("Casa: Targaryen")
elif brasao == "rosa":
	print("Casa: Tyrell")
elif brasao == "sol":
	print("Casa: Martell")
elif brasao == "lula":
	print("Casa: Greyjoy")
elif brasao == "esfolado":
	print("Casa: Bolton")
elif brasao == "truta":
	print("Casa: Tully")
else: 	
	print("Brasao invalido")#!#!#
1107#;#;#NULL#!#!#
1116#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao H - Quadrantes
@author: IComp / UFAM
"""

# Entradas
x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

if (x == 0 or y == 0):
    print("O ponto (", x, ",", y, ") esta situado sobre um dos eixos")
elif (x > 0 and y > 0):
    print("O ponto (", x, ",", y, ") esta no quadrante 1")
elif (x < 0 and y > 0):
    print("O ponto (", x, ",", y, ") esta no quadrante 2")
elif (x < 0 and y < 0):
    print("O ponto (", x, ",", y, ") esta no quadrante 3")
else:
    print("O ponto (", x, ",", y, ") esta no quadrante 4")
#!#!#
1121#;#;#NULL#!#!#
1109#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao A - Dosagem de medicamento
@author: IComp / UFAM
"""
idade = int(input("Digite a idade: "))
peso  = float(input("Digite o peso: "))

c1 = (idade>=0) and (idade<=130)
c2 = (peso>0) and (peso<=550.0)

# Eco das entradas
print("Entradas:", idade, "anos e", peso, "kg")

if (c1 and c2):
    if (idade>=12):
        if (peso>=60.0):
            mg=1000
        else:
            mg=875
    else:
        if (peso<=5.0):
            mg=75
        elif (peso>5.0) and (peso<=9.0):
            mg=125
        elif (peso>9.0) and (peso<=16.0):
            mg=250
        elif (peso>16.0) and (peso<=24.0):
            mg=375
        elif (peso>24.0) and (peso<=30):
            mg=500
        else:
            mg=750
    print("Dosagem:", mg, "mg")
else:
    print("Dados invalidos")
#!#!#
1119#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao B - Casa-Lema
@author: IComp / UFAM
"""

casa=input("Digite a Casa: ")

if casa=="Baratheon":
    lema="Nossa e a furia"
elif casa=="Targaryen":
    lema="Fogo e sangue"
elif casa=="Tyrell":
    lema="Crescendo fortes"
elif casa=="Stark":
    lema="O inverno esta chegando"
elif casa=="Lannister":
    lema="Oucam-me rugir"
elif casa=="Greyjoy":
    lema="Nos nao semeamos"
elif casa=="Tully":
    lema="Familia, dever, honra"
elif casa=="Arryn":
    lema="Tao alto como a honra"
elif casa=="Martell":
    lema="Insubmissos, nao curvados, nao quebrados"
else:
    lema="invalido"

if (lema == "invalido"):
    print("Entrada", casa, "invalida")
else:
    print(lema)
#!#!#
1111#;#;#extras = float(input("Horas extras: "))
faltas = float(input("Horas faltadas: "))
 
h = extras - ((2/3) * faltas)
 
if (h > 600):
        gratificacao = 300.0
else:
        gratificacao = 200.0
         
print(extras, "extras e", faltas, "de falta")
print("R$", round(gratificacao, 2))#!#!#
1122#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao E - Sobrenome do Bastardo-Regiao
@author: IComp / UFAM
"""

sobr=input("Digite o Sobrenome: ")

if sobr=="Snow":
    regiao="Norte"
elif sobr=="Stone":
    regiao="Vale"
elif sobr=="Rivers":
    regiao="Terras Fluviais"
elif sobr=="Storm":
    regiao="Terras da Tempestade"
elif sobr=="Sand":
    regiao="Dorne"
elif sobr=="Pyke":
    regiao="Ilhas de Ferro"
elif sobr=="Flowers":
    regiao="Campina"
elif sobr=="Hill":
    regiao="Terras Ocidentais"
elif sobr=="Waters":
    regiao="Terras da Coroa"
else:
    regiao="invalido"


if (regiao == "invalido"):
    print("Entrada", sobr, "invalida")
else:
    print(regiao)#!#!#
1120#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao C - Casa-Regiao
@author: IComp / UFAM
"""

casa=input("Digite uma Casa: ")

if casa=="Baratheon":
    regiao="Ponta Tempestade"
elif casa=="Targaryen":
    regiao="Ilha do Dragao"
elif casa=="Tyrell":
    regiao="Campina"
elif casa=="Stark":
    regiao="Winterfell"
elif casa=="Lannister":
    regiao="Rochedo Casterly"
elif casa=="Greyjoy":
    regiao="Pyke"
elif casa=="Tully":
    regiao="Correrio"
elif casa=="Arryn":
    regiao="Ninho da Aguia"
elif casa=="Martell":
    regiao="Dorne"
else:
    regiao="invalido"

if (regiao == "invalido"):
    print("Entrada", casa, "invalida")
else:
    print(regiao)
#!#!#
1115#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao G - Aumento de Salario-Cargo
@author: IComp / UFAM
"""
sal    = float(input("Digite o salario: "))
codigo = int(input("Digite o codigo do cargo: "))

# Eco das entradas
print("Entradas: R$", sal, "e codigo", codigo)

c1 = sal>0.0
c2 = (codigo>=101) and (codigo<=104)

if c1 and c2:
    if codigo==101:
        i = 0.8/100
    elif codigo==102:
        i = 0.65/100
    elif codigo==103:
        i = 0.60/100
    else:
        i = 0.55/100
    sal_novo = round(sal + sal * i, 2)
    print("Novo salario: R$", sal_novo)
else:
    print("Dados invalidos")
    
#!#!#
1114#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao F - Viagem de trem
@author: IComp / UFAM
"""

# Entradas
vel  = float(input("Velocidade do trem: "))
tempo = float(input("Tempo de viagem: "))

# Eco das entradas
print("Entradas:", vel, "km/h e", tempo, "h")

# Distancia percorrida pelo trem
dist = vel * tempo 

if (vel <= 0 or tempo < 0):
    parada = "invalido"
elif (dist < 100):
    parada = "Bravos"
elif (dist < 200):
    parada = "Castamere"
elif (dist < 400):
    parada = "Doriath"
elif (dist < 600):
    parada = "Edoras"
elif (dist < 750):
    parada = "Fangorn"
elif (dist < 1150):
    parada = "Gondor"
else:
    parada = "Hogsmead"

if (parada == "invalido"):
    print("Dados invalidos")
else:
    print("Proxima parada:", parada)

# Caso de teste A
# Entradas: 1.0, -1 

# Caso de teste B
# Entradas: 88.5, 4.5  

# Caso de teste C
# Entradas: 123.4, 12.3 
#!#!#
1128#;#;#NULL#!#!#
1117#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao J - Boate
@author: IComp / UFAM
"""
preco   = float(input("Digite o preco normal: "))
dia     = int(input("Digite o dia 1 para domingo, 2 para segunda: "))
dia_mus = input("Dia de Musica (S/N): ")

# Preocisa comentar esta saída para reduzir/simplificar o número de saídas para os alunos
# Eco das entradas
print("Entradas:", preco , ",", dia, ",", dia_mus)

c1 = preco>0
c2 = (dia>=1 and dia<=7)
c3 = (dia_mus=="S") or (dia_mus=="N")

if c1 and c2 and c3:
    if dia==2 or dia==3 or dia==5:
        desc=25/100
    else:
        desc=0.0
    if dia_mus=="S":
        taxa=20.0
    else:
        taxa=0.0
    preco_final = round(preco*(1-desc)+taxa, 2)
    print("Total: R$", preco_final)
else:
    print("Dados invalidos")#!#!#
1125#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao H - Lobo-Stark
@author: IComp / UFAM
"""

lobo=input("Digite: ")

if lobo=="Lady":
    stark="Sansa"
elif lobo=="Vento Cinzento":
    stark="Robb"
elif lobo=="Cao Felpudo":
    stark="Rickon"
elif lobo=="Fantasma":
    stark="Jon Snow"
elif lobo=="Verao":
    stark="Bran"
elif lobo=="Nymeria":
    stark="Arya"
else:
    stark="invalido"


if (stark == "invalido"):
    print("Entrada", lobo, "invalida")
else:
    print(stark)
#!#!#
1124#;#;#NULL#!#!#
1127#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao J - Cidade Livre-Gentilico
@author: IComp / UFAM
"""

cid = input("Digite: ")

if cid=="Pentos":
    gentil="pentoshi"
elif cid=="Bravos":
    gentil="bravosiano"
elif cid=="Lys":
    gentil="liseno"
elif cid=="Qohor":
    gentil="qohorik"
elif cid=="Norvos":
    gentil="norvoshi"
elif cid=="Myr":
    gentil="myrano"
elif cid=="Tyrosh":
    gentil="tyroshi"
elif cid=="Volantis":
    gentil="volantino"
elif cid=="Lorath":
    gentil="lorathi"
else:
    gentil="invalido"

if (gentil == "invalido"):
    print("Entrada", cid, "invalida")
else:
    print(gentil)

#!#!#
1113#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao E - Grupo de Risco
@author: IComp / UFAM
"""
idade = int(input("Digite a idade: "))
peso  = float(input("Digite o peso: "))

# Eco das entradas
print("Entradas:", idade, "anos e", "%.1f" %peso, "kg")

c1 = (idade>=0) and (idade<=130)
c2 = (peso>0) and (peso<=550.0)

if (c1 and c2):
    if idade<=20:
        if peso<=60.0:
            grupo=9
        elif peso>60.0 and peso<=90.0:
            grupo=8
        else:
            grupo=7
    elif idade>20 and idade<=50:
        if peso<=60.0:
            grupo=6
        elif peso>60.0 and peso<=90.0:
            grupo=5
        else:
            grupo=4
    else:
        if peso<=60.0:
            grupo=3
        elif peso>60.0 and peso<=90.0:
            grupo=2
        else:
            grupo=1
    print("Grupo de risco:", grupo)
else:
    print("Dados invalidos")#!#!#
1112#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao D - Aumento de Salario
@author: IComp / UFAM
"""
sal = float(input("Digite o salario: "))

# Eco das entradas
print("Entrada: R$", sal)

if sal>0:
    if sal<=800.0:
        i = 50
    elif sal>800.0 and sal<=1000.0:
        i = 40
    elif sal>1000.0 and sal<=1200.0:
        i = 30
    elif sal>1200 and sal<=1400:
        i = 20
    elif sal>1400 and sal<=1600:
        i = 10
    else:
        i = 5
    
    sal_novo = round(sal + sal * i/100., 2)
    print("Novo salario: R$", sal_novo)
else:
    print("Dado invalido")

#!#!#
1123#;#;#NULL#!#!#
1126#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao I - Stark-Lobo
@author: IComp / UFAM
"""

stark=input("Digite: ")

if stark=="Sansa":
    lobo="Lady"
elif stark=="Robb":
    lobo="Vento Cinzento"
elif stark=="Rickon":
    lobo="Cao Felpudo"
elif stark=="Jon Snow":
    lobo="Fantasma"
elif stark=="Bran":
    lobo="Verao"
elif stark=="Arya":
    lobo="Nymeria"
else:
    lobo="invalido"

if (lobo == "invalido"):
    print("Entrada", stark, "invalida")
else:
    print(lobo)
#!#!#
1110#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao B - Refeicao
@author: IComp / UFAM
"""
pto = int(input("Digite o prato: "))
sob = int(input("Digite a sobremesa: "))
beb = int(input("Digite a bebida: "))

# Eco das entradas
print("Entradas:", pto, ",", sob, ",", beb)

c1 = (pto>=1) and (sob>=1) and (beb>=1)
c2 = (pto<=4) and (sob<=4) and (beb<=4)
cal = 0

if (c1 and c2):
    if pto==1:
        cal=180
    elif pto==2:
        cal=230
    elif pto==3:
        cal=250
    else:
        cal=350
    if sob==1:
        cal=cal+75
    elif sob==2:
        cal=cal+110
    elif sob==3:
        cal=cal+170
    else:
        cal=cal+200
    if beb==1:
        cal=cal+20
    elif beb==2:
        cal=cal+70
    elif beb==3:
        cal=cal+100
    else:
        cal=cal+65
    print("Calorias:", cal, "cal")
else:
    print("Dados invalidos")#!#!#
1118#;#;#NULL#!#!#
1149#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao D - Regiao-Casa
@author: IComp / UFAM
"""

regiao=input("Digite: ")

if regiao=="Ponta Tempestade":
    casa="Baratheon"
elif regiao=="Ilha do Dragao":
    casa="Targaryen"
elif regiao=="Campina":
    casa="Tyrell"
elif regiao=="Winterfell":
    casa="Stark"
elif regiao=="Rochedo Casterly":
    casa="Lannister"
elif regiao=="Pyke":
    casa="Greyjoy"
elif regiao=="Correrio":
    casa="Tully"
elif regiao=="Ninho da Aguia":
    casa="Arryn"
elif regiao=="Dorne":
    casa="Martell"
else:
    casa="invalido"


if (casa == "invalido"):
    print("Entrada", regiao, "invalida")
else:
    print(casa)
#!#!#
1148#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao F - Regiao-Sobrenome do Bastardo
@author: IComp / UFAM
"""

regiao = input("Digite a Regiao: ")

if regiao=="Norte":
    sobr="Snow"
elif regiao=="Vale":
    sobr="Stone"
elif regiao=="Terras Fluviais":
    sobr="Rivers"
elif regiao=="Terras da Tempestade":
    sobr="Storm"
elif regiao=="Dorne":
    sobr="Sand"
elif regiao=="Ilhas de Ferro":
    sobr="Pyke"
elif regiao=="Campina":
    sobr="Flowers"
elif regiao=="Terras Ocidentais":
    sobr="Hill"
elif regiao=="Terras da Coroa":
    sobr="Waters"
else:
    sobr="invalido"

if (sobr == "invalido"):
    print("Entrada", regiao, "invalida")
else:
    print(sobr)

#!#!#
1146#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao A - Personagem – Ator/Atriz
@author: IComp / UFAM
"""

pers=input("Digite o personagem: ")

if pers=="Joffrey":
    ator="Jack Gleeson"
elif pers=="Robert":
    ator="Mark Addy"
elif pers=="Sandor":
    ator="Rory McCann"
elif pers=="Theon":
    ator="Alfie Allen"
elif pers=="Cersei":
    ator="Lena Headey"
elif pers=="Jaime":
    ator="Nikolaj Coster-Waldau"
elif pers=="Tyrion":
    ator="Peter Dinklage"
elif pers=="Jorah":
    ator="Iain Glen"
elif pers=="Jon":
    ator="Kit Harington"
else:
    ator="invalido"


if (ator == "invalido"):
    print("Entrada", pers, "invalida")
else:
    print(ator)
#!#!#
1147#;#;#"""
Avaliacao 3 (A3)
Junho de 2016
Questao 2
Versao G - Personagem Feminina-Pai
@author: IComp / UFAM
"""

pers = input("Digite: ")

if pers=="Sansa":
    pai="Eddard Stark"
elif pers=="Daenerys":
    pai="Aegon IV Targaryen"
elif pers=="Cersei Lannister":
    pai="Tywin Lannister"
elif pers=="Brienne":
    pai="Selwyn Tarth"
elif pers=="Arya":
    pai="Eddard Stark"
elif pers=="Margaery":
    pai="Garth Tyrell"
elif pers=="Catelyn":
    pai="Hoster Tully"
elif pers=="Meera":
    pai="Howland Reed"
else:
    pai="invalido"

if (pai == "invalido"):
    print("Entrada", pers, "invalida")
else:
    print(pai)
#!#!#
1132#;#;#NULL#!#!#
1133#;#;#NULL#!#!#
1134#;#;#NULL#!#!#
1135#;#;#NULL#!#!#
1136#;#;#NULL#!#!#
1137#;#;#from math import *

k = int(input())
e = 0
i = 0
while (i < k):
	e = e + 1/factorial(i)
	i = i + 1

print(round(e,8))	#!#!#
1138#;#;##!#!#
1139#;#;##!#!#
1140#;#;#NULL#!#!#
1141#;#;##!#!#
1142#;#;##!#!#
1163#;#;#NULL#!#!#
1170#;#;#NULL#!#!#
1162#;#;#NULL#!#!#
1166#;#;#NULL#!#!#
1160#;#;#NULL#!#!#
1173#;#;#NULL#!#!#
1155#;#;#NULL#!#!#
1169#;#;#NULL#!#!#
1153#;#;#NULL#!#!#
1157#;#;#NULL#!#!#
1156#;#;#NULL#!#!#
1159#;#;#NULL#!#!#
1164#;#;#NULL#!#!#
1175#;#;#NULL#!#!#
1174#;#;#NULL#!#!#
1161#;#;#NULL#!#!#
1165#;#;#NULL#!#!#
1171#;#;#NULL#!#!#
1152#;#;#NULL#!#!#
1167#;#;#NULL#!#!#
1154#;#;##!#!#
1179#;#;#NULL#!#!#
1180#;#;#NULL#!#!#
1181#;#;#NULL#!#!#
1182#;#;#NULL#!#!#
1183#;#;#import numpy as np

'''
#solucao mais simples:

vet = np.array(eval(input()))
print(vet[vet>=0])
'''

#solução esperado dos alunos:
vet = np.array(eval(input()))

i = 0
tam_copia = 0
while (i<vet.size):
    if(vet[i]>=0):
        tam_copia+=1
    i+=1

copia = np.empty(tam_copia, dtype=int)

i = 0
cont = 0
while (i<vet.size):
    if(vet[i]>=0):
        copia[cont] = vet[i]
        cont+=1
    i+=1

print(copia)#!#!#
1184#;#;#NULL#!#!#
1185#;#;#import numpy as np

'''
#solucao mais simples:
vet = np.array(eval(input()))
indices = np.argwhere(vet>99)
for i in indices:
    print(i[0])
print(indices.size)
'''

#solução esperada dos alunos:
vet = np.array(eval(input()))

i = 0
cont_glicose_alta = 0
while (i<vet.size):
    if(vet[i]>99):
        print(i)
        cont_glicose_alta+=1
    i+=1

print(cont_glicose_alta)#!#!#
1186#;#;## -*- coding: utf-8 -*-

datastr = input()
dia = datastr[:2]
mes = datastr[2:4]
ano = datastr[4:]

if mes =="01":
	mes = "janeiro"
elif mes == "02":
	mes = "fevereiro"
elif mes == "03":
	mes = "marco"
elif mes == "04":
	mes = "abril"
elif mes == "05":
	mes = "maio"
elif mes == "06":
	mes = "junho"
elif mes == "07":
	mes = "julho"
elif mes == "08":
	mes = "agosto"
elif mes == "09":
	mes = "setembro"
elif mes == "10":
	mes = "outubro"
elif mes == "11":
	mes = "novembro"
elif mes == "12":
	mes = "dezembro"

#print("{} de {} de {}".format(dia, mes, ano))
print(dia+" de "+mes+ " de "+ano)
#!#!#
1187#;#;#string = input()

print(string[0])
print(string[-1])
print(len(string))
print(string.lower())
print(string.upper())
print(string*500)#!#!#
1188#;#;#NULL#!#!#
1189#;#;#string = input().replace(' ', '')
print(string.upper())
if string==string[::-1]:
    print(1)
else:
    print(0)#!#!#
1203#;#;#NULL#!#!#
1204#;#;#NULL#!#!#
1205#;#;#NULL#!#!#
1206#;#;#from numpy import *

vetor = array(eval(input()))

salto_record = max(vetor)
cont = 0
i = 0
while (i < size(vetor)):
    if vetor[i] < salto_record:
        cont = cont + 1
    i = i + 1

print(round(salto_record, 2))
print(cont)
#!#!#
1207#;#;#NULL#!#!#
1208#;#;#NULL#!#!#
1209#;#;#NULL#!#!#
1210#;#;#NULL#!#!#
1211#;#;#NULL#!#!#
1212#;#;#NULL#!#!#
1213#;#;#NULL#!#!#
1214#;#;#NULL#!#!#
1192#;#;#NULL#!#!#
1193#;#;#NULL#!#!#
1194#;#;#NULL#!#!#
1195#;#;#NULL#!#!#
1196#;#;#NULL#!#!#
1197#;#;#NULL#!#!#
1198#;#;#NULL#!#!#
1199#;#;#NULL#!#!#
1200#;#;#NULL#!#!#
1201#;#;#NULL#!#!#
1202#;#;#NULL#!#!#
1218#;#;#NULL#!#!#
1219#;#;#NULL#!#!#
1220#;#;#NULL#!#!#
1221#;#;#NULL#!#!#
1222#;#;#NULL#!#!#
1223#;#;#from numpy import *
x = int(input("Número Base"))
for i in range(0,x):
    for j in range(0,x-i):
        print("*",end="")
    print("\n",end="")
for i in range(0,x):
    for j in range(0,i+1):
        print("*",end="")
    print("\n",end="")#!#!#
1224#;#;#NULL#!#!#
1225#;#;#from numpy import *

x = array(eval(input("Vetor: ")))
soma = 0.0
variancia = 0.0
for r in x :
    soma += r
media = soma / len( x )
for r in x :
    variancia += ( r - media ) ** 2
variancia /= len ( x ) -1
dp = math . sqrt ( variancia )
print(round(dp,3))#!#!#
1226#;#;#from numpy import *
x = array(eval(input("Produtório")))
media = sum(x)/size(x)
produto =1
for i in range(size(x)):
    produto=produto*abs(x[i]-media)
produto=produto**(1/size(x))
print(round(produto,3))#!#!#
1227#;#;#from numpy import *
x = input()
vog = "aA"
for i in vog:
	if i in x:
		x = x.replace(i,"")
print(x)#!#!#
1253#;#;#NULL#!#!#
1266#;#;#NULL#!#!#
1246#;#;#NULL#!#!#
1247#;#;#NULL#!#!#
1248#;#;#NULL#!#!#
1249#;#;#NULL#!#!#
1250#;#;#NULL#!#!#
1251#;#;#NULL#!#!#
1252#;#;#NULL#!#!#
1254#;#;#NULL#!#!#
1255#;#;#NULL#!#!#
1256#;#;#NULL#!#!#
1257#;#;#NULL#!#!#
1258#;#;#NULL#!#!#
1260#;#;#NULL#!#!#
1261#;#;#NULL#!#!#
1262#;#;#NULL#!#!#
1263#;#;#NULL#!#!#
1264#;#;#NULL#!#!#
1265#;#;#NULL#!#!#
1267#;#;#NULL#!#!#
1268#;#;#NULL#!#!#
1269#;#;#NULL#!#!#
1270#;#;#NULL#!#!#
1271#;#;#"""
Criado em 21 / 06 / 2015
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear
frutas = array([[3, 12, 1], [12, 0, 2], [0, 2, 3]])

# Vetor de constantes
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Indice da fruta mais cara (maior elemento do vetor)
maior = nonzero(preco == max(preco))

# Imprime nome da fruta mais cara
if maior[0] == 0:
    print("abacate")
elif maior[0] == 1:
    print("banana")
else:
    print("caqui")#!#!#
1272#;#;##!#!#
1273#;#;##!#!#
1274#;#;#from numpy import *
n = int(input())

m = ones((n,n),dtype = int)
for i in range(n):
	for j in range(n):
		if i <= j:
			m[i,j] = i + 1
		else: 
			m[i,j] = j + 1
			
print(m)	#!#!#
1275#;#;#from numpy import *

matriz = array(eval(input()))

horas = zeros(shape(matriz)[0],dtype = int)
i = 0
for linha in matriz:
	horas[i] = sum(linha)
	i = i + 1

print(horas)	#!#!#
1276#;#;#from numpy import*

quadro = array(eval(input("ht:")))

# No. de empregados (no. de linhas)
htrab = shape(quadro)[1]
# Vetor de contagem de horas de trabalho
total = zeros(htrab, dtype=int)
# Soma as horas trabalhadas para cada dia da semana
for j in range(htrab):
	total[j] = sum(quadro[:,j])
	
# Maior elemento do vetor
max_vetor = max(total)

j = 0
while (total[j] != max_vetor):
		j = j + 1
print(j+1)#!#!#
1277#;#;#from numpy import *

m = int(input())
n = int(input())

matriz = array([[0,2,11,6,15,11,1],[2,0,7,12,4,2,15],[11,7,0,11,8,3,13],[6,12,11,0,10,2,1],[15,4,8,10,0,5,13],[11,2,3,2,5,0,14],[1,15,13,1,13,14,0]])

l = m%10 - 1
c = n%10 - 1

print(matriz[l,c])
#!#!#
1278#;#;#NULL#!#!#
1279#;#;########
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab - 1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = xtab + 1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab - 1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab + 1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda + 1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
#!#!#
1280#;#;########
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

limiteX = shape(tabuleiro)[1] - 1
limiteY = shape(tabuleiro)[0] - 1

# Analise da jogada
for x in mov:

	if x == 'A' and xtab > 0 and tabuleiro[ytab,xtab -1] != 33:
		xtab = xtab - 1
    # Move personagem para DIREITA
	elif x == 'D' and xtab < limiteX  and tabuleiro[ytab,xtab +1] != 33:
		xtab = xtab + 1
    # Move personagem para CIMA
	elif x == 'W' and ytab > 0 and tabuleiro[ytab-1,xtab] != 33:
		ytab = ytab - 1
    # Move personagem para BAIXO
	elif x == 'S' and  ytab < limiteY  and tabuleiro[ytab+1,xtab] != 33:
		ytab = ytab + 1


	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda + 1
		# Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
   # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
#!#!#
1297#;#;#NULL#!#!#
1305#;#;#NULL#!#!#
1285#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2015/1
MATRIZES
Exercicio 01 - versao A
Criado em 08 / 08 / 2015
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- CONTAINERS
"""

from numpy import *
from numpy.linalg import *

##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["grande", "medio", "pequeno"]

# Matriz do sistema linear
mat = array([[4, 5, 2], [3, 2, 2], [2, 3, 3]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != max(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1308#;#;#NULL#!#!#
1287#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao C
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- PRECO DO LANCHE
"""

from numpy import *
from numpy.linalg import *

##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["suco", "x-salada", "acai"]

# Matriz do sistema linear
mat = array([[3, 2, 1], [2, 1, 2], [1, 3, 3]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 1))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != max(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1295#;#;#NULL#!#!#
1306#;#;#NULL#!#!#
1300#;#;#NULL#!#!#
1286#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2015/1
MATRIZES
Exercicio 01 - versao B
Criado em 25 / 06 / 2015
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- NUTRICIONISTA
"""

from numpy import *
from numpy.linalg import *

##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["abacate", "manga", "pera"]

# Matriz do sistema linear
mat = array([[10, 20, 30], [50, 40, 10], [30, 10, 40]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != min(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1303#;#;#NULL#!#!#
1309#;#;#NULL#!#!#
1290#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao F
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- MOVEIS
"""

from numpy import *
from numpy.linalg import *

# [16, 11, 18]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["cadeira", "bau", "mesa"]

# Matriz do sistema linear
mat = array([[10, 12, 15], [6, 8, 12], [12, 12, 18]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))
vet = vet * 60

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 1))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != max(solucao)):
    i = i + 1

print(nomes[i])
#!#!#
1299#;#;#NULL#!#!#
1289#;#;##!#!#
1304#;#;#NULL#!#!#
1293#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao I
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- TEATRO AMAZONAS
"""

from numpy import *
from numpy.linalg import *

#[558, 787, 615]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["plateia", "camarotes inferiores", "camarotes superiores"]

# Matriz do sistema linear
mat = array([[4, 6, 0], [2, 7, 8], [0, 3, 12]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != max(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1307#;#;#NULL#!#!#
1301#;#;#NULL#!#!#
1296#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao L
Criado em 10 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- ROMA MOTORS
"""

from numpy import *
from numpy.linalg import *

#[240, 69, 41]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["centurion", "tribune", "senator"]

# Matriz do sistema linear
mat = array([[8, 10, 16], [2, 3, 5], [1, 2, 3]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != min(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1288#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao D
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- ADUBACAO
"""

from numpy import *
from numpy.linalg import *

#[91, 260, 340, 430]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["titica", "barro no balde", "bestrume", "caca de vaca"]

# Matriz do sistema linear
mat = array([[5, 6, 5, 15], [10, 10, 50, 20], [10, 100, 20, 40], [100, 30, 20, 35]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != min(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1302#;#;#NULL#!#!#
1294#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao J
Criado em 10 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FABRICA DE SUCOS
"""

from numpy import *
from numpy.linalg import *

#[398, 164, 58]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["laranja", "manga", "abacaxi"]

# Matriz do sistema linear
mat = array([[10, 12, 9], [4, 4, 6], [2, 1, 1]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != min(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1298#;#;#NULL#!#!#
1292#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao H
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- MINERIO
"""

from numpy import *
from numpy.linalg import *

#[70, 181, 41]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["ametista", "esmeralda", "safira"]

# Matriz do sistema linear
mat = array([[8, 3, 1], [5, 12, 10], [1, 3, 2]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != max(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1291#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao G
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- COLCHOES
"""

from numpy import *
from numpy.linalg import *

#[82000, 51000, 18650]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["regular", "ortopedico", "infantil"]

# Matriz do sistema linear
mat = array([[50, 60, 40], [30, 40, 20], [10, 15, 8]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != min(solucao)):
    i = i + 1

print(nomes[i])#!#!#
1356#;#;#media = float(input())
B = float(input())
b = float(input())
h = float(input())
 
print(int(media*(h*(B+b)/2)))#!#!#
1368#;#;#casca_de_colmeia = 0.2
alho = 0.32
oleo_de_troll = 1.29
 
q_casca_de_colmeia = float(input())
q_alho = float(input())
q_oleo_de_troll = float(input())
 
n_casca_de_colmeia = q_casca_de_colmeia//casca_de_colmeia
n_alho = q_alho//alho
n_oleo_de_troll = q_oleo_de_troll//oleo_de_troll
 
print(int(min(n_casca_de_colmeia, n_alho, n_oleo_de_troll)))#!#!#
1374#;#;#q1 = int(input())
q2 = int(input())
q3 = int(input())

p1 = 1.50
p2 = 0.25
p3 = 1.20

impostos = p1*q1* 0.85 + p2*q2 * 0.95 + p3*q3* 0.73
print(round(impostos,2))

#!#!#
1172#;#;#NULL#!#!#
1168#;#;#NULL#!#!#
1158#;#;#NULL#!#!#
1326#;#;#print(40+35)#!#!#
1327#;#;#print(90-55)#!#!#
1328#;#;#print(20*35)#!#!#
1329#;#;#print(180/4)#!#!#
1330#;#;#print(round(250/6,2))#!#!#
1331#;#;#print(50//3)
print(50%3)
#!#!#
1332#;#;#aresta = 5

print(round((3*(3**0.5)*(aresta**2))/2,4))#!#!#
1333#;#;#print(30 - 3 ** 2 + 8 // 3 ** 2 * 10)#!#!#
1334#;#;#print("Adicao: ",8 + 0)
print("Subtracao:",8 -  0)
print("Multiplicacao: ",8 * 1)
print("Divisao: ",8/1)
print("Resto: ",8 % 9)
print("Potenciacao: ",8**1)
#!#!#
579#;#;#NULL#!#!#
1559#;#;#frase = "Ada Lovelace foi a primeira programadora da historia.".upper()

print(frase)
#!#!#
1560#;#;#frase = "Augusta Ada Byron, a Condessa de Lovelace, nasceu em 1815, na Inglaterra.".lower()

print(frase)
#!#!#
1570#;#;#"""
Created on Wed Mar 06 2019
Lab 01 – Ex 08
LEIA E CONVERTA PARA minúsculas
@author: IComp / UFAM
"""

entrada = input("Digite a string: ")

print(entrada.lower())
#!#!#
1571#;#;#"""
Created on Wed Mar 06 2019
Lab 01 – Ex 07
Leia e converta para MAIÚSCULAS
@author: IComp / UFAM
"""

entrada = input("Digite a string: ")
print(entrada.upper())#!#!#
1349#;#;#media = float(input())
a = float(input())
 
print(int(media*a*a*((25 + 10 * (5**0.5))**0.5)/4))#!#!#
1361#;#;# 
snowberry = (5**0.5 - 1)/4
sais_de_fogo = (5-2*(5**0.5))**0.5
amanita = 5 * (5 - 2*(5**0.5))
 
quantidade = int(input())
 
print(round(snowberry*quantidade, 2))
print(round(sais_de_fogo*quantidade, 2))
print(round(amanita*quantidade, 2))#!#!#
1369#;#;#flawless_ruby = 4.0
soul_gem = 3.14
oleo_de_dwarven = 10.0
 
q_flawless_ruby = float(input())
q_soul_gem = float(input())
q_oleo_de_dwarven = float(input())
 
n_flawless_ruby = q_flawless_ruby//flawless_ruby
n_soul_gem = q_soul_gem//soul_gem
n_oleo_de_dwarven = q_oleo_de_dwarven//oleo_de_dwarven
 
print(int(min(n_flawless_ruby, n_soul_gem, n_oleo_de_dwarven)))#!#!#
1350#;#;#from math import *
 
media = float(input())
a = float(input())
b = float(input())
 
print(int(media*pi*a*b))#!#!#
1354#;#;#from math import *
 
media = float(input())
raio = float(input())
 
print(round(media*pi*(raio**2), 2))#!#!#
1373#;#;#q1 = int(input())
q2 = int(input())
q3 = int(input())

p1 = 1.50
p2 = 0.25
p3 = 1.80

impostos = p1*q1* 0.15 + p2*q2 * 0.05 + p3*q3* 0.37
print(round(impostos,2))
#!#!#
1359#;#;#from math import *
 
ve = float(input())
mi = float(input())
mf = float(input())
 
delta_v = ve * log(mi/mf)
 
print(round(delta_v, 2))#!#!#
1363#;#;#from math import *
 
p = float(input())
 
flawless_ruby = 2**(1+p/1000)
soul_gem = p*(pi**2)/3141
oleo_de_dwarven = 2*((p/40)**0.5)
 
print(round(flawless_ruby, 2))
print(round(soul_gem, 2))
print(round(oleo_de_dwarven, 2))#!#!#
1375#;#;#NULL#!#!#
1353#;#;#NULL#!#!#
1362#;#;#from math import *
 
a = float(input())
 
casca_de_colmeia = (a/5) * ((9/5)**0.5)
alho = (a**2)/pi
oleo_de_troll = (5*a/3)**0.5
 
print(round(casca_de_colmeia, 2))
print(round(alho, 2))
print(round(oleo_de_troll, 2))#!#!#
1376#;#;#q1 = int(input())
q2 = int(input())
q3 = int(input())

p1 = 1.50
p2 = 0.25
p3 = 1.30

impostos = p1*q1* 0.15 + p2*q2 * 0.05 + p3*q3* 0.23
print(round(impostos,2))
#!#!#
1378#;#;## -*- coding: utf-8 -*-
port = float(input(""))
mat = float(input("")) * 2.0
fis = float(input(""))
qui = float(input(""))
hist = float(input(""))
geo = float(input(""))
ing = float(input("")) * 2.0

media = (port + mat + fis + qui + hist + geo + ing) / 9.0

print(round(media, 2))
#!#!#
1360#;#;#from math import *
 
delta_v = 9.7  # Entrar em orbita baixa terreste (LEO)
 
mf = float(input()) # Massa do foguete! (não é a massa final)
ve = float(input()) # Velocidade de exaustão efetiva (em km/s)
 
mc = mf/exp(-delta_v/ve) - mf
 
print(round(mc, 2))#!#!#
1351#;#;#media = float(input())
a = float(input())

print("%i" %(media*(3*((3*(a**2))**0.5)/2)))
#!#!#
1377#;#;#NULL#!#!#
1366#;#;#from math import *
 
a = radians(float(input()))
v = float(input())
g = 9.8;
 
d = v**2*sin(2*a)/g
 
print(round(d, 2))#!#!#
1352#;#;##!#!#
1372#;#;#flawless_ruby = 23.33/100.0
soul_gem = 18.32/100.0
oleo_de_dwarven = 58.35/100.0
 
quantidade = float(input())
 
print(round(flawless_ruby*quantidade, 2))
print(round(soul_gem*quantidade, 2))
print(round(oleo_de_dwarven*quantidade, 2))#!#!#
1370#;#;#snowberry = 8.42/100.0
sais_de_fogo = 19.83/100.0
amanita = 71.75/100.0
 
quantidade = float(input())
 
print(round(snowberry*quantidade, 2))
print(round(sais_de_fogo*quantidade, 2))
print(round(amanita*quantidade, 2))#!#!#
1355#;#;#from math import *
 
media = float(input())
a = float(input())
b = float(input())
 
print("%i" %(media*pi*a*b))#!#!#
1379#;#;#media = float(input())
a = float(input())
b = float(input())
 
print(round(media*(a*b/2)))#!#!#
1380#;#;#media = float(input())
B = float(input())
b = float(input())
h = float(input())
 
print(int(media*(h*(B+b)/2)))#!#!#
1364#;#;#from math import *
 
v = float(input())
d = float(input())
g = 9.8;
 
a = asin(d*g/v**2)*90/pi
 
print(round(a, 2))#!#!#
1367#;#;#snowberry = 0.31
sais_de_fogo = 0.73
amanita = 2.64
 
q_snowberry = float(input())
q_sais_de_fogo = float(input())
q_amanita = float(input())
 
n_snowberry = q_snowberry//snowberry
n_sais_de_fogo = q_sais_de_fogo//sais_de_fogo
n_amanita = q_amanita//amanita
 
print(int(min(n_snowberry, n_sais_de_fogo, n_amanita)))#!#!#
1371#;#;#casca_de_colmeia = 11.05/100.0
alho = 17.68/100.0
oleo_de_troll = 71.27/100.0
 
quantidade = float(input())
 
print(round(casca_de_colmeia*quantidade, 2))
print(round(alho*quantidade, 2))
print(round(oleo_de_troll*quantidade, 2))#!#!#
1365#;#;#from math import *
 
a = radians(float(input()))
d = float(input())
g = 9.8;
 
v = sqrt(d*g/sin(2*a))
 
print(round(v, 2))#!#!#
1382#;#;#NULL#!#!#
1384#;#;#NULL#!#!#
1381#;#;#NULL#!#!#
1383#;#;#NULL#!#!#
1385#;#;#NULL#!#!#
1386#;#;#NULL#!#!#
867#;#;##!#!#
1393#;#;#consumo = float(input("Consumo: "))
 
limiar = 5000
 
if (consumo < limiar):
    total = consumo * .05
else:
    total = 60 + consumo * 0.04
 
print(round(total, 2))#!#!#
1391#;#;#consumo = float(input("Consumo: "))
 
limiar = 150
 
if (consumo <= limiar):
    total = consumo * 0.6 + 5.0
else:
    total = 16 + consumo * 0.75
 
print(round(total, 2))#!#!#
1397#;#;#consumo = float(input("Consumo: "))
 
limiar = 10000
 
if (consumo <= limiar):
    total = consumo * 5.0
else:
    total = limiar * 5.0 + (consumo - limiar) * 4.
 
print(round(total, 2))#!#!#
1399#;#;#votoA = int(input("Votos em A: "))
votoB = int(input("Votos em B: "))
 
nomeA = "Ambrosio Rutra"
nomeB = "Demelza Olecram"
porc =  0
 
#print(votoA)
#print(votoB)
#print(votoA/(votoA+votoB))
#print(votoB/(votoB+votoA))
 
if (votoA > votoB):
    print(nomeA)
    porc = (votoA / (votoA + votoB)) * 100
else:
    print(nomeB)
    porc = (votoB / (votoA + votoB)) * 100
 
print(round(porc, 2))#!#!#
1400#;#;#ataque = input("Ataque: ")
rodadas = int(input("Rodadas: "))
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
 
if (ataque == "constricao"):
    dano = (d1 + d2 + 1) * rodadas
else:
    dano = d1 * d2
 
print(dano)#!#!#
1418#;#;#c1 = int(input("Mais votado: "))
c2 = int(input("Segundo lugar: "))
c3 = int(input("Menos votado: "))

validos = c1 + c2 + c3

if (c1 > (validos/2)):
	print('NAO')
else:
	print('SIM')#!#!#
1408#;#;#espada = input("Espada: ")
destreza = int(input("Destreza: "))
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
 
if (espada == "katana"):
    dano = 2 * (d1 + d2) + destreza
else:
    dano = (d1 + d2) + 2 * destreza
 
print(dano)#!#!#
1402#;#;#arma = input("Arma: ")
fator = int(input("Fator de sucesso: "))
 
if (arma == "machado"):
    dano = 30 * fator / 10
else:
    dano = 5 + 20 * fator / 10
 
print(int(dano))#!#!#
1410#;#;#a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

if (a < 0):
	print("BAIXO")
if (a == 0):
	print("INVALIDO")
if(a > 0):
	print("CIMA")#!#!#
1407#;#;#life = int(input("Pontos de vida: "))
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
d3 = int(input("Dado 3: "))
 
dano = 10 * (d1 + d2 + d3)
 
restante = life - dano
 
if (restante <= 0):
    print(0)
    print("MORTO")
else:
    print(restante)
    print("VIVO")#!#!#
1414#;#;#NULL#!#!#
1404#;#;#cabeca = input("cabeca: ")
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
d3 = int(input("Dado 3: "))
 
if (cabeca == "Aameul"):
    dano = 8 + (d1 + d2 + d3)
else:
    dano = 2 * (d1 + d2 + d3)
 
print(dano)#!#!#
1419#;#;#NULL#!#!#
1396#;#;#consumo = float(input("Consumo: "))
 
limiar = 300.0
 
if (consumo <= limiar):
    total = consumo * 1.1
else:
    total = consumo * 1.06
 
print(round(total, 2))#!#!#
1405#;#;#ataque = input("ataque: ")
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
 
if (ataque == "grito"):
    dano = 6 + (d1 + d2)
else:
    dano = (d1 + d2) ** 2
 
print(dano)#!#!#
1417#;#;#from math import *

a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

y  = ((b**2) - 4*a*c)/(4*a)

if y < 0:
	print("ABAIXO")
if y == 0:
	print("EIXO")
if y > 0:
	print("ACIMA")#!#!#
1390#;#;#consumo = float(input("Consumo: "))
 
limiar = 100
 
if (consumo <= limiar):
    total = consumo * 1.2
else:
    total = 25 + consumo * 1.4
 
print(round(total, 2))#!#!#
1394#;#;#horas = float(input("Horas: "))
 
limiar = 20
 
if (horas <= limiar):
    pagamento = horas * 50.
else:
    pagamento = limiar * 50. + (horas - limiar) * 70.
 
print(round(pagamento, 2))#!#!#
1401#;#;#ataque = input("Tipo de ataque: ")
baforadas = int(input("Baforadas: "))
 
if (ataque == 'maritimo'):
	dragao = "Viserion"
	unidades = baforadas * 40
else:
   dragao = "Drogon"
   unidades = baforadas * 150

print(dragao)
print(unidades)#!#!#
1398#;#;#consumo = float(input("Consumo: "))
 
limiar = 200
 
if (consumo <= limiar):
    total = 5000 + consumo * 100.0
else:
    total = 8000 + limiar * 100.0 + (consumo - limiar) * 90.
 
print(round(total, 2))#!#!#
1409#;#;#ataque = input("Ataque: ")
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
d3 = int(input("Dado 3: "))
d4 = int(input("Dado 4: "))
 
if (ataque == "espada"):
    dano = d1 + d2 + d3 + d4 + 24
else:
    dano = (d1 + d2 + d3) * d4
 
print(dano)#!#!#
1412#;#;#from math import *

a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

x = -b/(2*a)

if x < 0:
	print("ESQUERDA")
if x == 0:
	print("EIXO")
if x > 0:
	print("DIREITA")#!#!#
1413#;#;#ano = int(input())

if (ano < 0):
	print("ABY",abs(ano))
else:
	print("DBY",ano)
	#!#!#
1411#;#;#c1 = float(input("Mais votado: "))
c2 = float(input("Segundo lugar: "))
c3 = float(input("Menos votado: "))
branco = float(input("Em branco: "))
nulo = float(input("Nulos: "))

validos = c1 + c2 + c3

if (c1 > (validos/2)):
        print("PRIMEIRO")
else:
        print("SEGUNDO")#!#!#
1392#;#;#consumo = float(input("Consumo: "))
 
limiar = 10
 
if (consumo < limiar):
    total = 30 + consumo * 3
else:
    total = 30 + consumo * 3.5
 
print(round(total, 2))#!#!#
1395#;#;#vendas = float(input("Vendas: "))
 
limiar = 1000.0
 
if (vendas <= limiar):
    comissao = vendas * 0.05
else:
    comissao = limiar * 0.05 + (vendas - limiar) * .1
 
print(round(comissao, 2))#!#!#
1416#;#;#NULL#!#!#
1403#;#;#armadura = input("armadura: ")
fator = int(input("Fator de sucesso: "))
 
if (armadura == "malha"):
    dano = 15 * fator - 1
else:
    dano = 20 * fator - 18
 
print(int(dano))#!#!#
1406#;#;#ataque = input("ataque: ")
d1 = int(input("Dado 1: "))
turnos = int(input("Turnos: "))
 
if (ataque == "cauda"):
    dano = d1 * turnos
else:
    dano = 2 * d1 * turnos
 
print(dano)#!#!#
1415#;#;#NULL#!#!#
1478#;#;#atividade = input("Atividade: ").upper()
duracao = int(input("Duracao: "))
calorias = -1

if (duracao >= 0 and duracao <= 600):
  if (atividade == "ALONGAMENTO"):
    calorias = duracao * 3
  elif (atividade == "CORRIDA"):
  	calorias = duracao * 10.3
  elif (atividade == "DANCA"):
  	calorias = duracao * 6.7
  elif (atividade == "ESCALADA"):
  	calorias = duracao * 9.7
  elif (atividade == "HIDROGINASTICA"):
  	calorias = duracao * 5
  elif (atividade == "IOGA"):
  	calorias = duracao * 1.7
  elif (atividade == "PATINS"):
  	calorias = duracao * 6.5
  elif (atividade == "REMO"):
    calorias = duracao * 9.3
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (calorias != -1):
    print(round(calorias,2))    #!#!#
1479#;#;#atividade = input("Atividade: ").upper()
calorias = int(input("Calorias: "))
tempo = -1

if (calorias >= 0 and calorias <= 6000):
  if (atividade == "ALONGAMENTO"):
    tempo = calorias / 3
  elif (atividade == "CORRIDA"):
  	tempo = calorias / 10.3
  elif (atividade == "DANCA"):
  	tempo = calorias / 6.7
  elif (atividade == "ESCALADA"):
  	tempo = calorias / 9.7
  elif (atividade == "HIDROGINASTICA"):
  	tempo = calorias / 5
  elif (atividade == "IOGA"):
  	tempo = calorias / 1.7
  elif (atividade == "PATINS"):
  	tempo = calorias / 6.5
  elif (atividade == "REMO"):
    tempo = calorias / 9.3
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (tempo != -1):
    print(round(tempo,2))#!#!#
1480#;#;#alimento = input("Alimento: ").upper()
quantidade = int(input("Quantidade: "))
calorias = -1

if (quantidade >= 0 and quantidade <= 5000):
  if (alimento == "BANANA"):
    calorias = quantidade * 0.97
  elif (alimento == "BIFE"):
  	calorias = quantidade * 2.95
  elif (alimento == "BRIGADEIRO"):
  	calorias = quantidade * 5
  elif (alimento == "FEIJOADA"):
  	calorias = quantidade * 1.27
  elif (alimento == "GELATINA"):
  	calorias = quantidade * 0.67
  elif (alimento == "MAMAO"):
  	calorias = quantidade * 0.68
  elif (alimento == "OMELETE"):
  	calorias = quantidade * 1.04
  elif (alimento == "TOMATE"):
    calorias = quantidade * 0.2
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (calorias != -1):
    print(round(calorias,2))#!#!#
1481#;#;#alimento = input("Alimento: ").upper()
calorias = int(input("Calorias: "))
quantidade = -1

if (calorias >= 0 and calorias <= 10000):
  if (alimento == "BANANA"):
    quantidade = calorias / 0.97
  elif (alimento == "BIFE"):
  	quantidade = calorias / 2.95
  elif (alimento == "BRIGADEIRO"):
  	quantidade = calorias / 5
  elif (alimento == "FEIJOADA"):
  	quantidade = calorias / 1.27
  elif (alimento == "GELATINA"):
  	quantidade = calorias / 0.67
  elif (alimento == "MAMAO"):
  	quantidade = calorias / 0.68
  elif (alimento == "OMELETE"):
  	quantidade = calorias / 1.04
  elif (alimento == "TOMATE"):
    quantidade = calorias / 0.2
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (quantidade != -1):
    print(round(quantidade,2))#!#!#
1486#;#;#ingrediente = input("Ingrediente: ").upper()
quantidade = int(input("Quantidade (em gramas): "))
receitas = -1

if (quantidade >= 1 and quantidade <= 10000):
  if (ingrediente == "ARROZ"):
    receitas = quantidade // 500
  elif (ingrediente == "CENOURA"):
  	receitas = quantidade // 100
  elif (ingrediente == "KAMPYO"):
  	receitas = quantidade // 20
  elif (ingrediente == "NORI"):
  	receitas = quantidade // 50
  elif (ingrediente == "OMELETE"):
  	receitas = quantidade // 200
  elif (ingrediente == "PEPINO"):
  	receitas = quantidade // 150
  elif (ingrediente == "SALMAO"):
  	receitas = quantidade // 300
  elif (ingrediente == "SHITAKE"):
    receitas = quantidade // 150
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (receitas != -1):
    print(int(receitas))#!#!#
1492#;#;#consumo = int(input("Horas trabalhadas: "))

limiar = 10

if (consumo <= limiar):
    total = consumo * 50. + 500
elif (consumo > 10 and consumo <= 20):
    total = consumo * 60. + 600
elif (consumo > 20 and consumo <= 30):
    total = consumo * 70. + 700
else:
    total = consumo * 80. + 800

print(round(total, 2))#!#!#
1503#;#;##!#!#
1485#;#;#magia = input("Magia: ").upper()
face = int(input("Quantas vezes sera usada: "))
mana = -1

if (face >= 1 and face <= 20):
  if (magia == "CONGELAMENTO"):
    mana = face * 2
  elif (magia == "EXPLOSAO"):
  	mana = face * 2
  elif (magia == "HIBERNACAO"):
  	mana = face * 4
  elif (magia == "METAMORFOSE"):
  	mana = face * 1
  elif (magia == "PURIFICACAO"):
  	mana = face * 1
  elif (magia == "RESSURREICAO"):
  	mana = face * 6
  elif (magia == "TELETRANSPORTE"):
  	mana = face * 6
  elif (magia == "VENENO"):
    mana = face * 2
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (mana != -1):
    print(mana)#!#!#
1499#;#;#NULL#!#!#
1504#;#;#NULL#!#!#
1483#;#;#equipamento = input("Equipamento: ").upper()
quantidade = int(input("Quantidade: "))
peso = -1

if (quantidade >= 0 and quantidade <= 1000):
  if (equipamento == "COMPUTADOR"):
    peso = quantidade * 12
  elif (equipamento == "FREEZER"):
  	peso = quantidade * 52
  elif (equipamento == "FURADEIRA"):
  	peso = quantidade * 1.7
  elif (equipamento == "LIQUIDIFICADOR"):
  	peso = quantidade * 1.8
  elif (equipamento == "MICROONDAS"):
  	peso = quantidade * 15
  elif (equipamento == "NOTEBOOK"):
  	peso = quantidade * 2.5
  elif (equipamento == "TELEVISOR"):
  	peso = quantidade * 15
  elif (equipamento == "VENTILADOR"):
    peso = quantidade * 2.4
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (peso != -1):
    print(round(peso,2))#!#!#
1506#;#;#NULL#!#!#
1494#;#;#consumo = float(input("Consumo: "))

limiar = 100.0

if (consumo <= limiar):
    total = consumo * 1.1
elif (consumo > limiar and consumo <= 200):
    total = consumo * 1.09
elif (consumo > 200 and consumo <= 300):
    total = consumo * 1.08
else:
    total = consumo * 1.07

print(round(total, 2))#!#!#
1500#;#;#NULL#!#!#
1487#;#;#ingrediente = input("Ingrediente: ").upper()
receitas = int(input("Quantidade de receitas: "))
quantidade = -1

if (receitas >= 1 and receitas <= 50):
  if (ingrediente == "ARROZ"):
    quantidade = receitas * 500
  elif (ingrediente == "CENOURA"):
  	quantidade = receitas * 100
  elif (ingrediente == "KAMPYO"):
  	quantidade = receitas * 20
  elif (ingrediente == "NORI"):
  	quantidade = receitas * 50
  elif (ingrediente == "OMELETE"):
  	quantidade = receitas * 200
  elif (ingrediente == "PEPINO"):
  	quantidade = receitas * 150
  elif (ingrediente == "SALMAO"):
  	quantidade = receitas * 300
  elif (ingrediente == "SHITAKE"):
    quantidade = receitas * 150
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (quantidade != -1):
    print(quantidade)#!#!#
1497#;#;#consumo = int(input("Consumo: "))

limiar = 100

if (consumo <= limiar):
    total = consumo * 2.0 + 100
elif (consumo > limiar and consumo <= 2500):
    total = consumo * 1.8 + 150
elif (consumo > 2500 and consumo <= 10000):
    total = consumo * 1.5 + 200
else:
    total = consumo * 1.2 + 250

print(round(total, 2))#!#!#
1495#;#;#consumo = int(input("Consumo: "))

limiar = 10000

if (consumo <= limiar):
    total = consumo * 6.0 + 100
elif (consumo > limiar and consumo <= 20000):
    total = consumo * 5.5 + 150
elif (consumo > 2000 and consumo <= 3000):
    total = consumo * 5.0 + 200
else:
    total = consumo * 4.5 + 250

print(round(total, 2))#!#!#
1505#;#;#NULL#!#!#
1490#;#;#consumo = float(input("Consumo: "))

if (consumo <= 10):
    total = consumo * 3 + 15
elif (consumo > 10 and consumo <= 15):
    total = consumo * 3.5 + 20
elif (consumo > 15 and consumo <= 20):
    total = consumo * 4 + 25
else:
    total = consumo * 4.5 + 30

print(round(total, 2))#!#!#
1498#;#;#NULL#!#!#
1482#;#;#a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

if (a < 0):
	print("MAXIMO")
if (a > 0):
	print("MINIMO")
if(a == 0):
	print("INVALIDO")#!#!#
1484#;#;#equipamento = input("Equipamento: ").upper()
capacidade = int(input("Capacidade: "))
quantidade = -1

if (capacidade >= 0 and capacidade <= 1000):
  if (equipamento == "COMPUTADOR"):
    quantidade = capacidade // 12
  elif (equipamento == "FREEZER"):
  	quantidade = capacidade // 52
  elif (equipamento == "FURADEIRA"):
  	quantidade = capacidade // 1.7
  elif (equipamento == "LIQUIDIFICADOR"):
  	quantidade = capacidade // 1.8
  elif (equipamento == "MICROONDAS"):
  	quantidade = capacidade // 15
  elif (equipamento == "NOTEBOOK"):
  	quantidade = capacidade // 2.5
  elif (equipamento == "TELEVISOR"):
  	quantidade = capacidade // 15
  elif (equipamento == "VENTILADOR"):
    quantidade = capacidade // 2.4
  else:
    print("Entrada invalida")
else:
  print("Entrada invalida")

if (quantidade != -1):
    print(int(quantidade))#!#!#
1488#;#;#consumo = int(input("Consumo: "))

if (consumo <= 100):
    total = consumo * 1.2 + 1
elif (consumo > 100 and consumo <=200):
    total = consumo * 1.3 + 10
elif (consumo > 200 and consumo <=300):
    total = consumo * 1.4 + 20
else:
    total = consumo * 1.5 + 25

print(round(total, 2))#!#!#
1489#;#;#consumo = int(input("Consumo: "))

if (consumo <= 150):
    total = consumo * 0.6 + 5.0
elif (consumo > 150 and consumo <= 250):
    total = consumo * 0.65 + 8.0
elif (consumo > 250 and consumo <= 350):
    total = consumo * 0.7 + 12.0
else:
    total = consumo * 0.75 + 16.0

print(round(total, 2))#!#!#
1491#;#;#consumo = float(input("Consumo: "))

if (consumo <= 5000):
    total = consumo * 0.03 + 20
elif (consumo > 5000 and consumo <= 6000):
    total = consumo * 0.04 + 25
elif (consumo > 6000 and consumo <= 7000):
    total = consumo * 0.05 + 30
else:
    total = consumo * 0.06 + 35

print(round(total, 2))#!#!#
1493#;#;#extras = float(input("Horas extras: "))
faltas = float(input("Horas faltadas: "))

h = extras - ((3/5) * faltas)

if (h > 180):
        gratificacao = 200.0
else:
        gratificacao = 100.0
        
print(extras, "extras e", faltas, "de falta")
print("R$", round(gratificacao, 2))#!#!#
1496#;#;#consumo = int(input("Consumo: "))

limiar = 100

if (consumo <= limiar):
    total = consumo * 80.0 + 3000
elif (consumo > limiar and consumo <= 200):
    total = consumo * 90.0 + 4000
elif (consumo > 200 and consumo <= 300):
    total = consumo * 100.0 + 5000
else:
    total = consumo * 110.0 + 6000

print(round(total, 2))#!#!#
1501#;#;#NULL#!#!#
1502#;#;#NULL#!#!#
1507#;#;#NULL#!#!#
1561#;#;#NULL#!#!#
1562#;#;#NULL#!#!#
1522#;#;#N0 = int(input("Estoque inicial: "))
D = int(input("Despesa mensal: "))
M = int(input("Moedas coletadas: "))
R = int(input("Moedas roubadas: "))

moedas = N0

tempo = 0
while (moedas > 0):
    moedas = moedas + M - D - R
    tempo = tempo + 1

print(tempo)#!#!#
1523#;#;#B0 = int(input("Estoque inicial: "))
C = int(input("Baloes construidos: "))
D = int(input("Baloes destruidos: "))

baloes = B0

tempo = 0
while (baloes < 200):
    baloes = baloes + C - D
    tempo = tempo + 1

print(tempo)#!#!#
1524#;#;#G0 = int(input("Grifos iniciais: "))
X = int(input("Grifos treinados: "))
Y = int(input("Grifos doentes: "))

grifos = G0

tempo = 0
while (grifos > 0):
    grifos = grifos + X - Y
    tempo = tempo + 1

print(tempo)#!#!#
1525#;#;#vol0 = int(input("Volume inicial: "))
vol_in = int(input("Volume que entra: "))
vol_out = int(input("Volume que sai: "))

volume = vol0

tempo = 0
while (volume > 1000):
    volume = volume + vol_in - vol_out
    tempo = tempo + 1

print(tempo)#!#!#
1526#;#;#M0 = int(input("Mana inicial: "))
X = int(input("Mana gasto: "))
Y = int(input("Mana recuperado: "))

mana = M0

tempo = 0
while (mana > 0):
    mana = mana - X + Y
    tempo = tempo + 1

print(tempo)#!#!#
1527#;#;## Entrada de dados e definicao de constantes
segForseti = int(input('Seguidores de Forseti: '))
segLoki = int(input('Seguidores de Loki: '))
taxaForseti = float(input('Taxa de crescimento de Forseti: '))
taxaLoki = float(input('Taxa de crescimento de Loki: '))

anos = 0

while (segForseti >= segLoki):
    segForseti = segForseti * (1. + taxaForseti / 100.)
    segLoki = segLoki * (1. + taxaLoki / 100.)
    anos = anos + 1

print(anos)#!#!#
1528#;#;#ferida = int(input("PF retirado por guerreiro: "))
PF0 = int(input("PF inicial do Troll: "))
recupera = int(input("PF recuperado: "))

forca = PF0

tempo = 0
while (forca > 0):
    forca = forca - 5 * ferida + recupera
    tempo = tempo + 1

print(tempo)#!#!#
1529#;#;## Entrada de dados e definicao de constantes
inf = int(input('Infantaria inicial: '))
cav = int(input('Cavalaria inicial: '))
taxaInf = float(input('Taxa de crescimento da Infantaria: '))
taxaCav = float(input('Taxa de crescimento da Cavalaria: '))

tempo = 0

while (inf + cav < 50000):
    inf = inf * (1. + taxaInf / 100.)
    cav = cav * (1. + taxaCav / 100.)
    tempo = tempo + 1

print(tempo)#!#!#
1530#;#;## Entrada de dados e definicao de constantes
perg = int(input('Qtde inicial de pergaminhos: '))
vari = int(input('Qtde inicial de varinhas: '))
taxaPerg = float(input('Taxa de crescimento de Pergaminhos: '))
taxaVari = float(input('Taxa de crescimento de Varinhas: '))

tempo = 0

while (perg + vari < 80000):
    perg = perg * (1. + taxaPerg / 100.)
    vari = vari * (1. + taxaVari / 100.)
    tempo = tempo + 1

print(tempo)#!#!#
1521#;#;#X = int(input("Capacidade do navio: "))
Y = int(input("Estoque inicial: "))
Z = int(input("Novos containers: "))

estoque = Y

tempo = 0
while (estoque > 0):
    estoque = estoque - X + Z
    tempo = tempo + 1

print(tempo)#!#!#
1531#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 10

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont) / factorial(2*cont)
	sinal = - sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
1532#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 9

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont+1) / factorial(2*cont+1)
	sinal = sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
1533#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont) / factorial(2*cont)
	sinal = sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
1534#;#;#from math import *
# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 7

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont+1) / (2*cont+1)
	sinal = sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
1535#;#;#from math import *
# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 6

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont+1) / (2*cont+1)
	sinal = - sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
1536#;#;#from math import *
# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 10

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(cont) / (cont)
	sinal = - sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
1537#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 9

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(cont) / factorial(cont)
	sinal = sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
1538#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont)
	sinal = - sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
1539#;#;## Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 7

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(cont)
	sinal = - sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
1540#;#;## -*- coding: utf-8 -*-
"""
Introducao a Programacao de Computadores
TP 04 - Questão 2 - J - Serie de Maclaurin do Cosseno da Raiz Quadrada
@author: IComp / UFAM
Criado em 06 / 12 / 2016
"""

from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 6

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(cont) / factorial(2*cont)
	sinal = - sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
1541#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  21 14:16:48 AMT 2016
TP 04 - Questão 3 - A - O Clerigo Anaximandro
@author: IComp / UFAM
"""
F = int(input("Pontos de forca: "))
V = int(input("Veneno da Quimera: "))

forca = F - V

rod = 0
while (forca < F and forca > 0):
    X = int(input("Pontos da Pocao: "))
    forca = forca + X
    rod = rod + 1

if (forca >= F):
    print("RECUPEROU")
else:
    print("MORREU")

print(rod)#!#!#
1542#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  21 14:16:48 AMT 2016
TP 04 - Questão 3 - B - O Clerigo Xenofanes
@author: IComp / UFAM
"""

forca = 10

frascos = 0
while (forca < 100 and frascos < 10 and forca > 0):
    X = int(input("Pontos da Pocao: "))
    forca = forca + X
    frascos = frascos + 1

if (forca >= 100):
    print("VIVEU")
else:
    print("MORREU")

print(frascos)#!#!#
1543#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  21 14:16:48 AMT 2016
TP 04 - Questão 3 - C - Onibus articulado
@author: IComp / UFAM
"""

N = int(input("Passageiros iniciais: "))

passageiros = N
lotacao = 160

parada = 0
while (passageiros < lotacao):
    X = int(input("Descem: "))
    Y = int(input("Sobem: "))
    passageiros = passageiros - X + Y
    parada = parada + 1

print(parada)#!#!#
1544#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  21 14:16:48 AMT 2016
TP 04 - Questão 3 - C - A floresta de de Seleucia 
@author: IComp / UFAM
"""

floresta = 1000000 * 0.9

anos = 0
while (floresta < 1000000 and floresta > 0):
    D = int(input("Arvores Derrubadas: "))
    R = int(input("Arvores Replantadas: "))
    floresta = floresta - D + R
    anos = anos + 1

if (floresta <= 0):
    print("ACABOU")
else:
    print("RECUPEROU")
    
print(anos)#!#!#
1545#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  21 14:16:48 AMT 2016
TP 04 - Questão 3 - C - A floresta de de Seleucia 
@author: IComp / UFAM
"""

floresta = 1000000 * 0.9

anos = 0
while (floresta < 1000000 and floresta > 0):
    D = int(input("Arvores Derrubadas: "))
    R = int(input("Arvores Replantadas: "))
    floresta = floresta - D + R
    anos = anos + 1

if (floresta <= 0):
    print("ACABOU")
else:
    print("RECUPEROU")
    
print(anos)#!#!#
1546#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  21 14:16:48 AMT 2016
TP 04 - Questão 3 - F - E agora, Aspasia?
@author: IComp / UFAM
"""

salario = 6000
gastos = 5000

anos = 0
while (gastos <= salario):
    aumento  = float(input("Aumento: "))
    inflacao = float(input("Inflacao: "))
    salario = salario * (1. + aumento/100)
    gastos  = gastos * (1. + inflacao/100)
    anos = anos + 1

print(anos)
print(round(gastos - salario, 2))#!#!#
1547#;#;#NULL#!#!#
1548#;#;#NULL#!#!#
1549#;#;#NULL#!#!#
1550#;#;#NULL#!#!#
1551#;#;#NULL#!#!#
1552#;#;#NULL#!#!#
1553#;#;#NULL#!#!#
1554#;#;#NULL#!#!#
1555#;#;#NULL#!#!#
1556#;#;#NULL#!#!#
1557#;#;#NULL#!#!#
1558#;#;#NULL#!#!#
672#;#;#import numpy as np
n = int(input())
print(np.ones(n, dtype=int))#!#!#
674#;#;## Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
v = eval(input())

print(len(v))
print((v[0]))
print((v[-1]))
print(max(v))
print(min(v))
print(sum(v))
print(round(sum(v)/len(v),2))









#!#!#
1576#;#;#import numpy as np

eusapia = np.array(eval(input()), dtype=int)
barsanulfo = np.array(eval(input()), dtype=int)

i = 0
vitoria_eusapia = 0
vitoria_barsanulfo = 0

while (i<eusapia.size):
    if (eusapia[i]==11 and barsanulfo[i]==22):
        vitoria_barsanulfo+=1
    elif (eusapia[i]==11 and barsanulfo[i]==33):
        vitoria_eusapia+=1
    elif (eusapia[i]==22 and barsanulfo[i]==11):
        vitoria_eusapia+=1
    elif (eusapia[i]==22 and barsanulfo[i]==33):
        vitoria_barsanulfo+=1
    elif (eusapia[i]==33 and barsanulfo[i]==11):
        vitoria_barsanulfo+=1
    elif (eusapia[i]==33 and barsanulfo[i]==22):
        vitoria_eusapia+=1
    i+=1

print(eusapia.size)
    
if (vitoria_eusapia>vitoria_barsanulfo):
    print('EUSAPIA')
elif (vitoria_barsanulfo>vitoria_eusapia):
    print('BARSANULFO')
else:
    print('EMPATE')#!#!#
1577#;#;#from numpy import *
a = float(input())
v0 = float(input())
N = int(input())

v = zeros(N)
i = 0
while i < N:
	d = a*i**2/2 + v0*i
	v[i] = d
	i = i + 1
print(v)	#!#!#
1580#;#;##!#!#
762#;#;##!#!#
1583#;#;##!#!#
1597#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-E - Desconto em Compras
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   231.4
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
   if (v[i] > 80):
   	descontos = descontos + 5
   i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
1604#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-B - Campeonato de Arco e Flecha
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   190
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 0
i = 0

while (i < size(v)):
    if (v[i] == 1):
        pontos = pontos + 80
    elif (v[i] == 2):
        pontos = pontos + 40
    elif (v[i] == 3):
        pontos = pontos + 20
    elif (v[i] == 4):
        pontos = pontos + 10
    i = i + 1

print(pontos)#!#!#
1617#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-E - Danos de um Exército de Combatentes
@author: IComp / UFAM

Exemplo de Entrada:
["DAEDRIC", "FERRO", "CENOURA", "FERRO"]
[2, 1, 5, 8]

Exemplo de Saída:
74
"""

from numpy import *

espadas = array(eval(input("Espadas: ")))
niveis = array(eval(input("Niveis: ")))

danos = 0
i = 0

while (i < size(espadas)):
    if (espadas[i] == "CENOURA"):
        danos = danos + 2*niveis[i]
    elif (espadas[i] == "FERRO"):
        danos = danos + 4*niveis[i]
    elif (espadas[i] == "DWARVEN"):
        danos = danos + 8*niveis[i]
    elif (espadas[i] == "ELVEN"):
        danos = danos + 11*niveis[i]
    elif (espadas[i] == "DAEDRIC"):
        danos = danos + 14*niveis[i]
    i = i + 1

print(danos)#!#!#
1594#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-A - Ataque do Gato de Sabre
Exemplo de Entrada: [2, 4, 9]
Exemplo de Saída:   37
@author: IComp / UFAM
"""

from numpy import *

# Leitura do vetor
v = array(eval(input("Informe o vetor:")))

i = 0       # variavel contadora    
soma = 0    # variavel acumuladora 

while (i < size(v)):
   soma = soma + v[i]*(i + 1)
   i = i + 1

print(soma)#!#!#
1611#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-I - Custo de Gravação
@author: IComp / UFAM

Exemplo de Entrada:
IPC

Exemplo de Saída:
0.49
"""

from numpy import *

palavra = input("Palavra:")

total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 0.15
	else:
		total = total + 0.17
	i = i + 1

print(round(total, 2))
#!#!#
1618#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 3-F - Função Polinomial
Exemplo de Entrada: [25, 46, 37, 36]
Exemplo de Saída:   25x^3 + 46x^2 + 37x + 36
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe os termos: ")))

i = 0
saida = ""

while (i < size(v)):
	if(i == size(v)-1):
		saida = saida + str(v[i])
	elif(i == size(v)-2):
		saida = saida + str(v[i]) + "x + "
	else:
		saida = saida + str(v[i]) + "x^" + str(size(v) - i - 1) + " + "
	i = i + 1

print(saida)
#!#!#
1593#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-A - Média dos Trabalhos
Exemplo de Entrada: [1.5, 4.2, 9.0]
Exemplo de Saída:   6.15
@author: IComp / UFAM
"""

from numpy import *

# Leitura do vetor
v = array(eval(input("Informe o vetor:")))

i = 0       # variavel contadora    
soma = 0    # variavel acumuladora 
denom = 0;

while (i < size(v)):
    peso = i + 1
    soma = soma + v[i]*peso
    denom = denom + peso
    i = peso

print(round(soma/denom,2))#!#!#
1607#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-E - Distância Total do Elevador
Exemplo de Entrada: [1, 12, 20, 5, 1]
Exemplo de Saída:   114
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe os andares:")))

i = 0
total = 0;

while (i < size(v)-1):
   total = total + abs(v[i]-v[i+1])
   i = i + 1

print(total*3)
#!#!#
1619#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 3-G - Custo do Cuveiro
@author: IComp / UFAM

Exemplo de Entrada:
[14, 21, 5, 30]
["MORNO", "QUENTE", "FRIO", "QUENTE"]

Exemplo de Saída:
26.1
"""

from numpy import *

tarifa = 0.005
tempos = array(eval(input("Informe os tempos: ")))
modos = array(eval(input("Informe os modos: ")))

i = 0
custo = 0

while (i < size(tempos)):
	if (modos[i] == "QUENTE"):
		custo = custo + tempos[i]*90*tarifa
	elif (modos[i] == "MORNO"):
		custo = custo + tempos[i]*45*tarifa
	i = i + 1

print(round(custo, 2))
#!#!#
1595#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-C - Média Excluindo a Menor Nota
Exemplo de Entrada: [1.5, 4.2, 9.1]
Exemplo de Saída:   6.65
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))
soma = sum(v)
soma2 = soma - min(v)
media = soma2/(size(v)-1)

print(round(media,2))#!#!#
1596#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-D - Média na Criação de Poções
Exemplo de Entrada: [1.5, 4.2, 9.1]
Exemplo de Saída:   6.65
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))
soma = sum(v)
soma = soma - min(v)
media = soma/(size(v)-1)

print(round(media,2))#!#!#
1598#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-F - Desconto na Loja Angeline's Aromatics
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   231.4
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
    if (v[i] > 90):
        descontos = descontos + 6.5
    i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
1599#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-G - Desconto Percentual em Compras
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   211.49
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
    if (v[i] > 80):
        descontos = descontos + v[i]*0.15
    i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
1600#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-H - Desconto na Loja Bits and Pieces
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   211.49
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
	if (v[i] > 80):
		descontos = descontos + v[i]*0.15
	i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
1601#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 1-I - Ganhador e Perdedor da Corrida
@author: IComp / UFAM

Exemplo de Entrada:
[45.2, 30.25, 90.2, 150.3, 65.5]

Exemplo de Saída:
1
"""

from numpy import *

v = array(eval(input("Informe os tempos:")))

ganhador = 0
tempo_ganhador = v[0]
i = 1

while (i < size(v)):
	if (v[i] < tempo_ganhador):
		tempo_ganhador = v[i]
		ganhador = i
	i = i + 1

print(ganhador)
#!#!#
1602#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 1-J - Último lugar da Corrida
@author: IComp / UFAM

Exemplo de Entrada:
[45.2, 30.25, 90.2, 150.3, 65.5]

Exemplo de Saída:
3
"""

from numpy import *

v = array(eval(input("Informe os tempos:")))

ultimo = 0
tempo_ultimo = v[0]
i = 1

while (i < size(v)):
	if (v[i] > tempo_ultimo):
		tempo_ultimo = v[i]
		ultimo = i
	i = i + 1

print(ultimo)
#!#!#
1603#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-A - Tiro ao Alvo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   180
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 0
i = 0

while (v[i] < 4):
    if (v[i] == 1):
        pontos = pontos + 80
    elif (v[i] == 2):
        pontos = pontos + 40
    elif (v[i] == 3):
        pontos = pontos + 20
    i = i + 1

print(pontos)#!#!#
1605#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-C - Tiro ao Alvo Multiplicativo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   1600
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 200
i = 0

while (i < size(v)):
    if (v[i] == 1):
        pontos = pontos*4
    elif (v[i] == 2):
        pontos = pontos*2
    elif (v[i] == 4):
        pontos = pontos/2
    i = i + 1

print(round(pontos,2))#!#!#
1606#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-D - Total de Andares do Elevador
Exemplo de Entrada: [1, 12, 20, 5, 1]
Exemplo de Saída:   38
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe os andares:")))

i = 0
total = 0;

while (i < size(v)-1):
	total = total + abs(v[i]-v[i+1])
	i = i + 1

print(total)
#!#!#
1608#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-F - Entrada e Saída do Ônibus
@author: IComp / UFAM

Exemplo de Entrada:
[35, 32, -3, 15, -8]

Exemplo de Saída:
67
"""

from numpy import *

entradas = array(eval(input("Entradas:")))

total = 0
i = 0;

while (i < size(entradas)):
    total = total + entradas[i]
    if (total > 75):
        total = 75
    i = i + 1

print(total)#!#!#
1609#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-G - Busca no Dicionário do Cebolinha
@author: IComp / UFAM

Exemplo de Entrada:
["ALALA", "CACHOLLO", "GATO", "PLEGUICA", "LATO"]

Exemplo de Saída:
3
"""

from numpy import *

dicionario = array(eval(input("Dicionario:")))
palavra = input("Palavra:").replace("R", "L")

i = 0
indice = -1;

while (i < size(dicionario)):
	if (dicionario[i] == palavra):
		indice = i
	
	i = i + 1

if (indice >= 0):
	print(indice)
else:
	print("NAO ENCONTRADA")
#!#!#
1610#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-H - Soma de um Arquivo CSV
@author: IComp / UFAM

Exemplo de Entrada:
3,45,12,6,28,67

Exemplo de Saída:
161
"""

from numpy import *

vetor = input("CSV:").split(",")

soma = 0
i = 0
while (i<size(vetor)):
    soma = soma + int(vetor[i])
    i = i + 1

print(soma)#!#!#
1612#;#;#NULL#!#!#
1613#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-A - Calorias em um Prato
@author: IComp / UFAM

Exemplo de Entrada:
["BIFE", "OMELETE", "TOMATE"]
[120, 200, 80]

Exemplo de Saída:
578.0

===========
edited by: Wirlino
@date 04/12
@description: 
	alterado nome das variáveis "atividades" para "atividades", "qtdes" para "times"
	corrigo o peso das calorias


"""

from numpy import *

atividades = array(eval(input("Atividades: ")))
times = array(eval(input("Duracao: ")))

calorias = 0
i = 0

while (i < size(atividades)):
	if (atividades[i] == "ALONGAMENTO"):
		calorias = calorias + 3.0*times[i]
	elif (atividades[i] == "CORRIDA"):
		calorias = calorias + 10.3*times[i]
	elif (atividades[i] == "DANCA"):
		calorias = calorias + 6.7*times[i]
	elif (atividades[i] == "ESCALADA"):
		calorias = calorias + 9.7*times[i]
	elif (atividades[i] == "HIDROGINASTICA"):
		calorias = calorias + 5.0*times[i]
	i = i + 1

print( round(calorias,2))#!#!#
1614#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-B - Calorias em um Prato
@author: IComp / UFAM

Exemplo de Entrada:
["BIFE", "OMELETE", "TOMATE"]
[120, 200, 80]

Exemplo de Saída:
578.0
"""

from numpy import *

alimentos = array(eval(input("Alimentos: ")))
qtdes = array(eval(input("Quantidades: ")))

calorias = 0
i = 0

while (i < size(alimentos)):
    if (alimentos[i] == "BANANA"):
        calorias = calorias + 0.97*qtdes[i]
    elif (alimentos[i] == "BIFE"):
        calorias = calorias + 2.95*qtdes[i]
    elif (alimentos[i] == "FEIJOADA"):
        calorias = calorias + 1.27*qtdes[i]
    elif (alimentos[i] == "OMELETE"):
        calorias = calorias + 1.04*qtdes[i]
    elif (alimentos[i] == "TOMATE"):
        calorias = calorias + 0.2*qtdes[i]
    i = i + 1

print(calorias)#!#!#
1615#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-C - Ganhador do Arco e Flecha
@author: IComp / UFAM

Exemplo de Entrada:
[3, 1, 1, 4]
[2, 4, 1, 2]

Exemplo de Saída:
JOGADOR UM

"""

from numpy import *

v1 = array(eval(input("Jogador 1: ")))
v2 = array(eval(input("Jogador 2: ")))

pontos1 = 0
pontos2 = 0
i = 0

while (i < size(v1)):
    if (v1[i] == 1):
        pontos1 = pontos1 + 40
    elif (v1[i] == 2):
        pontos1 = pontos1 + 20
    elif (v1[i] == 3):
        pontos1 = pontos1 + 10

    if (v2[i] == 1):
        pontos2 = pontos2 + 40
    elif (v2[i] == 2):
        pontos2 = pontos2 + 20
    elif (v2[i] == 3):
        pontos2 = pontos2 + 10

    i = i + 1

if (pontos1 > pontos2):
    print("JOGADOR UM")
elif (pontos2 > pontos1):
    print("JOGADOR DOIS")
else:
    print("EMPATE")
#!#!#
1616#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-D - Danos de um Exército de Magos
@author: IComp / UFAM

Exemplo de Entrada:
["GELO", "ILUSAO", "GELO", "FOGO"]
[2, 1, 5, 8]

Exemplo de Saída:
48
"""

from numpy import *

magos = array(eval(input("Magos: ")))
niveis = array(eval(input("Niveis: ")))

danos = 0
i = 0

while (i < size(magos)):
	if (magos[i] == "GELO"):
		danos = danos + 2*niveis[i]
	elif (magos[i] == "FOGO"):
		danos = danos + 3*niveis[i]
	elif (magos[i] == "CHOQUE"):
		danos = danos + 4*niveis[i]
	elif (magos[i] == "CONJURACAO"):
		danos = danos + 8*niveis[i]
	elif (magos[i] == "ILUSAO"):
		danos = danos + 10*niveis[i]
	i = i + 1

print(danos)#!#!#
1620#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 3-H - Consumo de Água do Chuveiro
@author: IComp / UFAM

Exemplo de Entrada:
[14, 21, 5, 30]
[75, 90, 100, 65]

Exemplo de Saída:
31.5
"""

from numpy import *

consumo_por_minuto = 5
tempos = array(eval(input("Informe os tempos: ")))
aberturas = array(eval(input("Informe as aberturas: ")))

i = 0
consumo_total = 0

while (i < size(tempos)):
	consumo_total = consumo_total + tempos[i]*consumo_por_minuto*aberturas[i]/100
	i = i + 1

print(round(consumo_total, 2))
#!#!#
1621#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-I - Total de Compras
@author: IComp / UFAM

Exemplo de Entrada:
["ARROZ", "FANTA", "BIS"]
[1, 3, 2]

Exemplo de Saída:
14.45
"""

from numpy import *

produtos = array(eval(input("Produtos: ")))
qtdes = array(eval(input("Quantidades: ")))

total = 0
i = 0

while (i < size(produtos)):
	
	if (produtos[i] == "ARROZ"):
		total = total + 1.25*qtdes[i]
	elif (produtos[i] == "FEIJAO"):
		total = total + 2.60*qtdes[i]
	elif (produtos[i] == "BIS"):
		total = total + 1.80*qtdes[i]
	elif (produtos[i] == "MIOJO"):
		total = total + 0.85*qtdes[i]
	elif (produtos[i] == "FANTA"):
		total = total + 3.20*qtdes[i]
	i = i + 1

print(round(total, 2))#!#!#
1622#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 3-J - Passageiros no Ônibus
@author: IComp / UFAM

Exemplo de Entrada:
[35, 32, 15, 0]
[0, 1, 3, 10]

Exemplo de Saída:
65
"""

from numpy import *

entradas = array(eval(input("Entradas: ")))
saidas = array(eval(input("Saidas: ")))

total = 0
i = 0;

while (i < size(entradas)):
	total = total - saidas[i]
	total = total + entradas[i]
	if (total > 75):
		total = 75
	i = i + 1

print(total)#!#!#
1639#;#;#"""
TP 06 - Questão 1 - A - Turma com nro par
@author: IComp / UFAM
Data: 04 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com nro de alunos em cada turma: ")))

npar = 0    # Zera contador de nos. pares
j = 0    # Contador para o vetor de turmas com nro par

for i in range(size(t)):
    if (t[i] % 2 == 0):
        npar = npar + 1

# Criacao do vetor so das turmas com nro par
p = zeros(npar,dtype=int) 
for i in range(size(t)):
    if (t[i] % 2 == 0):
        p[j] = i
        j = j + 1
        
print(npar)
print(p)#!#!#
1640#;#;#"""
TP 06 - Questão 1 - B - Turma com nro impar
@author: IComp / UFAM
Data: 04 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com nro de alunos em cada turma: ")))

nimpar = 0    # Contador de nos. impares
j = 0    # Contador para o vetor de turmas com nro impar

for i in range(size(t)):
	if (t[i] % 2 != 0):
		nimpar = nimpar + 1

# Criacao do vetor so das turmas com nro impar
p = zeros(nimpar,dtype=int) 
for i in range(size(t)):
	if (t[i] % 2 != 0):
		p[j] = i
		j = j + 1
        
print(nimpar)
print(p)
#!#!#
1643#;#;#"""
TP 06 - Questão 1 - E - Alunos aprovados por nota
@author: IComp / UFAM
Data: 11 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com as notas dos alunos: ")))

aprovados = 0    # Zera contador de aprovados
j = 0    # Contador para o vetor de aprovados

for i in range(size(t)):
	if (t[i] >= 5):
		aprovados = aprovados + 1

# Criacao do vetor so com os aprovados
p = zeros(aprovados, dtype=int) 
for i in range(size(t)):
	if (t[i] >= 5):
		p[j] = i
		j = j + 1
        
print(aprovados)
print(p)
#!#!#
1644#;#;#"""
TP 06 - Questão 1 - F - Alunos reprovados por nota
@author: IComp / UFAM
Data: 11 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com as notas dos alunos: ")))

reprovados = 0    # Zera contador de reprovados
j = 0    # Contador para o vetor de reprovados

for i in range(size(t)):
	if (t[i] < 5):
		reprovados = reprovados + 1

# Criacao do vetor só com os reprovados
p = zeros(reprovados, dtype=int) 
for i in range(size(t)):
	if (t[i] < 5):
		p[j] = i
		j = j + 1
        
print(reprovados)
print(p)
#!#!#
1645#;#;#"""
TP 06 - Questão 1 - G - Saques de valores altos
@author: IComp / UFAM
Data: 11 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com os valores sacados: ")))

altos = 0    # Zera contador de saques altos
j = 0    # Contador para o vetor de saques altos

for i in range(size(t)):
	if (t[i] >= 2000):
		altos = altos + 1

# Criacao do vetor so com os saques altos
p = zeros(altos, dtype=int) 
for i in range(size(t)):
	if (t[i] >= 2000):
		p[j] = i
		j = j + 1
        
print(altos)
print(p)
#!#!#
1646#;#;#"""
TP 06 - Questão 1 - H - Saques de valores baixos
@author: IComp / UFAM
Data: 11 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com os valores sacados: ")))

baixos = 0    # Zera contador de saques baixos
j = 0    # Contador para o vetor de saques baixos

for i in range(size(t)):
	if (t[i] <= 50):
		baixos = baixos + 1

# Criacao do vetor so com os saques baixos
p = zeros(baixos, dtype=int) 
for i in range(size(t)):
	if (t[i] <= 50):
		p[j] = i
		j = j + 1
        
print(baixos)
print(p)#!#!#
1647#;#;#"""
TP 06 - Questão 1 - I - Saques de valores baixos
@author: IComp / UFAM
Data: 11 - 01 - 2017

@modified 30 - 01 - 2017
TP 06 - Questão 1 - I - Alunos aprovados por frequência
maior ou igual 70%
"""

from numpy import *
t = array(eval(input("Vetor com presenca dos alunos: ")))

baixos = 0    # Zera contador de saques baixos
j = 0    # Contador para o vetor de saques baixos

for i in range(size(t)):
	if (t[i] >= 70):
		baixos = baixos + 1

# Criacao do vetor so com os saques baixos
p = zeros(baixos, dtype=int) 
for i in range(size(t)):
	if (t[i] >= 70):
		p[j] = i
		j = j + 1
        
print(baixos)
print(p)
#!#!#
1648#;#;#"""
TP 06 - Questão 1 - J - Alunos reprovados por frequencia
@author: IComp / UFAM
Data: 11 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com as frequencias dos alunos: ")))

reprovados = 0    # Zera contador de reprovados
j = 0    # Contador para o vetor de reprovados

for i in range(size(t)):
	if (t[i] < 70):
		reprovados = reprovados + 1

# Criacao do vetor so com os reprovados
p = zeros(reprovados, dtype=int) 
for i in range(size(t)):
	if (t[i] < 70):
		p[j] = i
		j = j + 1
        
print(reprovados)
print(p)
#!#!#
1641#;#;#"""
TP 06 - Questão 1 - C - Turma com trios
@author: IComp / UFAM
Data: 04 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com nro de alunos em cada turma: ")))

ntrios = 0    # Zera contador de trios
j = 0    # Contador para o vetor de turmas com trios

for i in range(size(t)):
	if (t[i] % 3 == 0):
		ntrios = ntrios + 1

# Criacao do vetor so das turmas com trios
p = zeros(ntrios,dtype=int) 
for i in range(size(t)):
	if (t[i] % 3 == 0):
		p[j] = i
		j = j + 1
        
print(ntrios)
print(p)
#!#!#
1642#;#;#"""
TP 06 - Questão 1 - D - Turma com grupos de cinco
@author: IComp / UFAM
Data: 04 - 01 - 2017
"""

from numpy import *
t = array(eval(input("Vetor com nro de alunos em cada turma: ")))

ncinco = 0    # Zera contador de cincos
j = 0    # Contador para o vetor de turmas com cincos

for i in range(size(t)):
   if (t[i] % 5 == 0):
       ncinco = ncinco + 1

# Criacao do vetor so das turmas com grupos de cinco
p = zeros(ncinco,dtype=int) 
for i in range(size(t)):
   if (t[i] % 5 == 0):
      p[j] = i
      j = j + 1
       
print(ncinco)
print(p)
#!#!#
1652#;#;#"""
TP 06 - Questão 2 - D - Cor ou raca
@author: IComp / UFAM
Data: 17 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 categorias com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de cor ou raca
# Separe o tipo de cada pessoa por virgula
vet = input("Digite as cores ou racas: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
	if (x == 'B'):
		cont[0] = cont[0] + 1
	elif (x == 'PA'):
		cont[1] = cont[1] + 1
	elif (x == 'PR'):
		cont[2] = cont[2] + 1
	elif (x == 'A'):
		cont[3] = cont[3] + 1
	else:    # Para indigena 
		cont[4] = cont[4] + 1

# Imprime maior incidencia de cor 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1653#;#;#"""
TP 06 - Questão 2 - E - Evento sul-americano
@author: IComp / UFAM
Data: 18 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 nacionalidades com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de nacionalidade
# Separe o tipo de cada pessoa por virgula
vet = input("Digite as nacionalidades: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'AR'):
       cont[0] = cont[0] + 1
   elif (x == 'BR'):
       cont[1] = cont[1] + 1
   elif (x == 'CL'):
       cont[2] = cont[2] + 1
   elif (x == 'CO'):
       cont[3] = cont[3] + 1
   else:    # Para Uruguai
       cont[4] = cont[4] + 1

# Imprime maior incidencia de nacionalidade 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1654#;#;#"""
TP 06 - Questão 2 - F - Evento nacional
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 estados com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de estados
# Separe o tipo de cada pessoa por virgula
vet = input("Digite os estados: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'AM'):
       cont[0] = cont[0] + 1
   elif (x == 'PE'):
       cont[1] = cont[1] + 1
   elif (x == 'MG'):
       cont[2] = cont[2] + 1
   elif (x == 'SP'):
       cont[3] = cont[3] + 1
   else:    # Para Rio Grande do Sul
       cont[4] = cont[4] + 1

# Imprime maior incidencia de estado 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1655#;#;#"""
TP 06 - Questão 2 - G - Evento do norte
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 estados com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de estados
# Separe o tipo de cada pessoa por virgula
vet = input("Digite os estados: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'AC'):
       cont[0] = cont[0] + 1
   elif (x == 'AM'):
       cont[1] = cont[1] + 1
   elif (x == 'PA'):
       cont[2] = cont[2] + 1
   elif (x == 'RO'):
       cont[3] = cont[3] + 1
   else:    # Para Roraima
       cont[4] = cont[4] + 1

# Imprime maior incidencia de estado 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1656#;#;#"""
TP 06 - Questão 2 - H - Evento Europeu
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 paises com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de paises
# Separe o tipo de cada pessoa por virgula
vet = input("Digite os paises: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'BE'):
       cont[0] = cont[0] + 1
   elif (x == 'ES'):
       cont[1] = cont[1] + 1
   elif (x == 'FR'):
       cont[2] = cont[2] + 1
   elif (x == 'IT'):
       cont[3] = cont[3] + 1
   else:    # Para Tailandia
       cont[4] = cont[4] + 1

# Imprime maior incidencia de pais
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1650#;#;#"""
TP 06 - Questão 2 - B - Cor do cabelo
@author: IComp / UFAM
Data: 16 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 categorias com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de cor de cabelo
# Separe o tipo de cada pessoa por virgula
vet = input("Digite as cores dos cabelos: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'P'):
       cont[0] = cont[0] + 1
   elif (x == 'C'):
       cont[1] = cont[1] + 1
   elif (x == 'R'):
       cont[2] = cont[2] + 1
   elif (x == 'L'):
       cont[3] = cont[3] + 1
   else:    # Para a cor branca 
       cont[4] = cont[4] + 1

# Imprime maior incidencia de cor 
print(max(cont))

# Imprime vetor de contagem
print(cont)

#!#!#
1651#;#;#"""
TP 06 - Questão 2 - C - Tom da pele
@author: IComp / UFAM
Data: 16 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 6 categorias com zeros
cont = zeros(6, dtype=int)

# Leitura do vetor de tom da pele
# Separe o tipo de cada pessoa por virgula
vet = input("Digite os tons das peles: ").upper().split(',')

# print('\n[MC,C,CM,EM,E,ME]')
# Contagem de ocorrencias
for x in vet:
   if (x == 'MC'):
       cont[0] = cont[0] + 1
   elif (x == 'C'):
       cont[1] = cont[1] + 1
   elif (x == 'CM'):
       cont[2] = cont[2] + 1
   elif (x == 'EM'):
       cont[3] = cont[3] + 1
   elif (x == 'E'):
       cont[4] = cont[4] + 1
   else:    # Para a pele muito escura 
       cont[5] = cont[5] + 1
#     print('')
#     print(x)
#     print(cont)
# print('\n\n')
# Imprime maior incidencia de cor 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1657#;#;#"""
TP 06 - Questão 2 - I - Evento americano
@author: IComp / UFAM
Data: 21 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 estados com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de estados
# Separe o tipo de cada pessoa por virgula
vet = input("Digite os estados: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'AZ'):
       cont[0] = cont[0] + 1
   elif (x == 'CA'):
       cont[1] = cont[1] + 1
   elif (x == 'FL'):
       cont[2] = cont[2] + 1
   elif (x == 'PA'):
       cont[3] = cont[3] + 1
   else:    # Para Wisconsin
       cont[4] = cont[4] + 1

# Imprime maior incidencia de estado 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1658#;#;#"""
TP 06 - Questão 2 - J - Evento asiatico
@author: IComp / UFAM
Data: 30 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 paises com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de paises
# Separe cada pais por virgula
vet = input("Digite os paises: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'CHN'):
       cont[0] = cont[0] + 1
   elif (x == 'JPN'):
       cont[1] = cont[1] + 1
   elif (x == 'KOR'):
       cont[2] = cont[2] + 1
   elif (x == 'MGL'):
       cont[3] = cont[3] + 1
   else:    # Para Tailandia
       cont[4] = cont[4] + 1

# Imprime maior incidencia de pais
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
1649#;#;#"""
TP 06 - Questão 2 - A - Cor dos olhos
@author: IComp / UFAM
Data: 09 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 5 categorias com zeros
cont = zeros(5, dtype=int)

# Leitura do vetor de cor de olhos
# Separe o tipo de cada pessoa por virgula
vet = input("Digite as cores dos olhos: ").upper().split(',')

# Contagem de ocorrencias
for x in vet:
   if (x == 'P'):
       cont[0] = cont[0] + 1
   elif (x == 'C'):
       cont[1] = cont[1] + 1
   elif (x == 'M'):
       cont[2] = cont[2] + 1
   elif (x == 'V'):
       cont[3] = cont[3] + 1
   else:    # Para a cor azul 
       cont[4] = cont[4] + 1

# Imprime maior incidencia de cor 
print(max(cont))

# Imprime vetor de contagem
print(cont)

#!#!#
1659#;#;##!#!#
1660#;#;##!#!#
1661#;#;##!#!#
1662#;#;##!#!#
1664#;#;##!#!#
1666#;#;##!#!#
1667#;#;##!#!#
1669#;#;##!#!#
1670#;#;##!#!#
1671#;#;##!#!#
1709#;#;#"""
TP 07 - Questao 1 - A - Media do Aluno
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))
i = int(input("Aluno: "))

# COM LOOP
numNotas  = shape(notas)[1]
soma = 0
total = 0

for j in range(numNotas):
    soma = soma + notas[i][j]
    total = total + 1

print(round(soma/total, 2))#!#!#
1710#;#;#"""
TP 07 - Questão 1 - B - Media da turma
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))

# COM LOOP
numAlunos = shape(notas)[0]
numNotas  = shape(notas)[1]
soma = 0
total = 0

for i in range(numAlunos):
    for j in range(numNotas):
        soma = soma + notas[i][j]
        total = total + 1

print(round(soma/total, 2))#!#!#
1711#;#;#"""
TP 07 - Questão 1 - C - Aluno Passou ou Reprovou
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))
i = int(input("Aluno: "))

# SEM LOOP
#media = sum(notas[i])/size(notas[i])
#if media > 5:
#    print("PASSOU")
#else:
#    print("REPROVOU")


# COM LOOP
numNotas  = shape(notas)[1]
soma = 0
total = 0

for j in range(numNotas):
    soma = soma + notas[i][j]
    total = total + 1

media = soma/total

if media > 5:
    print("PASSOU")
else:
    print("REPROVOU")

#!#!#
1712#;#;##!#!#
1713#;#;#"""
TP 07 - Questão 1 - E - Média do 2o Trabalho
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))

numAlunos = shape(notas)[0]
sumNotas = 0

for i in range(numAlunos):
    sumNotas = sumNotas + notas[i][1]

print(round(sumNotas/numAlunos, 2))
#!#!#
1714#;#;#"""
TP 07 - Questão 1 - F - Soma da Diagonal Principal
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

matriz = array(eval(input("Matriz: ")))

N = shape(matriz)[0]
sum = 0

for i in range(N):
    sum = sum + matriz[i][i]

print(round(sum, 2))


#!#!#
1715#;#;#"""
TP 07 - Questão 1 - G - Posição na Batalha Naval
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

campo = eval(input("Campo: "))
linha = int(input("Linha: "))
coluna = int(input("Coluna: "))

if campo[linha][coluna] == 'N':
    print("FOGO")
else:
    print("AGUA")
#!#!#
1716#;#;#"""
TP 07 - Questão 1 - H - Pontos no Arco e Flecha
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

pontos = [[0, 2, 2, 2, 0], [2, 5, 8, 5, 2], [2, 8, 16, 8, 2], [2, 5, 8, 8, 2], [0, 2, 2, 2, 0]]

print(pontos[int(input())][int(input())])
#!#!#
1717#;#;#"""
TP 07 - Questão 1 - I - Pontos no Arco e Flecha
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

pontos = [[0, 2, 2, 2, 0], [2, 5, 8, 5, 2], [2, 8, 16, 8, 2], [2, 5, 8, 5, 2], [0, 2, 2, 2, 0]]

print(pontos[int(input()) -1][int(input()) -1])
#!#!#
1718#;#;#"""
TP 07 - Questão 1 - J - Jogo de Damas
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

tabuleiro = array(eval(input("Tabuleiro: ")))
linha = int(input("Linha: "))
coluna = int(input("Coluna: "))

if tabuleiro[linha][coluna] == 'B':
    print("BRANCA")
elif tabuleiro[linha][coluna] == 'P':
    print("PRETA")
else:
    print("VAZIA")
#!#!#
1719#;#;#"""
TP 07 - Questão 2 - A - Quantos Passaram
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))

numAlunos = shape(notas)[0]
passaram = 0

for i in range(numAlunos):
    media = sum(notas[i])/size(notas[i])
    if media > 5:
        passaram = passaram + 1

print(passaram)#!#!#
1720#;#;#"""
TP 07 - Questão 2 - B - Porcentagem dos que passaram
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""
from numpy import *

notas = array(eval(input("Notas: ")))

numAlunos = shape(notas)[0]
passaram = 0

for i in range(numAlunos):
    media = sum(notas[i])/size(notas[i])
    if media > 5:
        passaram = passaram + 1

print(round(passaram*100/numAlunos, 2))#!#!#
1721#;#;#"""
TP 07 - Questão 2 - C - Área Média dos Triângulos
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

triangulos = array(eval(input("Triangulos: ")))

numTriangulos = shape(triangulos)[0]
somaAreas = 0

for i in range(numTriangulos):
    somaAreas = somaAreas + ((triangulos[i][0] * triangulos[i][1])/2)

print(round(somaAreas/numTriangulos, 2))#!#!#
1722#;#;#"""
TP 07 - Questão 2 - D - Área Média dos Retângulos
@author: IComp / UFAM
Data: 19 - 01 - 2017
"""

from numpy import *

retangulos = array(eval(input("Retangulos: ")))

numRetangulos = shape(retangulos)[0]
somaAreas = 0

for i in range(numRetangulos):
    somaAreas = somaAreas + (retangulos[i][0] * retangulos[i][1])

print(round(somaAreas/numRetangulos, 2))
#!#!#
1723#;#;#"""
TP 07 - Questão 2 - E - Valor Total da Compra
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

produtos = array(eval(input("Produtos: ")))

numProdutos = shape(produtos)[0]
total = 0

for i in range(numProdutos):
    total = total + produtos[i][0] * produtos[i][1]

print(round(total, 2))
#!#!#
1724#;#;#"""
TP 07 - Questão 2 - F - Compras na Loja Angeline's Aromatics
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

produtos = array(eval(input("Produtos: ")))

numProdutos = shape(produtos)[0]
total = 0

for i in range(numProdutos):
    total = total + produtos[i][0] * produtos[i][1]

print(round(total, 2))
#!#!#
1725#;#;#"""
TP 07 - Questão 2 - G - Bombas no Jogo Campo Minado
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

campo = array(eval(input("Campo: ")))

N = shape(campo)[0]
total = 0

for i in range(N):
    for j in range(N):
        if campo[i][j] == 'B':
            total = total + 1

print(total)
#!#!#
1726#;#;#"""
TP 07 - Questão 2 - H - Menor Nota da Turma
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))

numAlunos = shape(notas)[0]
minNota = 10

for i in range(numAlunos):
    minAtual = min(notas[i])
    if (minAtual < minNota):
        minNota = minAtual

print(minNota)

# OBS: e possivel resolver esta questao usando apenas a funcao amin, mas esta funcao nao foi passada para os alunos:
#print(amin(notas))#!#!#
1727#;#;#"""
TP 07 - Questão 2 - I - Maior Nota da Turma
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

notas = array(eval(input("Notas: ")))

numAlunos = shape(notas)[0]
maxNota = 0

for i in range(numAlunos):
    maxAtual = max(notas[i])
    if (maxAtual > maxNota):
        maxNota = maxAtual

print(maxNota)

# OBS: e possivel resolver esta questao usando apenas a funcao amax, mas esta funcao nao foi passada para os alunos:
#print(amax(notas))#!#!#
1728#;#;#"""
TP 07 - Questão 2 - J - Matriz Simetrica
@author: IComp / UFAM
Data: 31 - 01 - 2017
"""

from numpy import *

a = array(eval(input("Matriz: ")))

linhas = shape(a)[0]
colunas = shape(a)[1]

simetrica = True

for i in range(linhas):
    for j in range(colunas):
        if (a[i][j] != a[j][i]):
            simetrica = False

if (simetrica):
    print("SIMETRICA")
else:
    print("ASSIMETRICA")

# OBS: e possivel resolver esta questao como abaixo, mas a funcao all() nao foi passada para os alunos:
#if (a == a.T).all():
#    print("SIMETRICA")
#else:
#    print("ASSIMETRICA")
#!#!#
1729#;#;#from numpy import *

m = array(eval(input("a = ")))

igual_zero= 0
diff_zero= 0

for i in range(shape(m)[0]):
    for j in range(shape(m)[0]):
        if m[i,j] == 0:
            igual_zero = igual_zero + 1
        else:
            diff_zero = diff_zero + 1
if igual_zero > diff_zero:
    print("ESPARSA")
else:
    print("DENSA")#!#!#
1730#;#;#from numpy import *

m = array(eval(input("a = ")))

warrior = 0
soma = sum(m[0])

for i in range(shape(m)[0]):
	if sum(m[i]) > soma:
		soma = sum(m[i])
		warrior = i
        
print(warrior)#!#!#
1731#;#;#from numpy import *

m = array(eval(input("a = ")))

cliente = empty(shape(m)[0], dtype = int)
k = 0
maior_cliente = sum(m[0])
indice = 0 

if shape(m)[1] == 7:
	for i in range(shape(m)[0]):
		cliente[k] = sum(m[i])
      
		if cliente[k] > maior_cliente:
			maior_cliente = cliente[k]
			indice = k
		k = k + 1
        
print(indice)  #!#!#
1732#;#;#from numpy import *

m = array(eval(input("a = ")))

cliente = empty(shape(m)[0], dtype = int)
k = 0
menor_cliente = sum(m[0])
indice = 0 

if shape(m)[1] == 7:
	for i in range(shape(m)[0]):
		cliente[k] = sum(m[i])
      
		if cliente[k] < menor_cliente:
			menor_cliente = cliente[k]
			indice = k
		k = k + 1
        
print(indice)#!#!#
1734#;#;#from numpy import *

m = array(eval(input("a = ")))

vendedores = empty(shape(m)[0], dtype = int)
k = 0
pior_venda = sum(m[0]) #menor venda
indice = 0 

if shape(m)[1] == 7: #qtd dias da semana
	for i in range(shape(m)[0]):
		vendedores[k] = sum(m[i])
      
		if vendedores[k] < pior_venda:
			pior_venda = vendedores[k]
			indice = k
		k = k + 1
        
print(indice)#!#!#
1733#;#;#from numpy import *

m = array(eval(input("a = ")))

vendedores = empty(shape(m)[0], dtype = int)
k = 0
soma_vendas = sum(m[0]) #maior venda
indice = 0 

if shape(m)[1] == 7: #qtd dias da semana
	for i in range(shape(m)[0]):
		vendedores[k] = sum(m[i])
      
		if vendedores[k] > soma_vendas:
			soma_vendas = vendedores[k]
			indice = k
		k = k + 1
        
print(indice)#!#!#
1735#;#;#from numpy import *

m = array(eval(input("a = ")))

pontos_primeiro = sum(m[0])
indice = 0 

for i in range(shape(m)[0]):
	lancamentos = sum(m[i,:])
	if lancamentos > pontos_primeiro:
		pontos_primeiro = lancamentos
		indice = i

print(indice)#!#!#
1736#;#;#from numpy import *

m = array(eval(input("a = ")))

pontos_ultimo = sum(m[0]) #menor venda
indice = 0 

for i in range(shape(m)[0]):
	lancamentos = sum(m[i,:])
	if lancamentos < pontos_ultimo:
		pontos_ultimo = lancamentos
		indice = i

print(indice)#!#!#
1737#;#;#from numpy import *

m = array(eval(input("a = ")))

tempo_primeiro = sum(m[0]) #menor venda
indice = 0 

for i in range(shape(m)[0]):
	tempos = sum(m[i,:])
	if tempos < tempo_primeiro:
		tempo_primeiro = tempos
		indice = i

print(indice)#!#!#
1738#;#;#from numpy import *

m = array(eval(input("a = ")))

tempo_ultimo = sum(m[0])
indice = 0 

for i in range(shape(m)[0]):
	tempos = sum(m[i,:])
	if tempos > tempo_ultimo:
		tempo_ultimo = tempos
		indice = i

print(indice)#!#!#
1039#;#;#NULL#!#!#
1040#;#;#NULL#!#!#
1315#;#;#NULL#!#!#
433#;#;#NULL#!#!#
1420#;#;#NULL#!#!#
1421#;#;#NULL#!#!#
1446#;#;#"""
Created on Wed Mar 06 2019
Lab 01 – Ex 03
Polpa de frutas
@author: IComp / UFAM
"""

# Leitura da entrada
polpa = float(input("Litros comprados: "))

doacao = polpa / 3

# Impressao da saida
print(round(doacao, 3))#!#!#
1447#;#;#NULL#!#!#
1448#;#;#NULL#!#!#
1449#;#;#NULL#!#!#
1450#;#;#NULL#!#!#
1452#;#;#NULL#!#!#
1453#;#;#NULL#!#!#
1454#;#;#NULL#!#!#
1455#;#;#NULL#!#!#
1456#;#;#NULL#!#!#
1457#;#;#NULL#!#!#
1458#;#;#NULL#!#!#
1459#;#;#NULL#!#!#
1460#;#;#NULL#!#!#
1461#;#;#NULL#!#!#
1462#;#;#NULL#!#!#
1463#;#;#NULL#!#!#
1464#;#;#NULL#!#!#
1465#;#;#NULL#!#!#
1466#;#;#NULL#!#!#
1589#;#;#NULL#!#!#
1590#;#;#NULL#!#!#
1575#;#;#NULL#!#!#
1631#;#;#NULL#!#!#
1632#;#;#NULL#!#!#
1633#;#;#NULL#!#!#
1634#;#;#NULL#!#!#
1635#;#;#NULL#!#!#
1636#;#;#NULL#!#!#
1637#;#;#NULL#!#!#
1638#;#;#NULL#!#!#
1663#;#;#NULL#!#!#
1665#;#;#NULL#!#!#
1668#;#;#NULL#!#!#
1676#;#;#NULL#!#!#
1677#;#;#NULL#!#!#
1678#;#;#NULL#!#!#
1679#;#;#NULL#!#!#
1680#;#;#NULL#!#!#
1572#;#;#NULL#!#!#
1578#;#;#NULL#!#!#
1579#;#;#NULL#!#!#
1591#;#;#NULL#!#!#
1592#;#;#NULL#!#!#
1672#;#;#NULL#!#!#
1673#;#;#NULL#!#!#
1674#;#;#NULL#!#!#
1675#;#;#NULL#!#!#
1800#;#;## Leitura de entradas
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

f = (a**2 + b**2 + c**2) / (a + b + c)

# Impressao da saida
print(round(f, 7))#!#!#
1801#;#;#obj = input("Nome do objeto: ")
n = int(input("No de repeticoes: "))

s = ("Abra " + obj + " ") * n

print(s)
#!#!#
1802#;#;#from math import *

pv = int(input("Pontos de vida: "))
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))

dano = int(sqrt(5 * d1) + pi ** (d2 / 3))

print(pv - dano)#!#!#
1803#;#;#conta = int(input("conta: "))

d1 = conta % 10
d2 = (conta // 10) % 10
d3 = (conta // 100) % 10
d4 = conta // 1000

soma = d1 * 2 + d2 * 3 + d3 * 4 + d4 * 5

dv = soma % 11

print(dv)#!#!#
1804#;#;#"""
Introducao a Programacao de Computadores
Lab 01 - EXTRA - Exercicio 01
Distância entre dois pontos no plano cartesiano
Criado em 29 / 06 / 2016
@author: IComp / UFAM
"""

xa = float(input("x_A: "))
ya = float(input("y_A: "))
xb = float(input("x_B: "))
yb = float(input("y_B: "))

dist = ((xb - xa)**2 + (yb - ya)**2)**0.5

print(round(dist, 3))
#!#!#
1805#;#;#"""
Introducao a Programacao de Computadores
Lab 01 - EXTRA - Exercicio 02
Ponto médio entre dois pontos no plano cartesiano
Criado em 29 / 06 / 2016
@author: IComp / UFAM
"""

xa = float(input("x_A: "))
ya = float(input("y_A: "))
xb = float(input("x_B: "))
yb = float(input("y_B: "))

xm = (xb + xa) / 2.
ym = (yb + ya) / 2.

print(round(xm, 1))
print(round(ym, 1))
#!#!#
1806#;#;#"""
Introducao a Programacao de Computadores
Lab 01 - EXTRA - Exercicio 04
Aniversario
Criado em 29 / 06 / 2016
@author: IComp / UFAM
"""

from math import factorial

n = int(input("Numero de pessoas: "))

prob = 1. - factorial(365) / factorial(365 - n) / 365.**(n)

print(round(prob * 100., 2))
#!#!#
1834#;#;##!#!#
1833#;#;##!#!#
1836#;#;##!#!#
1835#;#;##!#!#
1841#;#;##!#!#
1839#;#;##!#!#
1838#;#;##!#!#
1837#;#;##!#!#
1840#;#;##!#!#
1842#;#;##!#!#
1852#;#;#NULL#!#!#
1853#;#;#NULL#!#!#
1854#;#;#NULL#!#!#
1855#;#;#NULL#!#!#
1856#;#;#NULL#!#!#
1857#;#;#NULL#!#!#
1932#;#;#NULL#!#!#
1949#;#;#num_jogador = int(input())
num_sorteado = int(input())

dig1_num_jogador = num_jogador//10
dig2_num_jogador = num_jogador%10

dig1_num_sorteado = num_sorteado//10
dig2_num_sorteado = num_sorteado%10

if num_jogador == num_sorteado:
    print("Ganhou R$ 100.000,00")
elif (dig1_num_jogador == dig2_num_sorteado) and (dig2_num_jogador == dig1_num_sorteado):
    print("Ganhou R$ 50.000,00")
elif ((dig1_num_jogador==dig1_num_sorteado) or (dig1_num_jogador==dig2_num_sorteado)
    or (dig2_num_jogador==dig1_num_sorteado) or (dig2_num_jogador==dig2_num_sorteado)):
    print("Ganhou R$ 1.000,00")
else:
    print("Perdeu")#!#!#
1950#;#;#T = float(input())
v = float(input())

if (T < -50.0 or T > 10.0):
    print("Temperatura invalida")
if (v < 4.8):
    print("Velocidade invalida")
if (T >= -50.0 and T <= 10.0 and v >= 4.8):
    a = 13.12 + 0.6215*T - (11.37*v**0.16) + (0.3965*T*v**0.16)
    print(round(a, 4))#!#!#
1951#;#;#x0 = float(input())
y0 = float(input())
x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())

c = (x1 - x0)*(y2 - y0) - (x2 - x0)*(y1 - y0)

if (c<0):
    print("A direita da reta")
elif (c>0):
    print("A esquerda da reta")
else:
    print("Sobre a reta")#!#!#
1952#;#;#salario = float(input())

#desconto contribuição previdenciária
if salario <= 1659.38:
    salario -= salario*0.08
elif salario <= 2765.66:
    salario -= salario*0.09
elif salario <= 5531.31:
    salario -= salario*0.11
else:
    salario -= 608.44

#desconto imposto de renda:
if salario<=1903.98:
    pass
elif salario <= 2286.65:
    salario -= salario*0.075
elif salario <= 3751.05:
    salario -= salario*0.15
elif salario <= 4664.68:
    salario -= salario*0.225
else:
    salario -= salario*0.275

#print("Salario liquido = R$ %.2f" % salario)
print("Salario liquido = R$",round(salario,2))#!#!#
1948#;#;#NULL#!#!#
1943#;#;#NULL#!#!#
1945#;#;#NULL#!#!#
1937#;#;#NULL#!#!#
1944#;#;#NULL#!#!#
1942#;#;#NULL#!#!#
1946#;#;#NULL#!#!#
1939#;#;#NULL#!#!#
1941#;#;#NULL#!#!#
1938#;#;#NULL#!#!#
1940#;#;#NULL#!#!#
1977#;#;##!#!#
1986#;#;##!#!#
1981#;#;##!#!#
1996#;#;##!#!#
1978#;#;##!#!#
1979#;#;##!#!#
1980#;#;##!#!#
1982#;#;##!#!#
1983#;#;##!#!#
1984#;#;##!#!#
1985#;#;##!#!#
1987#;#;##!#!#
1988#;#;##!#!#
1989#;#;##!#!#
1990#;#;##!#!#
1991#;#;##!#!#
1992#;#;##!#!#
1993#;#;##!#!#
1994#;#;##!#!#
1995#;#;##!#!#
2030#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
moeda = (input("Digite CARA ou COROA: ")).upper()

#Variavel contadora 
qte = 0
# Laco de repeticao
while (moeda != "S"):
	# Verifica se valor eh divisivel por 2
    if (moeda  == "CARA"):
        #Incrementa quantidade de CARAS
        qte = qte + 1     	
	# Inputs seguintes
    moeda = (input("Digite CARA ou COROA: ")).upper()

print(qte)
#!#!#
2031#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
dado = int((input("Digite a face de um dado: ")))

#Variavel contadora 
qte = 0
# Laco de repeticao
while (dado != -1):
	# Verifica se valor eh divisivel por 2
    if (dado == 6):
        #Incrementa quantidade de CARAS
        qte = qte + 1     	
	# Inputs seguintes
    dado = int((input("Digite a face de um dado: ")))

print(qte)
#!#!#
2032#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
dado = int((input("Digite a face de um dado de 10 faces: ")))

#Variavel contadora 
qte = 0
# Laco de repeticao
while (dado != -1):
	# Verifica se valor eh divisivel por 2
    if (dado == 5):
        #Incrementa quantidade de CARAS
        qte = qte + 1     	
	# Inputs seguintes
    dado = int((input("Digite a face de um dado de 10 faces: ")))

print(qte)
#!#!#
2033#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
curso = input("Digite o curso do aluno: ").upper()

#Variavel contadora 
qte = 0
# Laco de repeticao
while (curso != "S"):
    if (curso == "ICOMP"):
        qte = qte + 1
	# Inputs seguintes
    curso = input("Digite o curso do aluno:  ").upper()

print(qte)
#!#!#
2034#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
dado = int((input("Digite a face de um dado: ")))

#Variavel contadora 
qte = 1
# Laco de repeticao
while (dado != 6):
    #Incrementa quantidade de CARAS
    qte = qte + 1     	
	# Inputs seguintes
    dado = int((input("Digite a face de um dado: ")))

print(qte)
#!#!#
2035#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
numero = int(input("Digite um numero: "))

#Variavel contadora 
qte = 0
# Laco de repeticao
while (numero != 0):
    if (numero > 0):
        #Incrementa quantidade de CARAS
        print("POSITIVO")	
    else:
        print("NEGATIVO")	
        
    numero = int(input("Digite um numero: ")) # Inputs seguintes


#!#!#
2036#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
casa = (input("Digite PRETA ou VERMELHA: ")).upper()

#Variavel contadora 
qte = 0
# Laco de repeticao
while (casa != "S"):
    if (casa  == "PRETA"):
        #Incrementa quantidade de CARAS
        qte = qte + 1     	
	# Inputs seguintes
    casa = (input("Digite PRETA ou VERMELHA: ")).upper()

print(qte)
#!#!#
2037#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
idade = int((input("Digite a idade: ")))

#Variavel contadora 
qte = 0
# Laco de repeticao
while (idade != -1):
	# Verifica se valor eh menor que 18
    if (idade < 18):
        #Incrementa quantidade de menores de idade
        qte = qte + 1     	
	# Inputs seguintes
    idade = int((input("Digite a idade: ")))

print(qte)
#!#!#
2038#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input("Digite SIM ou NAO: ")).upper()

#Variavel contadora 
qte = 0
# Laco de repeticao
while (resposta != "S"):
    if (resposta  == "SIM"):
        #Incrementa quantidade de respostas positivas
        qte = qte + 1     	
	# Inputs seguintes
    resposta = (input("Digite SIM ou NAO: ")).upper()

print(qte)
#!#!#
2039#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
nuc = (input("Digite o nucleotideo: ")).upper()

#Variavel contadora 
qte = 0
# Laco de repeticao
while (nuc != "S"):
	# Verifica se valor eh divisivel por 2
    if (nuc  == "A"):
        #Incrementa quantidade de respostas positivas
        qte = qte + 1     	
	# Inputs seguintes
    nuc = (input("Digite o nucleotideo: ")).upper()

print(qte)
#!#!#
2101#;#;#from numpy import *

n = int(input())
vet  = zeros(n, dtype=int)
vet[0] = 0
vet[1] = 1
i = 2

while(i<n):
    vet[i] = vet[i-1] + vet[i-2]
    i+=1

print(vet)#!#!#
2102#;#;#from numpy import *

vet = array(eval(input("vetor:")))

i = 0
while (i < size(vet)):
    if vet[i] % 2 != 0: # vet[i] é ímpar
        vet[i] = 0
    i += 1
    
print(vet)
#!#!#
2103#;#;#from numpy import *

A = array(eval(input()), dtype=int)
B = array(eval(input()), dtype=int)

# Inverte o vetor
# B = B[::-1]

# Inverte o vetor B
vet_inv = zeros(size(B), dtype=int)
i = 0
while(i < size(vet_inv)):
	vet_inv[i] = B[-i-1]
	i += 1
B = vet_inv
	
# Imprime o maior entre A[i] e B[i] invertido
i = 0
while(i < size(A)):
    if (A[i]>B[i]):
        print(A[i])
    else:
        print(B[i])
    i += 1#!#!#
2107#;#;#string = input("Digite a palavra:")
string = string.lower()

vogalcont = 0
x = len(string)
for i in string:
	if(i == "a" or i == "e" or i == "i" or i == "o" or i == "u"):
		vogalcont = vogalcont + 1
print(vogalcont)
print(x-vogalcont)#!#!#
2108#;#;#string = input().lower()
vogais = 'aeiou'
i = 0
while (i<len(string)):
    if string[i] not in vogais:
        string = string.replace(string[i], 'p')
    i+=1
print(string)#!#!#
2126#;#;##!#!#
2123#;#;##!#!#
2129#;#;##!#!#
2121#;#;##!#!#
2122#;#;##!#!#
2124#;#;##!#!#
2125#;#;##!#!#
2128#;#;##!#!#
2130#;#;##!#!#
2127#;#;##!#!#
2135#;#;#NULL#!#!#
2136#;#;#NULL#!#!#
2137#;#;#NULL#!#!#
2138#;#;#string = input()
vogais = 'aeiouAEIOU'
i = 0
while (i<len(vogais)):    
    string = string.replace(vogais[i], '')
    i+=1
print(string)#!#!#
2139#;#;#from numpy import *
forca_acumulada = array(eval(input("Força acumulada: ")))
aux=[]
for i in forca_acumulada:
    if i%2==0:
        aux.append(i)
print(array(aux))#!#!#
2151#;#;#NULL#!#!#
2154#;#;#NULL#!#!#
2150#;#;#NULL#!#!#
2147#;#;#NULL#!#!#
2155#;#;#NULL#!#!#
2146#;#;#NULL#!#!#
2148#;#;#NULL#!#!#
2149#;#;#NULL#!#!#
2152#;#;#NULL#!#!#
2153#;#;#NULL#!#!#
2182#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao G

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *

a=array(eval(input("a= ")))
n=shape(a)
print(n)
dim=(n**2)-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i +j != n-1):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime a soma
print(round(sum(v),2))#!#!#
2217#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao J

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=(n**2-n)//2#numero de elementos abaixo da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i > j):
            v[k]=a[i,j]#salva os elementos abaixo da diagonal
            k=k+1
# imprime o minimo
print(min(v))#!#!#
2181#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao F

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i+j != n-1):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime o minimo
print(min(v))#!#!#
2180#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao E
Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i+j != n-1):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime o maximo
print(max(v))#!#!#
2176#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao A

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i != j):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime o maximo
print(max(v))#!#!#
2177#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao B

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i != j):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime o minimo
print(min(v))#!#!#
2178#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao C

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i != j):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime a soma
print(round(sum(v),2))#!#!#
2179#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao D

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i != j):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime a media
media=sum(v)/dim
print(round(media,2))#!#!#
2183#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao H

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i +j!= n-1):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime a media
media=sum(v)/dim
print(round(media,2))#!#!#
2216#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao I

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=(n**2-n)//2#numero de elementos acima da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (j>i):
            v[k]=a[i,j]#salva os elementos acima da diagonal
            k=k+1
# imprime o maximo
print(max(v))#!#!#
2218#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao K

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=(n**2-n)//2#numero de elementos acima da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (j>i):
            v[k]=a[i,j]#salva os elementos acima da diagonal
            k=k+1
# imprime a soma
print(round(sum(v),2))#!#!#
2219#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao L

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=(n**2-n)//2#numero de elementos abaixo da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i > j):
            v[k]=a[i,j]#salva os elementos abaixo da diagonal
            k=k+1
# imprime a media
media=sum(v)/dim
print(round(media,2))#!#!#
2220#;#;#from numpy import *

matriz = array(eval(input()))

for linha in matriz:
	print(max(linha))#!#!#
2221#;#;#from numpy import *

matriz_notas = array(eval(input()))

soma = 0.0
for linha_notas in matriz_notas:
	soma += min(linha_notas)

media = soma / shape(matriz_notas)[0]
print(round(media,2))
#!#!#
2222#;#;##!#!#
1797#;#;#NULL#!#!#
1798#;#;#NULL#!#!#
1799#;#;#NULL#!#!#
1861#;#;#NULL#!#!#
1862#;#;#NULL#!#!#
1863#;#;#NULL#!#!#
1864#;#;#NULL#!#!#
1865#;#;#NULL#!#!#
1866#;#;#NULL#!#!#
1867#;#;#NULL#!#!#
2040#;#;#NULL#!#!#
2041#;#;#NULL#!#!#
2042#;#;#NULL#!#!#
2043#;#;#"""
Introducao a Programacao de Computadores
DESAFIOS 01 - Exercicio 03
Media Ponderada
Criado em 06 / 03 / 2019
@author: IComp / UFAM
"""

# Leitura das entradas
nota1 = float(input("Nota 1: "))
nota2 = float(input("Nota 2: "))
nota3 = float(input("Nota 3: "))
nota4 = float(input("Nota 4: "))
				  
#pesos = 1, 2, 3, 4
media = (nota1 + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)) / 10.0

# Impressao dos resultados
print(round(media, 2))
#!#!#
2044#;#;#NULL#!#!#
2046#;#;#NULL#!#!#
2047#;#;#NULL#!#!#
2049#;#;#"""
Created on Wed Mar 06 2019
Lab 01 – Ex 04
Elementos da divisão inteira
@author: IComp / UFAM
"""

# Leitura das entradas
x = int(input("Qual valor de x?"))
y = int(input("Qual valor de y?"))

dividendo = x
divisor = y
quociente = x // y
resto = x % y

# Impressao das saidas
print(dividendo)
print(divisor)
print(quociente)
print(resto)#!#!#
2051#;#;#NULL#!#!#
2052#;#;#NULL#!#!#
2054#;#;#NULL#!#!#
2056#;#;#NULL#!#!#
2057#;#;#NULL#!#!#
2059#;#;#NULL#!#!#
2060#;#;#NULL#!#!#
2062#;#;#NULL#!#!#
2063#;#;#NULL#!#!#
2065#;#;#NULL#!#!#
2066#;#;#NULL#!#!#
2068#;#;#NULL#!#!#
2069#;#;#NULL#!#!#
2070#;#;#NULL#!#!#
2072#;#;#NULL#!#!#
2075#;#;#NULL#!#!#
2076#;#;#NULL#!#!#
2078#;#;#NULL#!#!#
2079#;#;#NULL#!#!#
2080#;#;#NULL#!#!#
2081#;#;#NULL#!#!#
2084#;#;#NULL#!#!#
1882#;#;#NULL#!#!#
1883#;#;#NULL#!#!#
1884#;#;#NULL#!#!#
1885#;#;#NULL#!#!#
1886#;#;#NULL#!#!#
1888#;#;#NULL#!#!#
1889#;#;#NULL#!#!#
1890#;#;#NULL#!#!#
1892#;#;#NULL#!#!#
1893#;#;#NULL#!#!#
2045#;#;#NULL#!#!#
2048#;#;#NULL#!#!#
2050#;#;#NULL#!#!#
2053#;#;#NULL#!#!#
2055#;#;#NULL#!#!#
2058#;#;#NULL#!#!#
2061#;#;#NULL#!#!#
2064#;#;#NULL#!#!#
2067#;#;#NULL#!#!#
2071#;#;#NULL#!#!#
2073#;#;#NULL#!#!#
2074#;#;#NULL#!#!#
2077#;#;#NULL#!#!#
2082#;#;#NULL#!#!#
2083#;#;#NULL#!#!#
2085#;#;#NULL#!#!#
2086#;#;#NULL#!#!#
2087#;#;#NULL#!#!#
2088#;#;#NULL#!#!#
1872#;#;#x = float(input())
y = float(input())

if (x==0 and y == 0):
	print("Origem")
elif (x == 0):
	print("Eixo Y")
elif (y == 0):
	print("Eixo X")
elif (x > 0 and y > 0):
	print("Q1")
elif (x < 0 and y > 0):
	print("Q2")
elif (x < 0 and y < 0):
	print("Q3")
elif (x > 0 and y < 0):
	print("Q4")
	
	
	
	#!#!#
1873#;#;#NULL#!#!#
1874#;#;#NULL#!#!#
1875#;#;#NULL#!#!#
1876#;#;#NULL#!#!#
1877#;#;#NULL#!#!#
1878#;#;#NULL#!#!#
1879#;#;#extras = float(input())
faltas = float(input())

h = extras - 1/4*faltas

if (h <= 400):
	g = 100.0
else:
	g = 500.0

print(extras,"extras e",faltas,"de falta")
print("R$",round(g,2))#!#!#
1880#;#;#m = int(input())

if (m == 1):
	print("janeiro")
elif (m == 2):
	print("fevereiro")
elif (m == 3):
	print("marco")
elif (m == 4):
	print("abril")
elif (m == 5):
	print("maio")
elif (m == 6):
	print("junho")
elif (m == 7):
	print("julho")
elif (m == 8):
	print("agosto")
elif (m == 9):
	print("setembro")
elif (m == 10):
	print("outubro")
elif (m == 11):
	print("novembro")
elif (m == 12):
	print("dezembro")
else:
	print("numero de mes invalido")#!#!#
1881#;#;#NULL#!#!#
2161#;#;#NULL#!#!#
2162#;#;#NULL#!#!#
2163#;#;#NULL#!#!#
2164#;#;#NULL#!#!#
2165#;#;#NULL#!#!#
2166#;#;#NULL#!#!#
2167#;#;#destino = input()
percurso = input()

if (destino=="Belem" and percurso=="ida"):
    print("350.0")
elif (destino=="Belem" and percurso=="ida-e-volta"):
    print("650.0")
elif (destino=="Borba" and percurso=="ida"):
    print("80.0")
elif (destino=="Borba" and percurso=="ida-e-volta"):
    print("152.0")
elif (destino=="Coari" and percurso=="ida"):
    print("106.0")
elif (destino=="Coari" and percurso=="ida-e-volta"):
    print("199.0")
elif (destino=="Humaita" and percurso=="ida"):
    print("200.0")
elif (destino=="Humaita" and percurso=="ida-e-volta"):
    print("390.0") 
elif (destino=="Manicore" and percurso=="ida"):
    print("150.0")
elif (destino=="Manicore" and percurso=="ida-e-volta"):
    print("280.0")
elif (destino=="Maues" and percurso=="ida"):
    print("100.0")
elif (destino=="Maues" and percurso=="ida-e-volta"):
    print("190.0")
else:
    print("Destino inexistente")#!#!#
2168#;#;#NULL#!#!#
2169#;#;#NULL#!#!#
2170#;#;#NULL#!#!#
2171#;#;#NULL#!#!#
2189#;#;##!#!#
2190#;#;#NULL#!#!#
2191#;#;#NULL#!#!#
2192#;#;#NULL#!#!#
2193#;#;#NULL#!#!#
2194#;#;#NULL#!#!#
2195#;#;##!#!#
2196#;#;#NULL#!#!#
2197#;#;#NULL#!#!#
1887#;#;#NULL#!#!#
1891#;#;#NULL#!#!#
1894#;#;#NULL#!#!#
1895#;#;#NULL#!#!#
1896#;#;#NULL#!#!#
1897#;#;#NULL#!#!#
1898#;#;#NULL#!#!#
1899#;#;#NULL#!#!#
1900#;#;#NULL#!#!#
1901#;#;#NULL#!#!#
2230#;#;#NULL#!#!#
2231#;#;#NULL#!#!#
2232#;#;#NULL#!#!#
2233#;#;#NULL#!#!#
2234#;#;#NULL#!#!#
2235#;#;#NULL#!#!#
2236#;#;#NULL#!#!#
2237#;#;#NULL#!#!#
2238#;#;#NULL#!#!#
2239#;#;#NULL#!#!#
2240#;#;#NULL#!#!#
2241#;#;#NULL#!#!#
2242#;#;#NULL#!#!#
2243#;#;#NULL#!#!#
2244#;#;#NULL#!#!#
2245#;#;#NULL#!#!#
2246#;#;#NULL#!#!#
2247#;#;#NULL#!#!#
2248#;#;#NULL#!#!#
1908#;#;#NULL#!#!#
1910#;#;#NULL#!#!#
1911#;#;#NULL#!#!#
1915#;#;#NULL#!#!#
1916#;#;#NULL#!#!#
1917#;#;#NULL#!#!#
1918#;#;#NULL#!#!#
1919#;#;#NULL#!#!#
1922#;#;#NULL#!#!#
1926#;#;#NULL#!#!#
2412#;#;#NULL#!#!#
2413#;#;#NULL#!#!#
2419#;#;#NULL#!#!#
2425#;#;#distancia = float(input("distancia percorrida (km): "))
combustivel = float(input("combustivel gasto (l): "))

consumo = distancia/combustivel

print(round(consumo, 3), "km/l")#!#!#
2426#;#;#"""
Introducao a Programacao de Computadores
DESAFIOS - Exercicio 04
Viagem de carro
Criado em 29 / 06 / 2016
@author: IComp / UFAM
"""

# Leitura de entradas
tempo = float(input("Tempo: "))
veloc = float(input("Velocidade: "))

#calculo
distancia = (veloc * tempo)
autonomia = (veloc * tempo) / 12.0

# Impressao da saida
print(distancia)
print(autonomia)
#!#!#
2430#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao B
Financeira
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#constantes
taxaJuros = 3

#entradas
capital = float(input("Entre com o valor da compra:"))
tempo = int(input("Entre com a qt de parcelas:"))

#processamento
juros = float((capital * taxaJuros * tempo) / 100)
montante = capital + juros

#saidas
print(round(montante,2))#!#!#
2431#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao C
Desconto na Passagem
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#constantes
taxaDesconto = 35

#entradas
precoCliente = float(input("Valor da passagem do cliente: "))
precoAcompanhante = float(input("Valor da passagem do acompanhante: "))

#processamento
precoDesconto = precoAcompanhante - (precoAcompanhante * (taxaDesconto / 100))

#saidas
print(round(precoCliente, 2))
print(round(precoDesconto, 2))
print(round(precoCliente + precoDesconto,2))#!#!#
2439#;#;#NULL#!#!#
2433#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao E
Cinema
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#constantes
desconto60 = 60

#entradas
precoIngresso = float(input("Entre com o valor do ingresso: "))

#processamento
precoAcompanhante = precoIngresso - (precoIngresso * (desconto60 / 100))


#saidas
print(round(precoIngresso, 2))
print(round(precoAcompanhante, 2))
print(round(precoIngresso + precoAcompanhante, 2))

#!#!#
2434#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao F
Tucurui
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

precoA = 80.0
precoB = 50.0
precoC = 30.0

#entradas
nA = int(input("No. bilhetes A: "))
nB = int(input("No. bilhetes B: "))
nC = int(input("No. bilhetes C: "))

#processamento
renda = (precoA * nA) + (precoB * nB) + (precoC * nC)

#saidas
print(renda)

#!#!#
2437#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao I
Bolsa de Valores
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#entradas
precoAbertura = float(input("Preco de abertura: "))
precoFechamento = float(input("Preco de fechamento: "))

#processamento
diferenca = precoFechamento - precoAbertura
percentual = (diferenca * 100) / precoAbertura

#saidas
print(round(percentual,2))#!#!#
2438#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao J
Conversor Hertz
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#entradas
frequencia = int(input("frequencia do sensor: "))
tempo = int(input("tempo de coleta de dados: "))

#processamento
qtdeAmostras = frequencia * (tempo * 60)

#saidas
print(qtdeAmostras)#!#!#
2436#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao H
Correios
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#constantes
kilo = 25.00
km = 0.10
icms = 12

#entradas
peso = int(input("Entre com o peso do produto: "))
distancia = int(input("Entre com a distancia: "))

#processamento
preco = (peso * kilo) + (distancia * km)
precoICMS = preco * (icms / 100)
precoTotal = preco + precoICMS

#saidas
print(round(precoTotal,2))#!#!#
2435#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao G
Ecommerce
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#constantes
desconto40 = 40
desconto5 = 5

#entradas
preco = float(input("Entre com o valor do produto: "))

#processamento
frete = preco * (desconto5 / 100)
precoComDesconto = preco - (preco * (desconto40 / 100))

#saidas
print(round(precoComDesconto,2))
print(round(frete,2))
#!#!#
2429#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao A
Restaurante
Criado em 27 / 02 / 2018
Atualizado em 24 / 03 / 2018
@author: IComp / UFAM
"""

#constantes
precoOpcaoPrincipal = 6.90
precoGuarnicao = 2.50
precoBebida = 3.00

#entradas
qtdeGuarnicao = int(input("qt guarnicoes: "))
qtdeBebida = int(input("qt bebidas: "))

#processamento
valor = precoOpcaoPrincipal + (qtdeGuarnicao * precoGuarnicao) + (qtdeBebida * precoBebida)

#saidas
print(valor)#!#!#
2442#;#;#num = int(input("Digite um numero: "))

if (num % 2 == 0):
    mensagem = "par"
else:
    mensagem = "impar"

print(mensagem)#!#!#
2443#;#;#import math


r = float(input())
x = float(input())
opcao = int(input())

volume_ar = (math.pi * x**2 * (3*r-x))/3
if opcao == 1:
    mensagem = round(volume_ar, 4)
elif opcao ==2:
    volume_total = (4 * math.pi * r**3)/3
    volume_combustivel = volume_total - volume_ar
    
    mensagem = round(volume_combustivel, 4)

print(mensagem)#!#!#
2445#;#;#escala = input("Escala: ")
temperatura = float(input("Temperatura: "))

if escala == "F":
    nova_temperatura = 5/9 * (temperatura - 32)
    
else:
    nova_temperatura = temperatura * 9/5 + 32
    
mensagem = round(nova_temperatura, 2)

print(mensagem)#!#!#
2446#;#;#NULL#!#!#
2447#;#;#preco = float(input("Preco: "))
pagamento = float(input("Pagamento: "))

if preco>pagamento:
    falta = preco - pagamento
    mensagem = "Falta " + str(round(falta, 2))
else:
    troco = pagamento - preco
    mensagem = "Troco de " + str(round(troco, 2))

print(mensagem)#!#!#
2452#;#;#peso = float(input("Peso: "))
altura = float(input("Altura: "))

imc = peso/(altura**2)

if (imc < 18.5):
    print("abaixo do peso")
if (imc >= 18.5 and imc < 25):
    print("normal")
if (imc >= 25 and imc <= 30):
    print("acima do peso")
if (imc > 30):
    print("obeso")#!#!#
2453#;#;#preco  = float(input("Preco do Produto: "))
condicao = int(input("Condicao: "))

if (condicao == 1):
    precoFinal = preco - preco*0.1
if (condicao == 2):
    precoFinal = preco - preco*0.15
if (condicao == 3):
    precoFinal = preco
if (condicao == 4):
    precoFinal = preco + preco*0.1
	
print(round(precoFinal,2))#!#!#
2454#;#;#altura = float(input("Qual a sua altura? "))
sexo = input("Qual seu sexo? ")

if sexo.upper() != "M" and sexo.upper() != "F":
    print("codigo invalido de sexo")
elif (altura < 1.0 or altura > 2.5):
    print("altura invalida")
elif (sexo.upper() == "M"):
    peso_ideal = (72.7 * altura) - 58
    print(round(peso_ideal, 2))
else:
    peso_ideal = (62.1 * altura) - 44.7
    print(round(peso_ideal, 2))#!#!#
2455#;#;#nivel  = float(input("Nivel do Professor: "))
horas	 = int(input("Horas trabalhadas: "))

if (nivel == 1):
    salario = horas*12.0
else: 
    if(nivel == 2):
        salario = horas*17.0
    else:
        salario = horas * 25.0

print(round(salario,2))#!#!#
2456#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Estrutura Condicional
Versao E
Desconto nas mensalidades
Criado em 09 / 04 / 2018
@author: Alex Monteiro
"""
 
#entradas
mensalidade = float(input("Mensalidade: "))
criancas = float(input("Criancas"))
 
#processamento
if (criancas == 1):
    desconto = 10
if (criancas == 2):
    desconto = 30
if (criancas >= 3):
    desconto = 40

valorFinal = (mensalidade - mensalidade * (desconto/100)) * criancas
	
print(round(valorFinal,2))#!#!#
2457#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 03 - Estrutura Condicional Aninhada
Versao F
Manaus-Porto Velho
Criado em 27 / 02 / 2018
@author: Alex Monteiro, Leandro Galvao
"""

#entradas
nBilhetes = int(input("No. bilhetes: "))
classe = input("Classe do assento: ").lower()
 
#processamento
if (classe == "rede"):
    total = nBilhetes * 500.0
    print(total)
elif (classe == "camarote"):
    total = nBilhetes * 1200.0
    print(total)
elif (classe == "suite"):
    total = nBilhetes * 1500.0
    print(total)
else:
    print("acomodacao invalida")#!#!#
2458#;#;#valor_produto = float(input("Valor do produto: "))
codigoRegiao = int(input("Codigo regiao: "))

descontoBF = 40/100

if (codigoRegiao == 1) : 
	frete = 10
else:
	if(codigoRegiao == 2) :
		frete = 8
	else:
		if (codigoRegiao == 3) :
			frete  = 0
		else:
			frete  = 2			

venda = (valor_produto - valor_produto * descontoBF) + valor_produto * (frete/100)

print(round(venda, 2))#!#!#
2459#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional
Versao H
Correios
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""
 
#constantes
kilo = 25.00
km = 0.10
 
#entradas
peso = int(input("Entre com o peso do produto: "))
distancia = int(input("Entre com a distancia: "))
codigo = int(input("Codigo UF destino: "))

if (codigo == 1):
	icms = 17
if (codigo == 2):
	icms = 17.5
if (codigo == 3):
	icms = 18
if (codigo == 4):
	icms = 20	
 
#processamento
preco = (peso * kilo) + (distancia * km)
precoICMS = preco * (icms / 100)
precoTotal = preco + precoICMS
 
#saidas
print(round(precoTotal,2))#!#!#
2460#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao I
Bolsa de Valores
Criado em 09 / 04 / 2018
@author: Alex Monteiro
"""
 
#entradas
precoAbertura = float(input("Preco de abertura: "))
precoFechamento = float(input("Preco de fechamento: "))
 
#processamento
diferenca = precoFechamento - precoAbertura
percentual = (diferenca * 100) / precoAbertura

if (percentual < 0):
    print("saldo negativo")
else:
    if(percentual == 0)	:
        print("sem variacao")
    else :
        print("saldo positivo")#!#!#
2461#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 03 - Estrutura Condicional Encadeada
Versao J
Bolsa de Valores
Criado em 09 / 04 / 2018
@author: Alex Monteiro, Leandro Galvao
"""
 
#entradas
custo = float(input("Valor do produto: "))
 
#processamento
if (custo <= 50):
    valorFinal = custo * 2
elif (custo > 50 and custo <= 100):
    valorFinal = custo * 1.5
elif (custo > 100 and custo <= 500):
    valorFinal = custo * 1.4
else:
    valorFinal = custo * 1.3
	
print(round(valorFinal, 2))#!#!#
2471#;#;#"""
Introducao a Programacao de Computadores
Desafio 03 - Exercicio 01
ÍNDICE DE MASSA CORPORAL (IMC)
Criado em 11 / 04 / 2017
@author: IComp / UFAM
"""

X = int(input("Digite a idade: "))
Y = float(input("Digite o IMC: "))


# Calculo do Índice

if((X <= 0) or (X > 130) or (Y <0)):
    print("Entradas:", X, "anos e IMC", Y)
    print("Dados invalidos")
elif (X < 45):
    if(Y < 22):
        Z = 'Baixo'
    else:
        Z = 'Medio'
    print("Entradas:", X, "anos e IMC", Y)
    print("Risco:", Z)
else:
    if (Y < 22):
        Z = 'Medio'
    else:
        Z = 'Alto'
    print("Entradas:", X, "anos e IMC", Y)
    print("Risco:", Z)#!#!#
2472#;#;#NULL#!#!#
2473#;#;#NULL#!#!#
2474#;#;#q = int(input())
m = int(input())
a = int(input())

if (m<3):
    m+=12
    a = a - 1

k = a%100
j = a//100

h = (q + (13*(m+1))//5 + k + k//4 + j//4 + 5*j)%7

# as linhas 14-18 poderiam ser substituídas por várias condições
dias = ['sabado', 'domingo', 'segunda-feira', 'terca-feira',
    'quarta-feira', 'quinta-feira', 'sexta-feira']
dia_semana =   {i:dia for (i, dia) in zip(range(7),dias)}
print(dia_semana[h])#!#!#
2488#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao D - Aumento de Salario
@author: IComp / UFAM
"""
sal = float(input("Digite o salario: "))

# Eco das entradas
print("Entrada: R$", sal)

if sal>0:
    if sal<=800.0:
        i = 50
    elif sal>800.0 and sal<=1000.0:
        i = 40
    elif sal>1000.0 and sal<=1200.0:
        i = 30
    elif sal>1200 and sal<=1400:
        i = 20
    elif sal>1400 and sal<=1600:
        i = 10
    else:
        i = 5
    
    sal_novo = round(sal + sal * i/100., 2)
    print("Novo salario: R$", sal_novo)
else:
    print("Dado invalido")

#!#!#
2487#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao B - Refeicao
@author: IComp / UFAM
"""
pto = int(input("Digite o prato: "))
sob = int(input("Digite a sobremesa: "))
beb = int(input("Digite a bebida: "))

# Eco das entradas
print("Entradas:", pto, ",", sob, ",", beb)

c1 = (pto>=1) and (sob>=1) and (beb>=1)
c2 = (pto<=4) and (sob<=4) and (beb<=4)
cal = 0

if (c1 and c2):
    if pto==1:
        cal=180
    elif pto==2:
        cal=230
    elif pto==3:
        cal=250
    else:
        cal=350
    if sob==1:
        cal=cal+75
    elif sob==2:
        cal=cal+110
    elif sob==3:
        cal=cal+170
    else:
        cal=cal+200
    if beb==1:
        cal=cal+20
    elif beb==2:
        cal=cal+70
    elif beb==3:
        cal=cal+100
    else:
        cal=cal+65
    print("Calorias:", cal, "cal")
else:
    print("Dados invalidos")#!#!#
2489#;#;#destino = input("Destino: ")
idade = int(input("Idade: "))

print("Entradas:", destino, ",", idade)

destino = destino.lower()
if (destino == "porto velho" or destino == "belem"  or destino == "santarem" or destino == "tefe" or destino == "tabatinga") and (idade >=0 and idade < 150):
    if destino == "porto velho":
        preco = 500.0
    elif destino == "santarem":
        preco = 370.0
    elif destino == "belem":
        preco = 600.0
    elif destino == "tefe":
        preco = 360.0
    elif destino == "tabatinga":
        preco = 550.0
        
    if idade >=0 and idade <= 2:
        preco = 0.0
    elif idade > 2 and idade <= 12:
        preco = preco / 2
    elif idade >= 65:
        preco = preco * 0.7
        
    print("Passagem: R$", round(preco, 2))
else:
    print("entradas invalidas")#!#!#
2495#;#;#num = int(input())

# Laco de repeticao
while (num!=-1):
	# Verifica se valor eh divisivel por 2
	if (num%2==0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input())#!#!#
2496#;#;#num = int(input())
soma = 0
# Laco de repeticao
while (num!=-1):
	soma = soma + num	
	# Inputs seguintes
	num = int(input())
	
print(soma)	#!#!#
2497#;#;#qi = float(input())
tempo = int(input())
juros = 0.04
saldo = qi # Variavel acumuladora

# Valor inicial da variavel contadora
cont = 0

# Atualizacao de saldo
while (cont<tempo):
    rend = saldo * juros
    saldo = saldo + rend
    cont += 1
    print(round(saldo, 2))#!#!#
2498#;#;#popA = int(input())
popB = int(input())
percA = float(input())
percB = float(input())

ano = 0

while (popA < popB):
	popA = popA + popA*percA/100
	popB = popB + popB*percB/100
	ano = ano + 1
	
print(ano)	#!#!#
2499#;#;#import math
n = int(input())

cont = 0
e = 1
while (cont<(n-1)):
    cont+=1
    e += 1/(math.factorial(cont))

print(round(e, 8))
#!#!#
2505#;#;#from math import *

x = eval(input())
k = int(input())
senx = 0
i = 0
while (i < k):
	senx = senx + (-1)**(i) * x**(2*i+1)/(factorial(2*i+1))
	i = i + 1

print(round(senx,10))#!#!#
2508#;#;#n = int(input())

cont = 0
pi = 3.0
d = 2.0
while (cont<(n-1)):
    cont+=1 
    divisor = (d*(d+1)*(d+2))   
    if (cont%2==1):
        pi += 4/divisor
    else:
        pi -= 4/divisor
    d += 2

print(round(pi, 8))#!#!#
2502#;#;##!#!#
2503#;#;#n = int(input())

cont = 0
pi = 0
divisor = 1.0
while (cont<n):
    cont+=1 
    if (cont%2==1):
        pi += 4/divisor
    else:
        pi -= 4/divisor
    divisor += 2

print(round(pi, 8))#!#!#
2504#;#;##!#!#
2506#;#;#q_inicial = int(input())
taxa_cresc = float(input())/100
q_retirados = int(input())

q_total = q_inicial

tempo = 0

while q_total>0 and q_total<=12000:
    q_total = q_total + q_total*taxa_cresc - q_retirados
    tempo+=1

if (q_total<=0):
    print('EXTINCAO')
else:
    print('LIMITE')
print(tempo)#!#!#
2507#;#;#qI = int(input())
perc = float(input())
meses = 0

while(qI > 0 and qI < 8000):
	retirados = int(input())
	qI = qI + qI*perc/100 - retirados
	meses = meses + 1
if (qI <= 0):
	print("ZERO")
else:
	print("MAXIMO")

print(meses)	#!#!#
2525#;#;#n = int(input())

i = 1
total_divisores = 0

while(i<=n):
    if (n%i==0):
        print(i)
        total_divisores+=1
    i+=1

print(total_divisores, 'divisores')#!#!#
2527#;#;#numero = int(input())

i=1
soma = 0
while i < numero:
    if numero % i == 0:
        print(i)
        soma += i
    i+=1
if soma == numero:
    print("PERFEITO")
else:
    print("NAO PERFEITO")#!#!#
2526#;#;#num1 = int(input())
num2 = int(input())

i = 1
soma_divisores_num1 = 0
soma_divisores_num2 = 0

while(i<num1):
    if (num1%i==0):
        soma_divisores_num1+=i
    i+=1
print(soma_divisores_num1)

i = 1
while(i<num2):
    if (num2%i==0):
        soma_divisores_num2+=i
    i+=1
print(soma_divisores_num2)

if num1==soma_divisores_num2 and num2==soma_divisores_num1:
    print('AMIGOS')
else:
    print('NAO AMIGOS')#!#!#
2528#;#;##!#!#
2518#;#;#n = int(input())

while(n!=1):
    if (n%2==0):
        n = n//2
    else:
        n = n*3 + 1
    print(n)#!#!#
2517#;#;#h0 = float(input())
g=9.8

t=0
h=h0


while h > 0:
    print('t = ', t)
    print('h = ', round(h, 1))
    t+=1
    h = h0 - (g*t**2)/2
    #!#!#
2519#;#;#altura_torre = float(input())
q_metros_minutos_equecrates = float(input())
q_metros_minutos_antistenes = float(input())

tempo_minutos = 0
q_subida = 0

while(True):
    q_subida+=q_metros_minutos_equecrates
    tempo_minutos+=1
    if (q_subida>=altura_torre):
        break
    q_subida-=q_metros_minutos_antistenes

print(tempo_minutos)#!#!#
2520#;#;##!#!#
2521#;#;#n = int(input())

i = 1
pi = 1.0

numerador = 1.0
denominador = 1.0

while(i<=n):
    numerador *= i
    denominador *= (1+2*i)
    pi+=numerador/denominador
    i+=1

print(round(2*pi, 10))#!#!#
2522#;#;##!#!#
2523#;#;#a0 = 1.0
b0 = 1/(2**0.5)
t0 = 0.25
p0 = 1.0
a = a0
b = b0
t = t0
p = p0

n = int(input())
i = 0

while (i < n):
	pI  = (a+b)**2/(4*t)
	print(round(pI,14))	
	a = (a0+b0)/2
	b = (a0*b0)**0.5
	t  = t0  - p0*(a0-a)**2
	p  = 2 * p0
	a0 = a
	b0 = b
	t0 = t
	p0 = p
	i = i + 1
	#!#!#
2524#;#;##!#!#
2530#;#;#D=float(input("Deposito: "))
TF=float(input("Tarifa: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=D
if (D>0 and TF>0 and j>0):
	while (saldo<=1.15*D):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo-TF
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2531#;#;#V=float(input("Valor: "))
M=float(input("Saque: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=V
if (V>0 and M>0 and j>0):
	while (saldo<=1.1*V):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo-M
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2532#;#;#C=float(input("Valor do Carro: "))
D=float(input("Deposito Inicial: "))
M=float(input("Mensal: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=D
if (C>0 and D>0 and M>0 and j>0):
	while (saldo<C):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo+M
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2539#;#;#V=float(input("Valor: "))
M=float(input("Saque: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=V
if (V>0 and M>0 and j>0):
	while (saldo<=1.2*V):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo-M
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2538#;#;#S=float(input("Valor do Sitio: "))
D=float(input("Deposito Inicial: "))
M=float(input("Mensal: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=D
if (S>0 and D>0 and M>0 and j>0):
	while (saldo<S):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo+M
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2537#;#;#V=float(input("Valor: "))
M=float(input("Saque: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=V
if (V>0 and M>0 and j>0):
	while (saldo<=1.2*V):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo-M
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2536#;#;#C=float(input("Valor da Casa: "))
D=float(input("Deposito Inicial: "))
M=float(input("Mensal: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=D
if (C>0 and D>0 and M>0 and j>0):
	while (saldo<C):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo+M
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2535#;#;#DA=float(input("Deposito A: "))
DB=float(input("Deposito B: "))
jA=float(input("Juros A: "))
jB=float(input("Juros B: "))
jA=jA/100
jB=jB/100
t=0
saldoA=DA
saldoB=DB
if (DA>0 and DB>0 and jA>0 and jB>0 and DA>DB and jA<jB):
	while (saldoA>=saldoB):
		saldoA=saldoA*(1.0+jA)
		saldoA=round(saldoA,2)
		saldoB=saldoB*(1.0+jB)
		saldoB=round(saldoB,2)
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2534#;#;#V=float(input("Valor: "))
S=float(input("Seguro Mensal: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=V
if (V>0 and S>0 and j>0):
	while (saldo<=1.4*V):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		if (t<6):
			saldo=saldo+S
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2533#;#;#V=float(input("Valor: "))
C=float(input("Custo Mensal: "))
j=float(input("Juros: "))
j=j/100
t=0
saldo=V
if (V>0 and C>0 and j>0):
	while (saldo>=0.5*V):
		saldo=saldo*(1.0+j)
		saldo=round(saldo,2)
		saldo=saldo-C
		t=t+1
	print(t)
else:
	print("Dados incorretos")#!#!#
2549#;#;##Alex Monteiro
# Questao A
# entrada: costureira
# saida: 79r501101r711ts111c


senha  = input("senha: ")

senha  = senha.replace("a","97")
senha  = senha.replace("e","101")
senha  = senha.replace("i","105")
senha  = senha.replace("o","111")
senha  = senha.replace("u","117")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);
#!#!#
2550#;#;##Alex Monteiro
# Questao B
# entrada: cOstuREIra
# saida: ar32Rus4c

senha  = input("senha: ")

senha  = senha.replace("A","1")
senha  = senha.replace("E","2")
senha  = senha.replace("I","3")
senha  = senha.replace("O","4")
senha  = senha.replace("U","5")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2551#;#;##Alex Monteiro
# Questao B
# entrada: cOstuREIra
# saida: ar32Rus4c

senha  = input("senha: ")

senha  = senha.replace("a","1")
senha  = senha.replace("e","2")
senha  = senha.replace("i","3")
senha  = senha.replace("o","4")
senha  = senha.replace("u","5")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2552#;#;##Alex Monteiro
# Questao D
# entrada: cOstuREIra
# saida: ar3796Ruts97c

senha  = input("senha: ")

senha  = senha.replace("A","65")
senha  = senha.replace("E","69")
senha  = senha.replace("I","73")
senha  = senha.replace("O","79")
senha  = senha.replace("U","85")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2553#;#;##Alex Monteiro
# Questao E
# entrada: cOstuREIra
# saida: a4ie4u32o1

senha  = input("senha: ")

senha  = senha.replace("c","1")
senha  = senha.replace("s","2")
senha  = senha.replace("t","3")
senha  = senha.replace("r","4")
senha  = senha.replace("p","5")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2555#;#;##Alex Monteiro
# Questao E
# entrada: cOstuREIra
# saida: a411IERu611511O99

senha  = input("senha: ")

senha  = senha.replace("c","99")
senha  = senha.replace("s","115")
senha  = senha.replace("t","116")
senha  = senha.replace("r","114")
senha  = senha.replace("p","112")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2556#;#;##Alex Monteiro
# Questao G
# entrada: cOstuREIra
# saida: a411IERu611511O99

senha  = input("senha: ")

senha  = senha.replace("C","67")
senha  = senha.replace("S","83")
senha  = senha.replace("T","84")
senha  = senha.replace("R","82")
senha  = senha.replace("P","80")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2557#;#;##Alex Monteiro
# Questao H
# entrada: CoStUReira
# saida: arie4Ut2o1

senha  = input("senha: ")

senha  = senha.replace("C","1")
senha  = senha.replace("S","2")
senha  = senha.replace("T","3")
senha  = senha.replace("R","4")
senha  = senha.replace("P","5")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2558#;#;##Alex Monteiro
# Questao H
# entrada: COStuREira
# saida: 3iER2SOC

senha  = input("senha: ").lower()

senha  = senha.replace("co","1")
senha  = senha.replace("tu","2")
senha  = senha.replace("ra","3")
senha  = senha.replace("re","4")
senha  = senha.replace("do","5")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2559#;#;##Alex Monteiro
# Questao H
# entrada: cosTUreiRA
# saida: 363i484264s515

senha  = input("senha: ").lower()

senha  = senha.replace("co","515")
senha  = senha.replace("tu","462")
senha  = senha.replace("ra","363")
senha  = senha.replace("re","484")
senha  = senha.replace("do","121")

i = -1
nsenha = ""
	
while(i >= -len(senha)):
	nsenha = nsenha + senha[i]
	i = i - 1 

print(nsenha);#!#!#
2818#;#;#from numpy import *

raios = array(eval(input("Raios:")))

soma = 0
i = 0

while i < len(raios):
	soma += 3.14 * raios[i]**2
	i += 1

print(round(soma, 3))#!#!#
2819#;#;#from numpy import *

raios = array(eval(input("Lados:")))

soma = 0
i = 0

while i < len(raios):
	soma += raios[i]**2
	i += 1

print(round(soma/len(raios), 3))#!#!#
2820#;#;#from numpy import *

valores = array(eval(input("Alturas e larguras:")))

soma = 0
i = 0

while i < len(valores):
	soma += (valores[i]*valores[i+1])/2
	i += 2

print(round(soma, 2))
#!#!#
2821#;#;#from numpy import *

valores = array(eval(input("Alturas e larguras:")))

soma = 0
i = 0

while i < len(valores):
	soma += valores[i]*valores[i+1]
	i += 2

print(round(soma/(len(valores)/2), 2))
#!#!#
2822#;#;#from numpy import *
from math import *

pos1 = array(eval(input("Posicao 1:")))
pos2 = array(eval(input("Posicao 2:")))

distancia = sqrt((pos1[0]-pos2[0])**2 + (pos1[1]-pos2[1])**2 + (pos1[2]-pos2[2])**2)

print(round(distancia, 2))
#!#!#
2823#;#;#from numpy import *

valores = array(eval(input("Valores:")))
quantidades = array(eval(input("Quantidades:")))

total = 0
i = 0
while i < len(valores):
	total += valores[i]*quantidades[i]
	i += 1

print(round(total*1.30, 2))
#!#!#
2824#;#;#from numpy import *

valores = array(eval(input("Valores:")))
quantidades = array(eval(input("Quantidades:")))

total = 0
i = 0
while i < len(valores):
	total += valores[i]*quantidades[i]
	i += 1

print(round(total*1.10, 2))


#!#!#
2825#;#;#from numpy import *

notas = array(eval(input("Notas:")))

notas = (notas*10)/max(notas)

print(notas)
#!#!#
2826#;#;#from numpy import *

notas = array(eval(input("Notas:")))

i=0
while i<size(notas):
	if notas[i] > 8.0:
		notas[i] = 10.0
	elif notas[i] < 2.0:
		notas[i] = 0.0
	i += 1

print(notas)#!#!#
2827#;#;#from numpy import *

notas = array(eval(input("Notas:")))

i=0
while i<size(notas):
	if notas[i] > 4 and notas[i] < 5:
		notas[i] = 4.0
	if notas[i] > 9:
		notas[i] = 10.0
	i += 1

print(notas)#!#!#
2588#;#;## coding=utf-8
data = eval(str(input("Array: ")))

limite_velocidade = data[0]
i = 1

acumulador = 0

limite_minimo = limite_velocidade + (limite_velocidade * 0.2)
limite_maximo = limite_velocidade + (limite_velocidade * 0.5)

for x in data[1:]:

    if x > limite_minimo and x < limite_maximo:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)
#!#!#
2589#;#;## coding=utf-8
data = eval(str(input("Array: ")))

minimo_acidentes = data[0]
i = 1

acumulador = 0

for x in data[1:]:

    if x >= minimo_acidentes:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)
#!#!#
2590#;#;## coding=utf-8
data = eval(str(input("Array: ")))

maximo_acidentes = data[0]
i = 1

acumulador = 0

for x in data[1:]:

    if x < maximo_acidentes:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)
#!#!#
2591#;#;## coding=utf-8

data = eval(str(input("Array: ")))

minimo_acidentes = data[0] * (-1)
i = 1

acumulador = 0

for x in data[1:]:

    if x < minimo_acidentes:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)#!#!#
2592#;#;## coding=utf-8
data = eval(str(input("Array: ")))

cobertura_minima = data[0]
i = 1

acumulador = 0

for x in data[1:]:

    if x >= cobertura_minima:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)#!#!#
2593#;#;## coding=utf-8
data = eval(str(input("Array: ")))

cobertura_minima = data[0]
i = 1

acumulador = 0

for x in data[1:]:

    if x >= cobertura_minima:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)
#!#!#
2594#;#;## coding=utf-8
data = eval(str(input("Array: ")))

cobertura_minima = data[0]
i = 1

acumulador = 0

for x in data[1:]:
    if x > cobertura_minima:
        print (i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)#!#!#
2595#;#;## coding=utf-8
data = eval(str(input("Array: ")))

taxa_reducao = data[0] * (-1)
i = 1

acumulador = 0

for x in data[1:]:

    if x <= taxa_reducao:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)#!#!#
2596#;#;## coding=utf-8
data = eval(str(input("Array: ")))

taxa_acrescimento = data[0]
i = 1

acumulador = 0

for x in data[1:]:

    if x >= taxa_acrescimento:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)
#!#!#
2587#;#;## coding=utf-8
import numpy

data = eval(str(input("Array: ")))

limite_velocidade = data[0]
limite_maximo     = limite_velocidade + (limite_velocidade * 0.5)
i = 1

acumulador = 0
infratores = numpy.array([])

for x in data[1:]:
    if x > limite_maximo:
        print(i)
        acumulador = acumulador + 1

    i = i + 1

print(acumulador)#!#!#
2667#;#;#x1 = int(input("x1: "))
y1 = int(input("y1: "))
x2 = int(input("x2: "))
y2 = int(input("y2: "))

distancia = abs(x1 - x2) + abs(y1 - y2)

print(distancia)#!#!#
2894#;#;## Leitura das entradas e conversao para float:
preco = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = preco * 8 + 45.0

# Impressao do valor total:
print(total)
#!#!#
2895#;#;## Valores de entrada
njogos = int(input("Numero de jogos: "))
preco = float(input("Qual o valor unitario do jogo? "))
frete = float(input("Frete: "))

# Calculo do valor a ser pago, incluindo o frete:
total = preco * njogos + frete

# Impressao do valor total:
print(total)
#!#!#
1316#;#;#NULL#!#!#
1317#;#;#NULL#!#!#
1318#;#;##!#!#
1319#;#;#NULL#!#!#
1325#;#;#NULL#!#!#
1321#;#;#NULL#!#!#
1322#;#;#NULL#!#!#
1323#;#;#NULL#!#!#
1324#;#;#NULL#!#!#
2110#;#;#NULL#!#!#
789#;#;#NULL#!#!#
790#;#;#NULL#!#!#
791#;#;#NULL#!#!#
792#;#;#NULL#!#!#
1343#;#;#NULL#!#!#
1344#;#;#NULL#!#!#
1345#;#;#NULL#!#!#
1346#;#;#NULL#!#!#
1347#;#;#NULL#!#!#
1348#;#;#NULL#!#!#
474#;#;#NULL#!#!#
475#;#;#NULL#!#!#
476#;#;#NULL#!#!#
813#;#;#NULL#!#!#
815#;#;#NULL#!#!#
816#;#;#NULL#!#!#
817#;#;#NULL#!#!#
2297#;#;##!#!#
2303#;#;##!#!#
2296#;#;##!#!#
2300#;#;##!#!#
2301#;#;#from math import *

b = float(input("Informe o valor de b: "))
c = float(input("Informe o valor de c: "))
alpha = float(input("Informe o valor de alpha: "))

a = sqrt(b**2 + c**2 - 2*b*c * cos(radians(alpha)))
print(round(a,2))#!#!#
2294#;#;##!#!#
2291#;#;##!#!#
2284#;#;##!#!#
2295#;#;##!#!#
2302#;#;##!#!#
2325#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao C
    Patrono: DUMBLEDORE e VOLDEMORT
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 10.7654
HT = 0.3479

RE = 10.674
RT = 1.789

bruxo = input("Qual o bruxo? ")

if (bruxo.upper() == "DUMBLEDORE"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)
#!#!#
2324#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao C
    Patrono: MINERVA e BELATRIX
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 10.7654
HT = 0.3479

RE = 10.674
RT = 1.789

bruxo = input("Qual o bruxo? ")

if (bruxo.upper() == "MINERVA"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)
#!#!#
2326#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
Versao A
Patrono: Harry Potter
Criado em 29 / 08 / 2017
@author: IComp / UFAM
"""

HE = 3.674
HT = 2.789

RE = 3.7654
RT = 2.3479

bruxo = input("Qual o bruxo? ")

if (bruxo.upper() == "HARRY"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)
#!#!#
2322#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao H
    Patrono: NEVILLE e LUNA
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 15.7654
HT = 1.3479

RE = 7.674
RT = 3.789

bruxo = input("Qual o bruxo? ")

if (bruxo.lower() == "neville"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)
#!#!#
2323#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao G
    Patrono: SIRIUS e MALFOY
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 15.7654
HT = 1.3479

RE = 7.674
RT = 3.789

bruxo = input("Qual o bruxo? ")

if (bruxo.upper() == "SIRIUS"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)#!#!#
2327#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao C
    Patrono: Hermione e Gina
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 3.7654
HT = 2.3479

RE = 3.674
RT = 2.789

bruxo = input("Qual o bruxo? ")

if (bruxo.lower() == "hermione"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)
#!#!#
2321#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao I
    Patrono: HARRY e LUNA
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 9.654
HT = 1.3479

RE = 4.984
RT = 2.789

bruxo = input("Qual o bruxo? ")

if (bruxo.lower() == "harry"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)

#!#!#
2318#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao J
    Patrono: SNAPE e VOLDEMORT
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 20.114
HT = 0.4379

RE = 19.984
RT = 4.289

bruxo = input("Qual o bruxo? ")

if (bruxo.upper() == "SNAPE"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)#!#!#
2320#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
Versao A
Patrono: Harry Potter
Criado em 29 / 08 / 2017
@author: IComp / UFAM
"""

HE = 2.9994
HT = 8.789

RE = 1.674
RT = 10.789

bruxo = input("Qual o bruxo? ")

if (bruxo.upper() == "HARRY"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)#!#!#
2319#;#;#"""
    Introducao a Programacao de Computadores
    Trabalho Pratico 02 - Estruturas Condicionais Simples e Compostas
    Versao B
    Patrono: Rony e Hermione
    Criado em 29 / 08 / 2017
    @author: IComp / UFAM
    """

HE = 2.9994
HT = 8.789

RE = 1.674
RT = 10.789

bruxo = input("Qual o bruxo? ")

if (bruxo.lower() == "hermione"):
    velocidade = HE/HT
else:
    velocidade = RE/RT

print(velocidade)#!#!#
2343#;#;##!#!#
2345#;#;##!#!#
2341#;#;##!#!#
2344#;#;##!#!#
2336#;#;##!#!#
2338#;#;##!#!#
2339#;#;##!#!#
2337#;#;##!#!#
2340#;#;##!#!#
2342#;#;##!#!#
2361#;#;##!#!#
2355#;#;##!#!#
2357#;#;##!#!#
2358#;#;##!#!#
2363#;#;##!#!#
2360#;#;##!#!#
2354#;#;##!#!#
2356#;#;##!#!#
2359#;#;##!#!#
2362#;#;##!#!#
2370#;#;##!#!#
2371#;#;##!#!#
2372#;#;##!#!#
2373#;#;##!#!#
2374#;#;##!#!#
2375#;#;##!#!#
2376#;#;##!#!#
2377#;#;##!#!#
2378#;#;##!#!#
2379#;#;##!#!#
2394#;#;##!#!#
2393#;#;##!#!#
2390#;#;##!#!#
2395#;#;##!#!#
2389#;#;##!#!#
2397#;#;##!#!#
2388#;#;##!#!#
2391#;#;##!#!#
2392#;#;##!#!#
2396#;#;##!#!#
2270#;#;#NULL#!#!#
2271#;#;#NULL#!#!#
2415#;#;#NULL#!#!#
2432#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao D
Imobiliaria
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""

#entradas
precoArea = float(input("preco area m2: "))
ap = int(input("metragem da area privativa m2: "))
ac = int(input("metragem da area comum m2: "))
ag = int(input("metragem da area garagem m2: "))


#processamento
precoTotal = ((ap + ac + ag) * precoArea)

#saidas
print(round(precoTotal,2))#!#!#
2449#;#;#a = float(input())
b = float(input())
c = float(input())
d = float(input())
e = float(input())
f = float(input())

denominador = a*e - b*d

if denominador == 0:
    print("Nao tem solucao")
else:
    x = (c*e - b*f)/denominador
    y = (a*f - c*d)/denominador
    print(x)
    print(y)#!#!#
2450#;#;#NULL#!#!#
652#;#;#numero = int(input())

dezenas = numero % 100

if numero % dezenas == 0:
    mensagem = "SIM"
else:
    mensagem = "NAO"
    
print(mensagem)#!#!#
651#;#;##!#!#
87#;#;##!#!#
2185#;#;##!#!#
2541#;#;#from numpy import*
from math import *

v1 = array(eval(input("Vetor1: ")))
v2 = array(eval(input("Vetor2: ")))
dist = sqrt(sum((v1-v2)**2))
print(round(dist,4))

#dist = np.sqrt(np.dot(dif.T,dif))
#print(round(dif,4))#!#!#
2542#;#;#import numpy as np

entra_onibus = np.array(eval(input()), dtype=int)
sai_onibus = np.array(eval(input()), dtype=int)

diferenca = entra_onibus - sai_onibus

print(sum(diferenca))#!#!#
770#;#;#primeira = input().lower()
segunda = input().lower()

contagem_letras =[0] * 26

i = 0
while i < len(primeira):
	letra = primeira[i]
	if letra.isalpha():
		contagem_letras[ord(letra)-97] += 1
	i += 1

i = 0
while i < len(segunda):
	letra = segunda[i]
	if letra.isalpha():
		contagem_letras[ord(letra)-97] -= 1
	i += 1


eh_anagrama = "SIM"
i = 0
while i < len(contagem_letras):
	contagem = contagem_letras[i]
	if contagem != 0 and eh_anagrama == "SIM":
		eh_anagrama = "NAO"
	i += 1
	
print(eh_anagrama)#!#!#
2543#;#;#import numpy as np

coeficientes = np.array(eval(input()), dtype=int)

i = coeficientes.size - 1
equacao = ''
cont = 0
while(i>0):
    if i!=1:
        equacao += str(coeficientes[cont])+'x^'+str(i)+' + '
    else:
        equacao += str(coeficientes[cont])+'x'+' + '
    cont+=1
    i-=1
equacao += str(coeficientes[cont])
print(equacao)#!#!#
2544#;#;##!#!#
2548#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-J - Iniciais do Nome
@author: IComp / UFAM

Exemplo de Entrada:
FULANO DE TAL

Exemplo de Saída:
FDT
"""

from numpy import *

nome = input("Nome: ")

saida = nome[0]
i = 0

while (i<len(nome)):
    if (nome[i] == " "):
        saida = saida + nome[i+1]
    i = i + 1

print(saida)
#!#!#
2562#;#;#from numpy import *
x = array(eval(input("Entrada: ")))
par=0
inpar=0
while(size(x)>1):
    if size(x)>1:
        for i in range(size(x)):
            if(x[i]%2==0):
                par+=1
            else:
                inpar+=1
    print(par)
    print(inpar)
    print(size(x))
    x = array(eval(input("Entrada: ")))
    par=0
    inpar=0
    if size(x)==1:
        break#!#!#
2563#;#;#from numpy import *
x = array(eval(input("Medias: ")))
media=0
while(size(x)>1):
    if size(x)>1:
        for i in x:
            if( i>=5 and i<7):
                media+=1
        print(media)
    x = array(eval(input("Medias: ")))
    media=0
    if size(x)==1:
        break#!#!#
2564#;#;##!#!#
2565#;#;##!#!#
2566#;#;##!#!#
2567#;#;##!#!#
2568#;#;##!#!#
2569#;#;##!#!#
2570#;#;##!#!#
2571#;#;##!#!#
2572#;#;##!#!#
2573#;#;##!#!#
2574#;#;#from numpy import *
x = input()
lower =0
upper =0
N = 0
for i in x:
    if i.islower():
        lower+=1
    if i.isupper():
        upper+=1
        
if upper>=1 and lower>=1 and len(x) >= 8:
   print("SENHA VALIDA")
else:
   print("SENHA INVALIDA")#!#!#
2575#;#;#from numpy import *
x = array(eval(input("Vetor: ").upper())) 
a=zeros(3, dtype=int)
for i in range(size(x)):
    if  x[i]=="TV":
        a[0]+=1
    if  x[i]=="NETFLIX":
        a[1]+=1
    if  x[i]=="YOUTUBE":
        a[2]+=1
print(a)#!#!#
2576#;#;#from numpy import *
x = int(input())
h=0
for i in range(1,x+1):
    h+=1/i
print(round(h,2))#!#!#
2577#;#;#from numpy import *
x = input()
vog = "aeiou"
for i in vog:
    if i in x:
        x = x.replace(i,"")
print(x)#!#!#
2578#;#;##!#!#
2131#;#;## -*- coding: utf-8 -*-
"""
Introducao a Programacao de Computadores
TP 04 - Questão 2 - A - Serie de Maclaurin do Cosseno
@author: IComp / UFAM
Criado em 06 / 12 / 2016
"""

from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 11

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
for cont in range(k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont) / factorial(2*cont)
	sinal = - sinal	

# Imprime resultado
print(round(serie, precisao))
#!#!#
2579#;#;#from numpy import *
x = int(input("Calcule"))
n=1
i=1
h=0
for i in range(1,x+1):
    h+=n/i
    n+=2
    i+=1
print(round(h,2))   #!#!#
2580#;#;#from numpy import *

n = int(input())

for i in range(n):
	seq = input()
	
	string = ''
	current = seq[0]
	tmp = ''
	count = 1
	for j in range(len(seq)):
		if j > 0:
			if seq[j] == current:
				if tmp != '':
					string = string + '1' + tmp + '1'
					tmp = ''
					current = seq[j]
					count = 2
				else:
					count += 1
			else:
				if count > 1:
					string = string + (count//9)*(str(9) + current)
					if (count%9 > 0):
						string = string + str(count%9) + current
					current = seq[j]
					count = 1
					tmp = ''
				else:
					if current == '1':
						tmp = tmp + '11'
					else:
						tmp = tmp + current
					current = seq[j]
	
	if count > 1:
		string = string + (count//9)*(str(9) + current)
		if (count%9 > 0):
			string = string + str(count%9) + current
	else:
		if current == '1':
			tmp = tmp + '11'
		else:
			tmp = tmp + current
		string = string + '1' + tmp + '1'
	print(string)#!#!#
2581#;#;##!#!#
2582#;#;## -*- coding: utf-8 -*-
"""
Introducao a Programacao de Computadores
TP 04 - Questão 2 - C - Serie de Maclaurin do Cosseno Hiperbolico
@author: IComp / UFAM
Criado em 06 / 12 / 2016
"""

from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont) / factorial(2*cont)
	sinal = sinal	

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
2583#;#;##!#!#
2584#;#;#n = int(input())

soma = 0 

for i in range(1,n+1):
	soma = soma + (-1)**(i+1)*(1/i)
	
print("H =",round(soma,6))	#!#!#
2601#;#;#"""
Criado em 21 / 06 / 2015
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear
frutas = array([[3, 12, 1], [12, 0, 2], [0, 2, 3]])

# Vetor de constantes
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Indice da fruta mais cara (maior elemento do vetor)
maior = nonzero(preco == max(preco))

# Imprime nome da fruta mais cara
if maior[0] == 0:
    print("abacate")
elif maior[0] == 1:
    print("banana")
else:
    print("caqui")#!#!#
2602#;#;##!#!#
2603#;#;##!#!#
2604#;#;#from numpy import *

matriz = array(eval(input()))

for linha in matriz:
	print(max(linha))#!#!#
2637#;#;##!#!#
2638#;#;##!#!#
2639#;#;#from numpy import *
mat = array(eval(input("Matriz: ")))

n = shape(mat)[0]

i = 0
somadp = 0
somads = 0

while (i < n):
	somadp = somadp + mat[i,i]
	i = i + 1

k = 0
l = n - 1
while (k < n):
	somads = somads + mat[k,l]
	k = k + 1
	l = l - 1

dif = somadp - somads
print(dif)#!#!#
2627#;#;##Questao J TP7 2018-1
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(lin)
for i in range(lin):
    v[i]=min(a[i,:])

print(v)#!#!#
2640#;#;##!#!#
2641#;#;##!#!#
2622#;#;##Questao E TP7 2018-1
from numpy import *
a=array(eval(input()))
v=zeros(5)
for j in range(5):
    v[j]=sum(a[:,j])
print(max(v))
porcentagem=(max(v)/sum(v))*100
if porcentagem>50:
    print("NAO")
else:
    print("SIM")#!#!#
2642#;#;##!#!#
2644#;#;##!#!#
2643#;#;##!#!#
2623#;#;##Questao F TP7 2018-1
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(lin)
for i in range(lin):
    v[i]=min(a[i,:])
for i in range(size(v)):
    if v[i]==min(v):
        print(i)#!#!#
2624#;#;##Questao G TP7 2018-1
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(lin)
for i in range(lin):
    v[i]=round(sum(a[i,:])/col,2)
print(v)
#for i in v:
#	print(i)#!#!#
2625#;#;##Questao H TP7 2018-1
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(lin)
for i in range(lin):
    v[i]=max(a[i,:])
for i in range(size(v)):
    if v[i]==max(v):
        print(i)
#!#!#
2619#;#;##Questao B TP7 2018-1
from numpy import *
a=array(eval(input()))
v=zeros(5)
for j in range(5):
	v[j]=sum(a[:,j])
for i in range(5):
	if v[i]==min(v):
		print(i)#!#!#
2621#;#;##Questao D TP7 2018-1
from numpy import *
a=array(eval(input()))
v=zeros(5)
for j in range(5):
    v[j]=sum(a[:,j])
porcentagem=(min(v)/sum(v))*100
print(round(porcentagem,2))#!#!#
2618#;#;##Questao A TP7 2018-1
from numpy import *
a=array(eval(input()))
v=zeros(5)
for j in range(5):
	v[j]=sum(a[:,j])
		
for i in range(5):
	if v[i]==max(v):
		print(i)
		#!#!#
2626#;#;##Questao I TP7 2018-1
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(lin)
for i in range(lin):
	v[i]=max(a[i,:])
print(v)#!#!#
2620#;#;##Questao C TP7 2018-1
from numpy import *
a=array(eval(input()))
v=zeros(5)
for j in range(5):
    v[j]=sum(a[:,j])
porcentagem=(max(v)/sum(v))*100
print(round(porcentagem,2))#!#!#
2462#;#;#NULL#!#!#
2490#;#;##!#!#
2500#;#;##!#!#
2501#;#;##!#!#
2650#;#;##!#!#
2668#;#;#A = float(input("A: "))
B = float(input("B: "))

h = (A*B)/(A+B)

print(round(h, 2))
#!#!#
2673#;#;#import math

r = float(input("r: "))
n = float(input("n: "))
    
L = 2 * r * math.sin(math.pi / n)

print(round(L, 2))
#!#!#
2683#;#;#from math import *
 
media = float(input())
raio = float(input())
 
print(int(media*pi*(raio**2)))
#!#!#
2670#;#;#from math import *

a = float(input())
b = float(input())
c = float(input())

x = sqrt(((2*pow(b,2))+(2*pow(c,2))-(pow(a,2)))/4)
print(round(x, 2))#!#!#
2669#;#;#import math

a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

x = math.sqrt((a + b)**2 + c**2) / math.sqrt(2)

print(round(x, 2))
#!#!#
2672#;#;#import math

r = float(input("r: "))
n = float(input("n: "))
    
A = 1/2 * (r * math.cos(math.pi/n))**2 * math.tan(math.pi/n)

print(round(A, 2))
#!#!#
2671#;#;#import math

r = float(input("r: "))
n = float(input("n: "))
    
a = r * math.cos(math.pi/n)

print(round(a, 2))
#!#!#
2684#;#;#media = float(input())
comprimento = float(input())
largura = float(input())
 
print(round(media*comprimento*largura, 2))#!#!#
2666#;#;#x1 = float(input("x1: "))
y1 = float(input("y1: "))
x2 = float(input("x2: "))
y2 = float(input("y2: "))

distancia = abs(x1 - x2) + abs(y1 - y2)

print(round(distancia, 2))#!#!#
2664#;#;#n = int(input("Pessoas: "))
total = 1/1000000 * n
print(round(total, 2))#!#!#
2665#;#;#x1 = float(input("x1: "))
y1 = float(input("y1: "))
x2 = float(input("x2: "))
y2 = float(input("y2: "))

distancia = abs(x1 - x2) + abs(y1 - y2)

print(round(distancia, 2))#!#!#
2703#;#;#idade = int(input())

if (idade >= 2):
	print("paga")
else:
	print("nao_paga")
	#!#!#
2704#;#;##!#!#
2711#;#;##!#!#
1749#;#;#extras = float(input("Horas extras: "))
faltas = float(input("Horas que o fundionario faltou: "))

horas = (extras) - ((1/4) * faltas)
valor = (500 if horas > 400 else 100)

print(extras,"extras e",faltas,"de falta")
print("R$ %.1f" %valor)

#!#!#
2736#;#;#c1 = float(input("Mais votado: "))
c2 = float(input("Segundo lugar: "))
c3 = float(input("Menos votado: "))
branco = float(input("Em branco: "))
nulo = float(input("Nulos: "))

validos = c1 + c2 + c3
porcentagem = 0.0

if (c1 > (validos/2)):
	porcentagem = (c1/(validos)) * 100

print(round(porcentagem,2))#!#!#
2760#;#;#genero = input("Qual Genero:(Masculino/Feminino)").lower()
peso = float(input("Qual seu Peso:"))
alt = float(input("Qual sua Altura:"))
imc = peso / alt**2
#print(imc)

if(genero == "masculino"):
	if (imc >= 30.00 and imc <= 42.9):
		print("Obesidade Moderada")
	elif (imc >= 25.00 and imc <= 29.9):
		print("Obesidade Leve")
	#elif (imc >= 20.00 and imc <= 24.9):
		#print("Normal")
	elif (imc < 20.00):
		print("Abaixo Normal")
	else:
		print("entrada invalida")
elif (genero == "feminino"):
	if (imc >= 29.00 and imc <= 38.9):
		print("Obesidade Moderada")
	#elif (imc >= 19.00 and imc <= 23.90):
		#print("Normal")
	elif (imc >= 24.00 and imc <= 28.9):
		print("Obesidade Leve")
	elif (imc < 19.00):
		print("Abaixo Normal")
	else:
		print("entrada invalida")
else:
	print("entrada invalida")#!#!#
2764#;#;#n1=float(input("primeira nota"))
n2=float(input("segunda nota"))
n3=float(input("terceira nota"))
n4=float(input("quarta nota"))
faltas=float(input("qtd faltas"))
# o que muda nas questões é o calculo da nota final
# nfinal = n1+n2+n3+n4 # questão A
# nfinal = (n1+n2+n3+n4)/4 # questão B 
# nfinal = (n1*1+n2*2+n3*3+n4*4)/10 # questão C 
nfinal = ((n1*2)+(n2*3)+(n3*2)+(n4*3))/10 # questão D

if(nfinal >= 8.9):
	if (faltas < 15):
		print("A","Aprovado")
	else: 
		print("A","Reprovado por Falta") 	
elif(nfinal >= 7.9):
	if (faltas < 15):
		print("B","Aprovado")
	else:
		print("B","Reprovado por Falta") 	    
elif(nfinal >= 6.9):
	if (faltas < 15):
		print("C","Aprovado")
	else:
		print("C","Reprovado por Falta") 
elif(nfinal >= 5.9):
	if (faltas < 15):
		print("D","Aprovado")
	else:
		print("D","Reprovado por Falta") 
else:
	print("F","Reprovado por Nota")#!#!#
2762#;#;#n1=float(input("primeira nota"))
n2=float(input("segunda nota"))
n3=float(input("terceira nota"))
n4=float(input("quarta nota"))
faltas=float(input("qtd faltas"))
# o que muda nas questões é o calculo da nota final
#nfinal = n1+n2+n3+n4 # questão A
nfinal = (n1+n2+n3+n4)/4 # questão B 
#nfinal = (n1*1+n2*2+n3*3+n4*4)/10 # questão C 
#nfinal = (n1*2+n2*3+n3*2+n4*3)/10 # questão D

if(nfinal >= 8.9):
	if (faltas < 15):
		print("A","Aprovado")
	else: 
		print("A","Reprovado por Falta") 	
elif(nfinal >= 7.9):
	if (faltas < 15):
		print("B","Aprovado")
	else:
		print("B","Reprovado por Falta") 	    
elif(nfinal >= 6.9):
	if (faltas < 15):
		print("C","Aprovado")
	else:
		print("C","Reprovado por Falta") 
elif(nfinal >= 5.9):
	if (faltas < 15):
		print("D","Aprovado")
	else:
		print("D","Reprovado por Falta") 
else:
	print("F","Reprovado por Nota") #!#!#
2756#;#;#consumo = float(input("Consumo: "))

limiar = 1000.0

if (consumo <= limiar):
    total = consumo * .05 + 200
elif (consumo > limiar and consumo <= 2000):
    total = consumo * .06 + 300
elif (consumo > 2000 and consumo <= 3000):
    total = consumo * .07 + 400
else:
    total = consumo * .1 + 500

print(round(total, 2))#!#!#
2759#;#;#genero = input("Qual Genero:(Masculino-Feminino)").lower()
peso = float(input("Qual seu Peso:"))
if (genero == "masculino"):
	if (peso >= 94.00 and peso <= 120.00):
		print("Peso Pesado")
	elif (peso >= 85.00 and peso <= 93.00):
		print("Peso Meio Pesado")
	elif (peso >= 78.00 and peso <= 84.00):
		print("Peso Medio")
	#elif (peso >= 71.00 and peso <= 77.00):
		#print("Peso Meio-Medio")
	#elif (peso >= 67.00 and peso <= 70.00):
		#print("Peso Leve")
	#elif (peso >= 62.00 and peso <= 66.00):
		#print("Peso Pena")
	#elif (peso >= 57.00 and peso <= 61.00):
		#print("Peso Galo")
	#elif (peso < 57.00):
		#print("Peso Mosca")
	else:
		print("categoria invalida")
else:
	if (peso >= 62.00 and peso <= 66.00):
		print("Peso Pena Feminino")
	elif (peso >= 53.00 and peso <= 61.00):
		print("Peso Galo Feminino")
	elif (peso <= 52.00):
		print("Peso Palha Feminino")
	else:
		print("categoria invalida")#!#!#
2754#;#;#arma = input("Arma: ").upper()
quantidade = int(input("Quantidade: "))
peso = -1

if (quantidade >= 0 and quantidade <= 100):
	if (arma == "ADAGA"):
		peso = quantidade * 0.5
	elif (arma == "BASTAO"):
		peso = quantidade * 2.25
	elif (arma == "CLAVA"):
		peso = quantidade * 1.5
	elif (arma == "ESPADA"):
		peso = quantidade * 1
	elif (arma == "FUNDA"):
		peso = quantidade * 0.25
	elif (arma == "GRANADA"):
		peso = quantidade * 0.5
	elif (arma == "PIQUE"):
		peso = quantidade * 5
	elif (arma == "TACAPE"):
		peso = quantidade * 4
	else:
		print("Entrada invalida")
else:
	print("Entrada invalida")

if (peso != -1):
    print(round(peso,2))#!#!#
2763#;#;#n1=float(input("primeira nota"))
n2=float(input("segunda nota"))
n3=float(input("terceira nota"))
n4=float(input("quarta nota"))
faltas=float(input("qtd faltas"))
# o que muda nas questões é o calculo da nota final
#nfinal = n1+n2+n3+n4 # questão A
#nfinal = (n1+n2+n3+n4)/4 # questão B 
nfinal = ((n1*1)+(n2*2)+(n3*3)+(n4*4))/10 # questão C 
#nfinal = (n1*2+n2*3+n3*2+n4*3)/10 # questão D

if(nfinal >= 8.9):
	if (faltas < 15):
		print("A","Aprovado")
	else: 
		print("A","Reprovado por Falta") 	
elif(nfinal >= 7.9):
	if (faltas < 15):
		print("B","Aprovado")
	else:
		print("B","Reprovado por Falta") 	    
elif(nfinal >= 6.9):
	if (faltas < 15):
		print("C","Aprovado")
	else:
		print("C","Reprovado por Falta") 
elif(nfinal >= 5.9):
	if (faltas < 15):
		print("D","Aprovado")
	else:
		print("D","Reprovado por Falta") 
else:
	print("F","Reprovado por Nota")#!#!#
2766#;#;#genero = input("Qual Genero:(Masculino-Feminino)").lower()
peso = float(input("Qual seu Peso:"))
if(genero == "masculino"):
	if (peso >= 62.00 and peso <= 66.00):
		print("Peso Pena")
	elif (peso >= 57.00 and peso <= 61.00):
		print("Peso Galo")
	elif (peso < 57.00):
		print("Peso Mosca")
	else:
		print("categoria invalida")
else:
	if (peso >= 62.00 and peso <= 66.00):
		print("Peso Pena Feminino")
		
	elif (peso >= 53.00 and peso <= 61.00):
		print("Peso Galo Feminino")
	elif (peso <= 52.00):
		print("Peso Palha Feminino")
	else:
		print("categoria invalida")#!#!#
2780#;#;#NULL#!#!#
2779#;#;#NULL#!#!#
2778#;#;#NULL#!#!#
2777#;#;#NULL#!#!#
2775#;#;#NULL#!#!#
2781#;#;##!#!#
2774#;#;#NULL#!#!#
2805#;#;#deposito = float(input('deposito: '))
meses = int(input('meses: '))

#taxa = float(input('taxa: '))
cont = 0
taxa = 0.012

while cont < meses:
	deposito += (deposito * taxa)
	print(round(deposito,2))  
	cont+= 1
	

#!#!#
2797#;#;#n_bacterias = int(input("Informe o número de bactérias inicial: "))
horas_futuro = int(input("Informe o número horas: "))
horas = 0

while(horas < horas_futuro):
    n_bacterias = n_bacterias + int(n_bacterias*0.02)
    horas = horas + 1

print (n_bacterias)
#!#!#
2795#;#;#N = int(input("Informe o ano desejado: "))
ano = 1993
bogomips = 23.0

while (ano <= N):
	print(round(bogomips,2))
	bogomips = bogomips + bogomips*0.65
	ano = ano + 1#!#!#
2798#;#;#n_bacterias = int(input("Informe o número de bactérias inicial: "))
horas_futuro = int(input("Informe o número horas: "))
horas = 0

while(horas < horas_futuro):
	n_bacterias = n_bacterias + int(n_bacterias*0.15)
	horas = horas + 1
  print (n_bacterias)#!#!#
2793#;#;#velocidade = float(input("Informe a velocidade de lançamento: "))
segundos = 0

while(velocidade > 40):
	velocidade = velocidade - velocidade*0.02
	segundos = segundos + 1

print (segundos)#!#!#
2792#;#;#massa = float(input("Informe a quantidade de massa inicial: "))
N = int(input("Informe a quantidade de anos: "))
anos = 0

while(anos < N):
	massa = massa - massa*0.05
	anos = anos + 1
	print(round(massa,2))#!#!#
2804#;#;#valor = float(input("Escreva a quantia inicial: "))
meses = int(input("Escreva o número de meses: "))
n = 0

while (n<meses):
    valor = valor + valor*0.01
    print (round(valor,2))
    n = n+1#!#!#
2845#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	if vetor[indice] == 9:
		vetor[indice] = 0
	else:	
		vetor[indice] = vetor[indice]+1
print(vetor)#!#!#
2847#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	vetor[indice] = vetor[indice]*vetor[indice]
print(vetor)#!#!#
2848#;#;#from numpy import *
# Leitura do vetor
N = int(input("Informe o valor de N:"))
vet = arange(2,N+1)

res = 1
for i in vet:
	res = res * i
print(res)#!#!#
2870#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
soma = 0
for elemento in vetor:
	soma = soma + elemento
	if soma >= 55:
		soma = 0
		
print(soma)#!#!#
2844#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	if vetor[indice] == 0:
		vetor[indice] = 9
	else:	
		vetor[indice] = vetor[indice]-1
print(vetor)#!#!#
2853#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
soma = 0
for elemento in vetor:
	if elemento == 10:
		soma = soma * 10
	else:
		soma = soma + elemento
print(soma)
#!#!#
2893#;#;##!#!#
2874#;#;##Questao A TP7 2018-2
from numpy import *
a=array(eval(input()))
v=zeros(3)
for j in range(3):
    v[j]=sum(a[:,j])
for i in range(3):
    if v[i]==max(v):
        print(i)#!#!#
196#;#;#from numpy import *

campo = array(eval(input("Campo: ")))
linha = int(input("Linha: "))
coluna = int(input("Coluna: "))

if campo[linha][coluna] == 'B':
    print("BOMBA")
else:
    print("LIVRE")#!#!#
2723#;#;##!#!#
2724#;#;##!#!#
2728#;#;#consumo_A = 8
consumo_B = 9

percurso = float(input("Percurso:"))
carro = input("Tipo de carro:")

if carro.upper() == "A":
	consumo = percurso / consumo_A
else:
	consumo = percurso / consumo_B

	print(round(consumo,2))#!#!#
2729#;#;##!#!#
2730#;#;##!#!#
2731#;#;##!#!#
2767#;#;#genero = input("Qual Genero:(Masculino/Feminino)").lower()
peso = float(input("Qual seu Peso:"))
alt = float(input("Qual sua Altura:"))
imc = peso / alt**2
#print(imc)

if(genero == "masculino"):
	if (imc >  43):
		print("Obesidade Morbida")
	elif (imc >= 30.00 and imc <= 42.9):
		print("Obesidade Moderada")
	elif (imc >= 25.00 and imc <= 29.90):
		print("Obesidade Leve")
	#elif (imc >= 20.00 and imc <= 24.9):
		#print("Normal")
	#elif (imc < 20.00):
		#print("Abaixo Normal")
	else:
		print("entrada invalida")
elif (genero == "feminino"):
	if (imc >  39):
		print("Obesidade Morbida")
	elif (imc >= 29.00 and imc <= 38.9):
		print("Obesidade Moderada")
	elif (imc >= 24.00 and imc <= 28.90):
		print("Obesidade Leve")
	#elif (imc >= 19.00 and imc <= 23.90):
		#print("Normal")
	#elif (imc < 19.00):
		#print("Abaixo Normal")
	else:
		print("entrada invalida")
else:
	print("entrada invalida")
#!#!#
2768#;#;#genero = input("Qual Genero:(Masculino/Feminino)").lower()
peso = float(input("Qual seu Peso:"))
alt = float(input("Qual sua Altura:"))
imc = peso / alt**2
#print(imc)

if(genero == "masculino"):
	if (imc >  43):
		print("Obesidade Morbida")
	elif (imc >= 20.00 and imc <= 24.9):
		print("Normal")
	elif (imc < 20.00):
		print("Abaixo Normal")
	else:
		print("entrada invalida")
elif (genero == "feminino"):
	if (imc >  39):
		print("Obesidade Morbida")
	elif (imc >= 19.00 and imc <= 23.90):
		print("Normal")
	elif (imc < 19.00):
		print("Abaixo Normal")
	else:
		print("entrada invalida")
else:
	print("entrada invalida")#!#!#
2761#;#;#n1=float(input("primeira nota"))
n2=float(input("segunda nota"))
n3=float(input("terceira nota"))
n4=float(input("quarta nota"))
faltas=float(input("qtd faltas"))
# o que muda nas questões é o calculo da nota final
nfinal = (n1+n2+n3+n4) # questão A
#nfinal = (n1+n2+n3+n4)/4 # questão B 
#nfinal = (n1*1+n2*2+n3*3+n4*4)/10 # questão C 
#nfinal = (n1*2+n2*3+n3*2+n4*3)/10 # questão D

if(nfinal >= 89):
	if (faltas < 15):
		print("A","Aprovado")
	else: 
		print("A","Reprovado por Falta") 	
elif(nfinal >= 79):
	if (faltas < 15):
		print("B","Aprovado")
	else:
		print("B","Reprovado por Falta") 	    
elif(nfinal >= 69):
	if (faltas < 15):
		print("C","Aprovado")
	else:
		print("C","Reprovado por Falta") 
elif(nfinal >= 59):
	if (faltas < 15):
		print("D","Aprovado")
	else:
		print("D","Reprovado por Falta") 
else:
	print("F","Reprovado por Nota")#!#!#
2765#;#;#genero = input("Qual Genero:(Masculino-Feminino)").lower()
peso = float(input("Qual seu Peso:"))
if (genero == "masculino"):	
	if (peso >= 71.00 and peso <= 77.00):
		print("Peso Meio-Medio")
	elif (peso >= 67.00 and peso <= 70.00):
		print("Peso Leve")
	elif (peso >= 62.00 and peso <= 66.00):
		print("Peso Pena")
	else:
		print("categoria invalida")
		
else:
	if (peso >= 62.00 and peso <= 66.00):
		print("Peso Pena Feminino")
	elif (peso >= 53.00 and peso <= 61.00):
		print("Peso Galo Feminino")
	elif (peso <= 52.00):
		print("Peso Palha Feminino")
	else:
		print("categoria invalida")#!#!#
2794#;#;#velocidade = float(input("Informe a velocidade de lançamento: "))
minuto = 0

while(velocidade >= 50):
	print (round(velocidade,2))
	velocidade = velocidade - velocidade*0.25	
	minuto = minuto + 1#!#!#
2836#;#;#from numpy import *

notas = array(eval(input("Notas: ")))

i=0
while i<len(notas):
	if notas[i] > 8:
		notas[i] = 10
	elif notas[i] < 2:
		notas[i] = 0
	i += 1

print(notas)#!#!#
2850#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
soma = 0
for elemento in vetor:
	soma = soma + elemento
	if soma >= 55:
		soma = 0
		
print(soma)#!#!#
2846#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	vetor[indice] = vetor[indice]*2
print(vetor)#!#!#
2851#;#;#from numpy import *
vetor = array(eval(input("Informe o vetor:")))

soma = 0
for elemento in vetor:
	if elemento != 99:
		soma = soma + elemento
	else: 
		soma = soma * 2

print(soma)
#!#!#
2849#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
soma = 0
for elemento in vetor:
	if elemento == 0:
		soma = 0
	else:
		soma = soma + elemento
print(soma)#!#!#
2852#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
soma = 0
for elemento in vetor:
	if elemento == 88:
		soma = soma / 2
	else:
		soma = soma + elemento
print(soma)#!#!#
2876#;#;##Questao B TP7 2018-2
from numpy import *
a=array(eval(input()))
v=zeros(4)
#print(v)
for j in range(4):
    v[j]=sum(a[:,j])
for i in range(4):
    if v[i]==min(v):
        print(i)#!#!#
2872#;#;#from numpy import *

triangulos = array(eval(input("Triangulos: ")))

numTriangulos = shape(triangulos)[0]
somaAreas = 0

for i in range(numTriangulos):
    somaAreas = somaAreas + ((triangulos[i][0] * triangulos[i][1])/2)

print(round(somaAreas/numTriangulos, 2))#!#!#
2873#;#;#from numpy import *

retangulos = array(eval(input("Retangulos: ")))

numRetangulos = shape(retangulos)[0]
somaAreas = 0

for i in range(numRetangulos):
    somaAreas = somaAreas + (retangulos[i][0] * retangulos[i][1])

print(round(somaAreas/numRetangulos, 2))#!#!#
2879#;#;##Questao C TP7 2018-2
from numpy import *
a=array(eval(input()))
v=zeros(3)
for j in range(3):
    v[j]=sum(a[:,j])
porcentagem=(max(v)/sum(v))*100
print(round(porcentagem,2))#!#!#
2881#;#;##Questao E TP7 2018-2
from numpy import *
a=array(eval(input()))
v=zeros(3)
for j in range(3):
    v[j]=sum(a[:,j])
    
for i in range(3):
    if v[i]==max(v):
        print(i)

print(max(v))
porcentagem=(max(v)/sum(v))*100
if porcentagem>50:
    print("SIM")
else:
    print("NAO")#!#!#
2882#;#;##Questao F TP7 2018-2	
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
#print('linha',lin)
col=shape(a)[1]
#print('coluna',col)
v=zeros(col)
for i in range(size(v)):
    v[i]=sum(a[:,i])
for j in range(size(v)):
    if v[j]==min(v):
        print(j)       
#print(v)
#print(v.shape)
#print(a.shape)#!#!#
2883#;#;##Questao G TP7 2018-2
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(col)
for j in range(col):
    v[j]=round(sum(a[:,j])/lin,2)
print(v)#!#!#
2884#;#;##Questao H TP7 2018-2
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(col)
for i in range(col):
    v[i]= sum(a[:,i])
for i in range(size(v)):
    if v[i]==max(v):
        print(i)#!#!#
2885#;#;##Questao I TP7 2018-2
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(col)
for j in range(col):
    v[j]=max(a[:,j])
print(v)#!#!#
2886#;#;##Questao I TP7 2018-2
from numpy import *
a=array(eval(input()))
lin=shape(a)[0]
col=shape(a)[1]
v=zeros(col)
for j in range(col):
    v[j]=min(a[:,j])
print(v)#!#!#
2880#;#;##Questao D TP7 2018-2
from numpy import *
a=array(eval(input()))
v=zeros(4)
for j in range(4):
    v[j]=sum(a[:,j])
porcentagem=(min(v)/sum(v))*100
print(round(porcentagem,2))#!#!#
2896#;#;## Leitura de valores de entrada
var = str(input("Digite o nome: "))

# Impressao de saidas
print(var)#!#!#
2897#;#;## Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(2 * num)#!#!#
2942#;#;#donuts = int(input())

ovos = donuts / 12 * 2
leite = donuts / 12 * 150
farinha = donuts / 12 * 120

print(ovos,leite,farinha)#!#!#
2918#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao A
Capitã Marvel
Criado em 19 / 03 / 2019
@author: IComp / UFAM
"""

#constantes
desconto20 = 20

#entradas
precoIngresso = float(input("Entre com o valor do ingresso: "))
quantidade = int(input("Entre com a quantidade de ingressos: "))

#processamento
precoPromocional = precoIngresso - (precoIngresso * (desconto20 / 100))
precoTotal = precoPromocional*quantidade


#saidas
print(round(precoTotal, 2))
#!#!#
2945#;#;##!#!#
2922#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao E
O segredo do sucesso de Robertina
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""

#constantes
montanteInicial = 1500.00
montanteFinal = 1042000.00

#entradas
tempo = int (input("Entre o tempo de investimento (em meses): "))

#processamento
TaxaJuros = ((montanteFinal/montanteInicial)**(1.0/tempo))-1

#saidas
print(round (TaxaJuros, 5))
#!#!#
2944#;#;##!#!#
2921#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao B
World Resort
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""



#entradas
desconto25 = 25
jogo1 = float(input("Informe o preço do primeiro jogo comprado: "))
jogo2 = float(input("Informe o preço do segundo jogo comprado: "))


#processamento
jogo2desconto = (jogo2 - (jogo2 * desconto25 / 100))

#saidas
print(round(jogo2desconto,2))
print(round(jogo1 + jogo2desconto,2))#!#!#
2946#;#;#ml = float(input("media dos laboratorios: "))
mt = float(input("media dos trabalhos: "))
mp = float(input("media das provas: "))

nota_final = 0.25*ml + 0.3*mt + 0.45*mp
nota_final = round(nota_final, 2)

print(nota_final)#!#!#
2941#;#;##!#!#
2920#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao C
Restaurante Cantina da Neide
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""

#constantes
kgSelfservice = 26.90
suco = 3.50
sobremesa = 3.00

#entradas

self = float(input("Quantos gramas possui seu prato?: "))
qtdSucos = int(input("quantidade de sucos: "))
qtdsobremesas = int(input("quantidade de sobremesas: "))
#processamento

totalSelf = self*kgSelfservice/1000
totalSucos = qtdSucos*suco
totalSobremesa = qtdsobremesas*sobremesa

valorTotal = totalSelf + totalSucos + totalSobremesa

#saidas
print("%.2f" %valorTotal)
#print(round(valorTotal, ndigits=2))

#!#!#
2923#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao F
Apartamento de Robertina
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""

#constantes
capital = 1500.00
tempo = 36

#entradas
taxaJuros = float(input("Entre com o valor da taxa de juros: " ))

#processamento
total = capital * (1+ taxaJuros)**tempo

#saidas
print(round(total,2))

#!#!#
2938#;#;#import math

a = float(input("distancia entre observador e primeira arvore: "))
b = float(input("distancia entre observador e segunda arvore: "))
gamma = float(input("angulo entre a e b (em graus): "))

c = math.sqrt(a**2 + b**2 - 2*a*b*math.cos(math.radians(gamma)))
c = round(c, 2)
print(c)#!#!#
2947#;#;##!#!#
2927#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao J
Lanche do Zezinho
Criado em 21 / 03 / 2019
@author: IComp / UFAM
"""
#constantes
salgadopromo = 1.50

#entradas
bebida = float(input("Entre com o valor de sua bebida: "))
num= int(input("Entre com o numero de seu salgado: "))

#processamento
total = bebida + salgadopromo * num

#saidas
print(round(total, 2))#!#!#
2919#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao B
World Resort
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""


#entradas
membro1 = float(input("Entre a altura do 1º integrante (metros): "))
membro2 = float(input("Entre a altura do 2º integrante (metros): "))
membro3 = float(input("Entre a altura do 3º integrante (metros): "))
membro4 = float(input("Entre a altura do 4º integrante (metros): "))

#processamento
altura = (membro1+membro2+membro3+membro4)/4

#saidas
print(round(altura,2))#!#!#
2924#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao G
Ultrapassagem
Criado em 21 / 03 / 2019
@author: IComp / UFAM
"""

#entradas
inicial = int(input("Entre com a posicao inicial do movel : "))
velocidade = int(input("Entre com a velocidade do movel (m/s): "))
tempo = int(input("Entre com o intervalo de tempo (s): "))

#processamento
final = inicial + velocidade * tempo

#saidas
print(final)#!#!#
2925#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao H
População de bactérias
Criado em 21 / 03 / 2019
@author: IComp / UFAM
"""

#contantes
bacterias = 2

#entradas
geracao = int(input("Entre com o numero da geracao atual da populacao: "))

#processamento
total = bacterias**geracao

#saidas
print(total)#!#!#
2943#;#;##!#!#
2939#;#;##!#!#
2926#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao I
Açaí
Criado em 21 / 03 / 2019
@author: IComp / UFAM
"""
#constante
precoAcai = 24.00
salgado = 3.00

#entradas
copo = int(input("Entre com a quantidade de acai de seu pedido (g): "))
qtsalgado= int(input("Entre com a quantidade de salgado: "))

#processamento
total = ((precoAcai * copo / 1000) + (qtsalgado * salgado))
#saidas
print(round(total, 2))#!#!#
2940#;#;##!#!#
2974#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao I
Curumim Acai – Troco
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constante
precoAcai = 24.00
salgado = 3.00

#entradas
copo = int(input("Digite a quantidade de acai de seu pedido (g): "))
qtsalgado = int(input("Digite a quantidade de salgados: "))
pago = float(input("Digite o valor pago em dinheiro: ")) 

#processamento
total = ((precoAcai * copo / 1000) + (qtsalgado * salgado))

#saidas
print(round(total, 2))
if total < pago:
	print("Sim")
else:
	print("Nao")
#!#!#
2973#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao H
Movimento Uniforme – velocidade limite
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
limite = 100	#velocidade limite (m/s)
 
#entradas
inicial = int(input("Digite a posicao inicial do objeto : "))
velocidade = int(input("Digite a velocidade do objeto (m/s): "))
tempo = int(input("Digite o intervalo de tempo (s): "))

#processamento
final = inicial + velocidade * tempo

#saidas
print(final)
if velocidade > limite:
	print("ACIMA")
else:
	print("OK") #!#!#
2967#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao B
World Resort – altura permitida
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""
#constantes
altura_atracao = 1.37

#entradas
eu = float(input("Digite a sua altura (metros): "))
amigo = float(input("Digite a altura do do seu amigo (metros): "))

#processamento
if eu > amigo:
	altura = eu
else:
	altura = amigo

#saidas
if altura >= altura_atracao:
	print("Sim")
else:
	print("Nao")

print(round(altura,2))#!#!#
2971#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao F
Robertina compra apartamento?
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
capital = 1500.00
tempo = 36

#entradas
taxaJuros = float(input("Digite o valor da taxa de juros: " ))
apartamento = float(input("Digite o valor do apartamento: " ))

#processamento
total = capital * (1+ taxaJuros)**tempo

#saidas
print(round(total,2))
if total >= apartamento:
	print('Sim')
else:
	print('Nao') #!#!#
2975#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao J
Restaurante do Zezinho – dinheiro curto
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
suco = 3.0
salgado = 3.50

#entradas
qtd_suco = int(input("Digite a quantidade de suco: "))
qtd_salgado = int(input("Digite a quantidade de salgados: "))
disponivel = float(input("Digite o valor disponivel: "))

#processamento
total = (qtd_suco * suco) + (salgado * qtd_salgado)

#saidas
print(round(total, 2))
if disponivel >= total:
	print("Sim")
else:
	print("Nao")#!#!#
2968#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao C
Cantina da Neide – lanche ou salgado
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
lanche = 5.0
salgado = 3.50
refri = 4.0

#entradas
item = input("Lanche (L) ou salgado (S)? ")
qtd = int(input("Quantidade de lanches ou salgados: "))
qtd_refri = int(input("Quantidade de refrigerantes: "))

#processamento
if item == 'L':
	total = lanche * qtd + (refri * qtd_refri)
else: 
	total = salgado * qtd + (refri * qtd_refri)

#saidas
print(total)#!#!#
2970#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao E
Sucesso de Robertina – Real ou irreal?
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
inicial = 1500.00
final = 1042000.00

#entradas
tempo = int (input("Entre o tempo de investimento (em meses): "))

#processamento
juros = ((final/inicial)**(1.0/tempo))-1

#saidas
print(round (juros, 5))
if juros <= 0.01:
	print("Real") 
else:
	print("Irreal") 
#!#!#
2966#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao A
Capitã Marvel – desconto para mulheres
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
desconto = 20

#entradas
mulheres = input("Mulheres? ") 
precoIngresso = float(input("Entre com o valor do ingresso: "))
quantidade = int(input("Entre com a quantidade de ingressos: "))

#processamento
if mulheres == 'S': 
	precoPromocional = precoIngresso - (precoIngresso * (desconto / 100))
	precoTotal = precoPromocional * quantidade
else:
	precoTotal = precoIngresso * quantidade

#saidas
print(round(precoTotal, 2))#!#!#
2969#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao D
Loja Virtual de Games – desconto
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#entradas
qtd = int(input("Quantidade de jogos (1 ou 2)? "))
jogo1 = float(input("Informe o preco do primeiro jogo comprado: "))


#processamento
if qtd == 2:
	jogo2 = float(input("Informe o preco do segundo jogo comprado: "))
	total = jogo1 + (jogo2 * 0.75)
else:
	total = jogo1

#saidas
print(round(total,2))#!#!#
2972#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao G
Movimento Uniforme – pessoa no caminho
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""
	
#constantes
pessoa = 1000	#distancia da pessoa (em metros)
 
#entradas
inicial = int(input("Digite a posicao inicial do objeto : "))
velocidade = int(input("Digite a velocidade do objeto (m/s): "))
tempo = int(input("Digite o intervalo de tempo (s): "))

#processamento
final = inicial + velocidade * tempo

#saidas
print(final)
if final >= pessoa:
	print("Sim")
else:
	print("Nao") #!#!#
3068#;#;# 



# -*- coding: utf-8 -*-
"""
Created on Sex Nov  28 14:16:48 AMT 2016
TP 03 - Questão 3-I - Katana ou sabre? - Estendida
@author: IComp / UFAM
"""
 
espada = input("Espada: ").upper()
destreza = int(input("Destreza: "))
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))

if (destreza >= 0) and (d1 >= 1 and d1 <= 10) and (d2 >= 1 and d2 <= 10):
    if (espada == "CIMITARRA"):
        dano = 2 * (d1 + d2) + 2 * destreza
        print(dano)
    elif (espada == "KATANA"):
        dano = 2 * (d1 + d2) + destreza
        print(dano)
    elif (espada == "SABRE"):
        dano = (d1 + d2) + 2 * destreza
        print(dano)
    else:
        print("Entrada invalida")
else:
    print("Entrada invalida")
#!#!#
3037#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função G
"""

x = float(input('Entre com o valor de x: '))

if (x <= -1 or x >=1):
    fx = x**2
elif (x> -1 and x <0) or (x > 0 and x < 1):
    fx = x
else:
    fx = 1
    
print(round(fx,4))
#!#!#
3038#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função G
"""

x = float(input('Entre com o valor de x: '))

if (x <= -1 or x >=1):
    fx = abs(x)**(1/2)
elif (x> -1 and x <0) or (x > 0 and x < 1):
    fx = abs(x)
else:
    fx = 0
    
print(round(fx,2))
#!#!#
3060#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  26 14:16:48 AMT 2016
TP 03 - Questão 3-A - Vinha Mortal - Estendida
@author: IComp / UFAM
"""
 
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
rodadas = int(input("Rodadas: "))

if (d1 < 1 or d1 > 6 or d2 < 1 or d2 > 6 or rodadas < 0):
    print("Entrada invalida")
else:
    if (d1 + d2 == 12):
        dano = d1 + d2 + 1
        ataque = "CONSTRICAO"
    elif (d1 + d2 < 5):
        dano = (d1 + d2 + 1) * rodadas
        ataque = "POLEN"
    else:
        dano = d1 * d2
        ataque = "FRAQUEZA"

    print(ataque)
    print(dano)
#!#!#
3031#;#;#"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função A
"""

x = float(input('Entre com o valor de x: '))

if (x <= 1):
    fx = 1
elif (x> 1 and x <=2):
    fx = 2
elif (x> 2 and x <=3):
    fx = x**2
else:
    fx = x**3    

print(round(fx,2))#!#!#
3067#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  28 14:16:48 AMT 2016
TP 03 - Questão 2-J - Marilith - Estendida
@author: IComp / UFAM
"""
 
ataque = input("Ataque: ").upper()
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
d3 = int(input("Dado 3: "))
d4 = int(input("Dado 4: "))

if (d1 >= 1 and d1 <= 6) and (d2 >= 1 and d2 <= 6) and (d3 >= 1 and d3 <= 6) and (d4 >= 1 and d4 <= 6):
    if (ataque == "ESPADA"):
        dano = d1 + d2 + d3 + d4 + 24
        print(dano)
    elif (ataque == "CAUDA"):
        dano = (d1 + d2 + d3) * d4
        print(dano)
    else:
        print("Entrada invalida")
else:
    print("Entrada invalida")#!#!#
3039#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função I
"""
import math

x = float(input('Entre com o valor de x: '))

if (x < -1  or x > 1):
    print('entrada invalida')
else:
    if (x>=-1 and x < -0.5) or (x> 0.5 and x <= 1):
        fx = math.asin(x)
    else:
        fx = math.acos(x)   
    print(round((fx),2))
#!#!#
3066#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  28 14:16:48 AMT 2016
TP 03 - Questão 3-H - Cubo Gelatinoso - Estendida
@author: IComp / UFAM
"""
 
life = int(input("Pontos de vida: "))
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))
d3 = int(input("Dado 3: "))

if (life >= 0) and (d1 >= 1 and d1 <= 12) and (d2 >= 1 and d2 <= 12) and (d3 >= 1 and d3 <= 12):
    dano = 10 * (d1 + d2 + d3)
    restante = life - dano
    if (restante < 0):
        print(0)
        print("MORTO")
    else:
        print(restante)
        print("VIVO")
else:
    print("Entrada invalida")
#!#!#
3032#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função B
"""

x = float(input('Entre com o valor de x: '))

if (x <= 0):
    fx = 0
elif (x> 0 and x <=1):
    fx = 1
elif (x> 1 and x <=2):
    fx = x**(1/2)
else:
    fx = x**(1/3)    

print(round(fx,4))#!#!#
3065#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  4 14:16:48 AMT 2016
TP 03 - Questão 3-G - Cornugon - Estendida (Patada)
@author: IComp / UFAM
"""
 
ataque = input("ataque: ").upper()
d1 = int(input("Dado 1: "))
turnos = int(input("Turnos: "))

if (d1 >= 1 and d1 <= 4) and (turnos >= 0):
    if (ataque == "CAUDA"):
        dano = d1 * turnos
        print(dano)
    elif (ataque == "CUSPE"):
        dano = 2 * d1 * turnos
        print(dano)
    elif (ataque == "PATADA"):
        dano = ((2 * d1) - 5) * turnos
        print(dano)
    else:
        print("Entrada invalida")
else:
    print("Entrada invalida")
#!#!#
3036#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função F
"""

x = float(input('Entre com o valor de x: '))

if (x <= -1 or x >=1):
    fx = x
elif (x> -1 and x <0) or (x > 0 and x < 1):
    fx = 1
else:
    fx = 2
    
print(round(fx,2))
#!#!#
3034#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função D
"""

x = float(input('Entre com o valor de x: '))

if (x < -4  or x >4):
    print('entrada invalida')
else:
    if (x>=-4 and x < 0):
        fx = abs(x)**(1/2)
    elif  (x>0 and x <= 4):   
        fx = x**(1/2)
    else:
        fx = 0    
    print(round(fx,4))
#!#!#
3062#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov 28 14:16:48 AMT 2016
TP 03 - Questão 3-C - Qual o dano causado no ataque? - Estendida
@author: IComp / UFAM
"""
 
po = int(input("Quantidade de pecas de ouro: "))
arma = input("Arma: ").upper()
d = int(input("Dado 1: "))

if (d >= 1 and d <= 10):    
    if (arma == "ESPADA"):
        if (po >= 100):
            fator = d * 10
            print(int(fator))
        else:
            print("PO insuficiente")
    elif (arma == "MACHADO"):
        if (po >= 30):
            fator = d + 3
            print(int(fator))
        else:
            print("PO insuficiente")
    elif (arma == "MARRETA"):
        if (po >= 50):
            fator = d + 5
            print(int(fator))
        else:
            print("PO insuficiente")
    else:
        print("Entrada invalida")
else:
    print("Entrada invalida")
#!#!#
3063#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  28 14:16:48 AMT 2016
TP 03 - Questão 3-D - Qual a resistencia? - Estendida
@author: IComp / UFAM
"""

po = int(input("Quantidade de pecas de ouro: "))
armadura = input("Armadura: ").upper()
d = int(input("Fator de destreza: "))

if (armadura == "INTEIRA") and (d >= 1 and d <= 8):
    if (po >= 200):
        fator = 30 * d - 20
        print(int(fator))
    else:
        print("PO insuficiente")
elif (armadura == "MALHA") and (d >= 1 and d <= 8):
    if (po >= 50):
        fator = 15 * d - 1
        print(int(fator))
    else:
        print("PO insuficiente")
elif (armadura == "PLACA") and (d >= 1 and d <= 8):
    if (po >= 100):
        fator = 20 * d - 18
        print(int(fator))
    else:
        print("PO insuficiente")
else:
    print("Entrada invalida")
#!#!#
3035#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função E
"""
import math

x = float(input('Entre com o valor de x: '))

if (x < 0  or x >=360):
    print('entrada invalida')
else:
    if (x>=0 and x < 90) or (x>=180 and x < 270):
        fx = math.sin(math.radians(x))
    else:
        fx = math.cos(math.radians(x))    
    print(round(fx,4))
#!#!#
3061#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  26 14:16:48 AMT 2016
TP 03 - Questão 3-B - Qual Dragao? - Estendida
@author: IComp / UFAM
"""
 
ataque = input("Tipo de ataque: ").upper()
unidades = int(input("Unidades: "))

if (unidades < 0):
    print("Entrada invalida")
else:
    if (ataque == 'TERRESTRE'):
        dragao = "DROGON"
        baforadas = int(unidades/150) + 1 
    elif (ataque == 'AEREO'):
        dragao = "RHAEGAL"
        baforadas = int(unidades/30) + 1 
    elif (ataque=='MARITIMO'):
        dragao = "VISERION"
        baforadas = int(unidades/40) + 1
    else:
    	print("Entrada invalida")
    	exit()

    print(dragao)
    print(baforadas)#!#!#
3069#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  4 14:16:48 AMT 2016
TP 03 - Questão 3-F - Banshee - Estendida (Furia)
@author: IComp / UFAM
"""
 
ataque = input("ataque: ").upper()
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))

if (d1 >= 1 and d1 <= 8) and (d2 >= 1 and d2 <= 8):
    if (ataque == "FURIA"):
        dano = 10 + (d1 + d2)
        print(dano)
    elif (ataque == "GRITO"):
        dano = 6 + (d1 + d2)
        print(dano)
    elif (ataque == "TOQUE"):
        dano = (d1 + d2) ** 2
        print(dano)
    else:
        print("Entrada invalida")
else:
    print("Entrada invalida")
#!#!#
3041#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função J
"""

x = float(input('Entre com o valor de x: '))

if (x >= -2 and x <= 2) or (x > 1000 or x < -1000):
    print('entrada invalida')
else:
    if (x>=-1000 and x < -2):
        fx = -1/(x+2)
    else:
        fx = 1/(x-2)    
    print(round(fx,4))
#!#!#
3064#;#;## -*- coding: utf-8 -*-
"""
Created on Sex Nov  4 14:16:48 AMT 2016
TP 03 - Questão 3-E - Demogorgon - Estendida (Rakshasa)
@author: IComp / UFAM
"""
 
cabeca = input("cabeca: ").upper()
d1 = int(input("Dado 1: "))
d2 = int(input("Dado 2: "))

if (d1 >= 1 and d1 <= 10) and (d2 >= 1 and d2 <= 10):
    if (cabeca == "AAMEUL"):
        dano = 8 + (d1 + d2)
        print(dano)
    elif (cabeca == "HETHRADIAH"):
        dano = 2 * (d1 + d2)
        print(dano)
    elif (cabeca == "RAKSHASA"):
        dano = 10 + (d1 + d2)
        print(dano)
    else:
        print("Entrada invalida")
else:
    print("Entrada invalida")
#!#!#
3033#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função C
"""

x = float(input('Entre com o valor de x: '))

if (x < -100 or x == 0 or x > 100):
    print('entrada invalida')
else:
    if (x>=-100 and x < 0):
        fx = -1/x
    else:
        fx = 1/x    
    print(round(fx,4))
#!#!#
3092#;#;#n = input("digite resultado ")
jogos=0
pontos=0
porc=0.0
while n.upper() != "X":
   if n.upper()=="V" or n.upper()=="D" or n.upper()=="E":
      jogos+=1
   if n.upper()=="V":
      pontos+=3
   if n.upper()=="E":
      pontos+=2
   if n.upper()=="D":
      pontos+=1
   n = input("digite resultado ")

if(jogos>0):
   porc=100*pontos/(jogos*3)
print(round(porc,2))

  #!#!#
3087#;#;#n = int(input("digite n "))
pares= 0
impares=0
total_pares=0
total_impares=0
while n != 0:
   if (n%2==0):
      pares+=1
      total_pares+=n
   else:
      impares+=1
      total_impares+=n
   n = int(input("digite n "))
media_pares=0.0
media_impares=0.0
if(pares>0):
   media_pares=total_pares/pares
if(impares>0):
   media_impares=total_impares/impares
print(round(media_pares,2))
print(round(media_impares,2))#!#!#
3088#;#;#n = int(input("digite n "))
pares= 0
impares=0
porc_pares=0.0
porc_impares=0.0
while n != 0:
   if (n%2==0):
      pares+=1
   else:
      impares+=1
   n = int(input("digite n "))
total=pares+impares
if(total>0):
   porc_impares=100*(impares/total)
   porc_pares=100*(pares/total)
print(round(porc_pares,2))
print(round(porc_impares,2))
  #!#!#
3089#;#;#n = int(input("digite movimento "))
total=0
final="Inicial"
while n != 0:
   total+=n
   n = int(input("digite movimento "))

if(total>0):
   final="Direita"
if(total<0):
   final="Esquerda"
print(total)
print(final)#!#!#
3090#;#;#n = int(input("digite movimento "))
total=0
final="Inicial"
while n != 0:
   total+=n
   n = int(input("digite movimento "))

if(total>0):
   final="Acima"
if(total<0):
   final="Abaixo"
print(total)
print(final)#!#!#
3091#;#;#n = input("digite resultado ")
jogos=0
pontos=0
porc=0.0
while n.upper() != "X":
   if n.upper()=="V" or n.upper()=="D" or n.upper()=="E":
      jogos+=1
   if n.upper()=="V":
      pontos+=3
   if n.upper()=="E":
      pontos+=1
   n = input("digite resultado ")

if(jogos>0):
   porc=100*pontos/(jogos*3)
print(round(porc,2))

  #!#!#
3093#;#;#n = input("digite resultado ")
vit=0
emp=0
while n.upper() != "X":
   if n.upper()=="V":
      vit+=3
   if n.upper()=="E":
      emp+=1
   n = input("digite resultado ")

print(vit)
print(emp)
  #!#!#
3095#;#;#n = input("digite resultado ")
vit=0
emp=0
der=0
while n.upper() != "X":
   if n.upper()=="V":
      vit+=3
   if n.upper()=="E":
      emp+=2
   if n.upper()=="D":
      der+=1
   n = input("digite resultado ")

print(vit)
print(emp)
print(der)
  #!#!#
3096#;#;#n = int(input("digite a posicao "))
pontos= 0
while n != 0:
   if (n==1):
      pontos+=20
   elif(n==2):
      pontos+=15
   elif(n==3):
      pontos+=10
   elif(n>=4 and n<=10):
      pontos+=11-n
   n = int(input("digite a posicao "))
print(pontos)#!#!#
3097#;#;#n = int(input("digite a posicao "))
pontos= 0
while n != 0:
   if (n==1):
      pontos+=25
   elif(n==2):
      pontos+=18
   elif(n==3):
      pontos+=12
   elif(n>=4 and n<=10):
      pontos+=14-n
   n = int(input("digite a posicao "))
print(pontos)#!#!#
3124#;#;## Questao B

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 1
i  = 0

while(i<size(v)):
	M = M * v[i]
	i = i + 1

M = M**(1/size(v))
print(round(M,2))#!#!#
3138#;#;## Questao G

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + v[i]**(7)
	i = i + 1

M = (M/size(v))**(1/7)
print(round(M,2))#!#!#
3123#;#;## Questao A

from numpy import *

v = array(eval(input("Vetor: ")))
M = 0
i = 0

while(i<size(v)):
	M = M + v[i]**(-1)
	i = i + 1

M = (M/size(v))**(-1)
print(round(M,2))#!#!#
3139#;#;## Questao H

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + v[i]**(1/3)
	i = i + 1

M = (M/size(v))**3
print(round(M,2))#!#!#
3140#;#;## Questao I

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + v[i]**(5)
	i = i + 1

M = (M/size(v))**(1/5)
print(round(M,2))#!#!#
3141#;#;## Questao J

from numpy import *

v = array(eval(input("Vetor: ")))
M = 0
i = 0

while(i<size(v)):
	M = M + v[i]**(1/6)
	i = i + 1

M = (M/size(v))**(6)
print(round(M,2))#!#!#
3137#;#;## Questao F

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + exp(v[i])
	i = i + 1

M = log(M/exp(size(v)))
print(round(M,2))#!#!#
3134#;#;## Questao C

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + v[i]**(2)
	i = i + 1

M = (M/size(v))**(1/2)
print(round(M,2))#!#!#
3135#;#;## Questao D

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + v[i]**(1/2)
	i = i + 1

M = (M/size(v))**(2)
print(round(M,2))#!#!#
3136#;#;## Questao E

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + log(v[i]+1)
	i = i + 1

M = exp(M/size(v))-1
print(round(M,2))#!#!#
3176#;#;## Solução
text = input("digite uma palavra: ")
voc = 0
const = 0
for i in text:
    if i == 'a' or i == 'e' or i == 'i' or i == 'o' or i == 'u':
        voc += 1
    else:
        const += 1
print(voc)
print(const)#!#!#
3185#;#;#from numpy import *

v = input("vet: ")
s = "" 

for i in v: 
    s = i + s

print(s)#!#!#
3180#;#;#from numpy import *
vec = array(eval(input("lista de sorotipos: ")), dtype=int)

new = zeros(4, dtype=int)
for i in vec:
    if i == 1:
        new[0] = new[0]+1
    elif i == 2:
        new[1] = new[1]+1
    elif i == 3:
        new[2] = new[2]+1
    elif i == 4:
        new[3] = new[3]+1
print(new)#!#!#
3183#;#;#from numpy import *

v = array(eval(input("vet: ")))

for i in range(size(v)//2):
    j = size(v) - 1 - i
    aux = v[i]
    v[i] = v[j]
    v[j] = aux

print(v)#!#!#
3184#;#;#from numpy import *

v = array(eval(input("vet: ")))

for i in range(size(v)//2):
    j = size(v) - 1 - i
    aux = v[i]
    v[i] = v[j]
    v[j] = aux

print(v)#!#!#
3178#;#;#from numpy import *
vec = array(eval(input("entre com o vetor: ")), dtype=int)

new = zeros(size(vec), dtype=int)
j = 0
for i in vec:
    if i != 0:
        new[j] = i
        j += 1
print(new)#!#!#
3182#;#;#from numpy import *

vec = array(eval(input("últimas jogadas: ")), dtype=int)
new = zeros(10, dtype=int)

for i in range(0,len(vec),3):
    if vec[i] == vec[i+1] == vec[i+2]:
        new[vec[i]] = new[vec[i]]+1
print(new)#!#!#
3177#;#;## Solução
text = input("digite uma palavra: ")
a = 0; e = 0; i = 0; o = 0; u = 0
for t in text:
    if t == 'a':
        a += 1
    elif t == 'e':
        e += 1
    elif t == 'i':
        i += 1 
    elif t == 'o':
        o += 1
    elif t == 'u':
        u += 1
        
print('a:',a)
print('e:',e)
print('i:',i)
print('o:',o)
print('u:',u)#!#!#
3179#;#;#from numpy import *
vec = array(eval(input("digite uma palavra: ")), dtype=int)

new = ones(size(vec), dtype=int)
j = 0
for i in vec:
    if i != 1:
        new[j] = i
        j += 1
print(new)#!#!#
3181#;#;#from numpy import *
vec = array(eval(input("últimas jogadas: ")), dtype=int)

new = zeros(37, dtype=int)
for i in vec:
    new[i] = new[i]+1
    
print(new)#!#!#
3118#;#;##!#!#
3121#;#;##!#!#
3210#;#;## -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtVCdUPFU62Zr9Hooyx1lASq7UcJsI4S
"""

from numpy import *

alunos = input("digite a matricula dos alunos: ").split(',')

qtdAlunos = size(alunos)

notaAluno= zeros((qtdAlunos,2),dtype=int)

for i in range(0,qtdAlunos):  
  notaAluno[i,0] = int(alunos[i])
  notaAluno[i,1] = int(input("Informe a nota de cada aluno: "))
  
 #procura a pessoa com a maior nota
  maior = float(notaAluno[0,1])
  pos= 0
  for i in range(qtdAlunos):
    if notaAluno[i,1] > maior:
      maior = int(notaAluno[i,1])
      pos= i
      
print(notaAluno)		
print('O aluno que possui a maior nota e o aluno', int(notaAluno[pos,0]))#!#!#
3207#;#;## -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtVCdUPFU62Zr9Hooyx1lASq7UcJsI4S
"""

from numpy import *

qtdTurmas = int(input("digite a quantidade de turmas: "))

qtdAlunos = int(input("digite a quantidade de alunos das turmas: "))

turma= zeros((qtdTurmas,qtdAlunos),dtype=int)

for i in range(0,qtdTurmas):   
  turma[i,:] = input("digite o numero de matrícula dos alunos da turma: ").split(',')
            
totalAlunos = qtdAlunos * qtdTurmas

print(turma)
print(totalAlunos)

#!#!#
3215#;#;#from numpy import *

alunos = array(eval(input()))

qtdAlunos = len(alunos)

notaAluno = zeros((qtdAlunos, 2), dtype=int)

for i in range(0, qtdAlunos):
    notaAluno[i, 0] = int(alunos[i])
    notaAluno[i, 1] = int(input("Informe as faltas de cada aluno: "))
    pos = 0
    # procura o aluno com a maior nota
    maior = notaAluno[0, 1]
    for i in range(qtdAlunos):
        if (notaAluno[i, 1] > maior):
            maior = notaAluno[i, 1]
            pos = i
print(notaAluno)
print('O aluno que possui o maior numero de faltas e o', notaAluno[pos,0])#!#!#
3209#;#;## -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtVCdUPFU62Zr9Hooyx1lASq7UcJsI4S
"""

from numpy import *

qtdSetores = int(input("digite a quantidade de setores:"))

qtdProdutos = int(input("digite a quantidade de produtos por setor:"))

setor= zeros((qtdSetores,qtdProdutos),dtype=float)

for i in range(0,qtdSetores):   
	setor[i,:] = array(eval(input("digite o preço dos produtos:")))
            

for i in range(qtdSetores):
	print("O total do setor", i+1 ," e:",round(sum(setor[i,:]),2),"reais")

print(array(setor))#!#!#
3211#;#;#"""
Introducao a Programacao de Computadores
7a. Avaliacao Parcial - 2016/1
MATRIZES
Exercicio 01 - versao E
Criado em 08 / 08 / 2016
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- EXERCICIOS FISICOS
"""

from numpy import *
from numpy.linalg import *

#[2410, 1615, 2410, 1700]
##########################################################
# PARAMETROS DA VERSAO DE QUESTAO
# 
# Lista com o nome das variaveis do SEL
nomes = ["caminhada", "corrida", "bicicleta", "natacao"]

# Matriz do sistema linear
#mat = array([[1, 2, .5], [1.5, 1, .5], [1, 1, 1]])
mat = array([[1, 2, .5, 1.5], [1.5, 1, .5, 1], [1, 1, 1, 2.5], [2.5, .5, 2, .5]])
##########################################################

# Leitura do vetor de constantes
vet = array(eval(input("Digite o vetor: ")))

# Resolucao do sistema de equacoes lineares
solucao = dot(inv(mat), vet)

# Imprime a solucao do SEL
for i in range(size(nomes)):
    print(nomes[i]+':', round(solucao[i], 0))

# Imprime nome do elemento mais/menos frequente
i = 0
##########################################################
# MUDAR AQUI TAMBEM!
while (solucao[i] != max(solucao)):
    i = i + 1

print(nomes[i])#!#!#
3212#;#;#from numpy import *
from numpy.linalg import *

alunos = array(eval(input("digite a matricula dos alunos: ")))

qtdAlunos = len(alunos)

notas = zeros(qtdAlunos, dtype=int)

alunoDesconto = 0

alunoSemDesconto = 0
maior = 0
for i in range(0, qtdAlunos):
    notas[i] = int(input("Informe a pont de cada aluno: "))

notas = array(notas)

notaAluno = array([alunos, notas])
notaAluno = notaAluno.T
menor = 101

# procura a pessoa com a maior nota
for i in range(0, qtdAlunos):
    for i in range(qtdAlunos):
        if (notaAluno[i, 1] > maior):
            maior = notaAluno[i, 1]
            alunoDesconto = notaAluno[i, 0]

    # procura a pessoa com a menor nota

    for i in range(qtdAlunos):
        if notaAluno[i, 1] < menor:
            menor = notaAluno[i, 1]
            alunoSemDesconto = notaAluno[i, 0]
print(around(notaAluno, 1))
print('O aluno que possui a bolsa de 100% de desconto e o', alunoDesconto)
print('O aluno que nao possui desconto e o', alunoSemDesconto)#!#!#
3216#;#;#from numpy import *

setores = array(eval(input("digite códigos das filiais: ")))

qtdSetores = size(setores)

setor = zeros((2, qtdSetores), dtype=int)

total = 0

setor[0] = setores

for i in range(0, qtdSetores):
    setor[1, i] = int(input("digite o total de despesas da filial: "))

print(setor)
print("O total de despesas da empresa e:", sum(setor[1]), "reais")#!#!#
3217#;#;#from numpy import *

departamentos = array(eval(input()))

qtdDep = len(departamentos)

salGerentes = zeros((qtdDep, 2), dtype=int)

for i in range(0, qtdDep):
    salGerentes[i, 0] = int(departamentos[i])
    salGerentes[i, 1] = input("Informe o salario do gerente de cada departamento: ")

    # procura a pessoa com a maior nota
    maior = salGerentes[0, 1]
    pos = 0
    for i in range(qtdDep):
        if salGerentes[i, 1] > maior:
            maior = salGerentes[i, 1]
            pos = i

print(salGerentes)
print("O departamento que possui maior salario gerencial e o",salGerentes[pos, 0])
#!#!#
3213#;#;#from numpy import *

alunos = array(eval(input("digite a matricula dos funcionarios: ")))

qtdAlunos = len(alunos)

notaAluno = zeros((qtdAlunos, 2), dtype=int)

for i in range(0, qtdAlunos):
    notaAluno[i, 0] = int(alunos[i])
    notaAluno[i, 1] = input("Informe o tempo de servico de cada funcionario: ")
    maior = notaAluno[0, 1]
    pos = 0
    for i in range(qtdAlunos):
        if notaAluno[i, 1] > maior:
            maior = notaAluno[i, 1]
            pos = i

print(around(notaAluno, 1))
print('O funcionario que possui maior tempo de servico e o:', notaAluno[pos, 0])

#!#!#
3208#;#;## -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtVCdUPFU62Zr9Hooyx1lASq7UcJsI4S
"""

from numpy import *

qtdUnidades = int(input("digite a quantidade de unidades: "))

qtdFuncionarios = int(input("digite a quantidade de funcionarios por unidade: "))

unidade= zeros((qtdUnidades,qtdFuncionarios),dtype=int)

for i in range(0,qtdUnidades):   
  unidade[i,:] = input("digite o numero de matrícula dos funcionários da unidade: ").split(',')
            
totalFuncionarios = shape(unidade)[0] * shape(unidade)[1]

print(unidade)
print(totalFuncionarios)#!#!#
3214#;#;#from numpy import *

alunos = array(eval(input()))

qtdAlunos = len(alunos)

notaAluno = zeros((qtdAlunos, 2), dtype=int)

for i in range(0, qtdAlunos):
    notaAluno[i, 0] = int(alunos[i])
    notaAluno[i, 1] = input("Informe a taxa de cada funcionario: ")

    # procura a pessoa com a maior nota
    maior = notaAluno[0, 1]
    pos = 0
    for i in range(qtdAlunos):
        if notaAluno[i, 1] > maior:
            maior = notaAluno[i, 1]
            pos = i

print(notaAluno)
print('O funcionario que possui maior taxa de produtividade e o', notaAluno[pos, 0])#!#!#
2905#;#;#"""
Created on Thu Mar 26 08:13:35 2015
Lab 01 – Ex 08
@author: IComp / UFAM
"""
from math import *

# Read the numbers from the user, naming them a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

s = (a + b + c)/2.0

area = sqrt(s * (s-a) * (s-b) * (s-c))

# Impressao do resultado
print(round(area, 5))
#!#!#
2904#;#;## Leitura de entradas
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

f = (a**2 + b**2 + c**2) / (a + b + c)

# Impressao da saida
print(round(f, 7))#!#!#
2908#;#;## Leitura de entradas
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

f = (a**2 + b**2 + c**2) / (a + b + c)

# Impressao da saida
print(round(f, 7))#!#!#
2928#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao B
Conservação do momentum: peixes
Criado em 08 / 03 / 2017
@author: IComp / UFAM
"""

mG = float(input("massa peixe Grande: "))
vG = float(input("velocidade peixe Grande: "))
mP = float(input("massa peixe Pequeno: "))
vP = float(input("velocidade peixe Pequeno: "))

vf = (mG * vG - mP * vP) / (mG + mP)

print(vf)#!#!#
2929#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao C
Periodo do Pendulo
Criado em 27 / 03 / 2017
@author: IComp / UFAM
"""

from math import *

L = float(input("comprimento: "))
g = 9.8

periodo = 2 * pi * sqrt(L/g)

print(periodo)#!#!#
2930#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao D
Comprimento do Pendulo
Criado em 27 / 03 / 2017
@author: IComp / UFAM
"""

from math import *

T = float(input("Periodo : "))
g = 9.81

comprimento =g * (T / (2 * pi)) ** 2

print(comprimento)#!#!#
2931#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao E
Equacao de Torricelli
Criado em 27 / 03 / 2017
@author: IComp / UFAM
"""

from math import *

h = float(input("Altura: "))
g = 9.81

velocidade = sqrt(2 * g * h)

print(velocidade)#!#!#
2932#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao F
Resistencia equivalente
Criado em 27 / 03 / 2017
@author: IComp / UFAM
"""

R1 = float(input("R1: "))
R2 = float(input("R2: "))
R3 = float(input("R3: "))

Req = (R1 * R2 * R3) / (R1 * R2 + R2 * R3 + R1 * R3)

print(Req)
#!#!#
2936#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao G
Equacao de Clayperon - volume
Criado em 28 / 03 / 2017
@author: IComp / UFAM
"""

pressao = float(input("Pressao: "))
n = int(input("No. de mols: "))
temp = float(input("Temperatura: "))

R = 0.082

volume = n * R * (temp + 273.15) / pressao

print(volume)#!#!#
2937#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao H
Equacao de Clayperon - pressao
Criado em 28 / 03 / 2017
@author: IComp / UFAM
"""

n = int(input("No. de mols: "))
volume = float(input("Volume: "))
temp = float(input("Temperatura: "))

R = 0.082057

pressao = n * R * (temp + 273.1) / volume

print(pressao)#!#!#
2933#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao J
Taxa de investimento
Criado em 29 / 06 / 2016
@author: IComp / UFAM
"""

from math import log

Q0 = float(input("Investimento inicial: "))
Qf = float(input("Valor final: "))
y = int(input("Anos de investimento: "))

r = (log(Qf) - log(Q0)) / float(y)

print(r)

# Entradas de teste: 1.23, 2.34, 3.45, 4.56#!#!#
2934#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao I
Tempo para triplicar um investimento
Criado em 29 / 06 / 2016
@author: IComp / UFAM
"""

from math import log

Q0 = float(input("Investimento inicial: "))
r  = float(input("Rendimento: "))

y = (log(3 * Q0) - log(Q0)) / r

print(int(y) + 1)

# Entradas de teste: 1.23, 2.34, 3.45, 4.56#!#!#
2935#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao A
Conservação do momentum: caminhões
Criado em 08 / 03 / 2017
@author: IComp / UFAM
"""

mA = float(input("massa caminhao A: "))
mB = float(input("massa caminhao B: "))
v0 = float(input("velocidade caminhao B: "))

vf = (2 * mA + mB) / (mA + mB) * v0

print(vf)#!#!#
3218#;#;##!#!#
3219#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 07 - Matrizes
Versao D

Criado em 19 / 06 / 2017
@author: IComp / UFAM
"""
from numpy import *
a=array(eval(input("a= ")))
n=shape(a)[0]
dim=n**2-n#numero de elementos fora da diagonal
v=zeros(dim)#vetor auxiliar
k=0
for i in range(n):
    for j in range(n):
        if (i != j):
            v[k]=a[i,j]#salva os elementos fora da diagonal
            k=k+1
# imprime a media
media=sum(v)/dim
print(round(media,2))#!#!#
3229#;#;#from numpy import * # 
from numpy.linalg import *
pagar = array(eval(input()))
pagar = pagar.T

sistema = array([[1,1],
			   [0.25,0.5]])
# 1*x   + 1*y    = moedas | inverso: 2 -4
# 0.25*x + 0.5*y = valor  |         -1  4

moedas = dot(inv(sistema),pagar)

print(moedas)
#!#!#
3238#;#;##!#!#
3309#;#;#massa = float(input("massa da mercadoria (kg): "))

valor_total = 43.21 * massa + 25
valor_total = valor_total + 0.62 * valor_total

print(round(valor_total, 2))#!#!#
3335#;#;#num = int(input("Digite sua idade: "))

if (num >= 18):
    mensagem = "eleitor"
else:
    mensagem = "nao eleitor"

print(mensagem)#!#!#
3334#;#;#a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))

delta = b**2 -4*a*c

if delta < 0:
		print("a equacao nao possui raizes reais")
else:
    x1 = (-b + (delta **0.5)) / (2*a)
    print(round(x1, 2))
    x2 = (-b - (delta ** 0.5)) / (2*a)
    print(round(x2, 2))
#!#!#
3371#;#;#escala = input("Digite a escala -  K para quilômetro, ou M para milha.").upper()
medida = float(input("Digite o valor da medida: "))

if (escala == "M"):
	med = medida*1.60934
else:
	med = medida/1.60934

print(round(med,2))#!#!#
3370#;#;#escala = input("Digite a escala -  C para centímetro, ou P para polegada.").upper()
medida = float(input("Digite o valor da medida: "))

if (escala == "C"):
	med = medida*0.393701
else:
	med = medida/0.393701	

print(round(med,2))

#!#!#
3369#;#;#escala = input("Digite a unidade - M para m/s, ou K para Km/h").upper()
velocidade = float(input("Digite o valor da velocidade: "))

if (escala == "M"):
	vel = velocidade*3.6
else:
	vel = velocidade/3.6
	
print(round(vel,2))
#!#!#
3368#;#;#escala = input("Digite a escala - C para Celsius ou K para Kelvin").upper()
temperatura = float(input("Digite o valor da temperatura: "))

if (escala == "C"):
	temp = temperatura + 273.15
else:
	temp = temperatura - 273.15
	
print(round(temp,2))

#!#!#
3383#;#;#escala = input("Digite a escala -   L para Libras, ou K para quilogramas.").upper()
medida = float(input("Digite o valor da medida: "))

if (escala == "K"):
	med = medida*2.20462
else:
	med = medida/2.20462

print(round(med,2))#!#!#
3384#;#;#escala = input("Digite a escala -  O para onças, ou K para quilogramas.").upper()
medida = float(input("Digite o valor da medida: "))

if (escala == "K"):
	med = medida*35.274
else:
	med = medida/35.274

print(round(med,2))#!#!#
3385#;#;#escala = input("Digite a escala -  A para acres, ou H para hectares.").upper()
medida = float(input("Digite o valor da medida: "))

if (escala == "H"):
	med = medida*2.47105
else:
	med = medida/2.47105

print(round(med,2))#!#!#
3386#;#;#escala = input("Digite a escala -  R para radianos, ou G para graus.").upper()
medida = float(input("Digite o valor do angulo: "))

if (escala == "G"):
	med = medida*0.0174533
else:
	med = medida/0.0174533

print(round(med,2))#!#!#
3387#;#;#escala = input("Digite a escala -  M para milhas por galão, ou K para quilômetros por litro.").upper()
medida = float(input("Digite o valor do angulo: "))

if (escala == "K"):
	med = medida*2.35215
else:
	med = medida/2.35215

print(round(med,2))#!#!#
3388#;#;#escala = input("Digite a escala -  B para BTU, ou W para Watt-hora.").upper()
medida = float(input("Digite o valor do angulo: "))

if (escala == "W"):
	med = medida*3.41214
else:
	med = medida/3.41214

print(round(med,2))#!#!#
3056#;#;#consumo = float(input("Consumo: "))

limiar = 10000

if (consumo <= limiar):
    total = consumo * 6.0 + 100
elif (consumo > limiar and consumo <= 20000):
    total = consumo * 5.5 + 150
elif (consumo > 20000 and consumo <= 30000):
    total = consumo * 5.0 + 200
else:
    total = consumo * 4.5 + 250

print(round(total, 2))#!#!#
3051#;#;#consumo = float(input("Consumo: "))

if (consumo <= 150):
    total = consumo * 0.6 + 5.0
elif (consumo > 150 and consumo <= 250):
    total = consumo * 0.65 + 8.0
elif (consumo > 250 and consumo <= 350):
    total = consumo * 0.7 + 12.0
else:
    total = consumo * 0.75 + 16.0

print(round(total, 2))#!#!#
3057#;#;#consumo = float(input("Consumo: "))

limiar = 100

if (consumo <= limiar):
    total = consumo * 80.0 + 3000
elif (consumo > limiar and consumo <= 200):
    total = consumo * 90.0 + 4000
elif (consumo > 200 and consumo <= 300):
    total = consumo * 100.0 + 5000
else:
    total = consumo * 110.0 + 6000

print(round(total, 2))#!#!#
3058#;#;#consumo = float(input("Consumo: "))

limiar = 100

if (consumo <= limiar):
    total = consumo * 2.0 + 100
elif (consumo > limiar and consumo <= 2500):
    total = consumo * 1.8 + 150
elif (consumo > 2500 and consumo <= 10000):
    total = consumo * 1.5 + 200
else:
    total = consumo * 1.2 + 250

print(round(total, 2))#!#!#
3053#;#;#consumo = float(input("Consumo: "))

if (consumo <= 5000):
    total = consumo * 0.03 + 20
elif (consumo > 5000 and consumo <= 6000):
    total = consumo * 0.04 + 25
elif (consumo > 6000 and consumo <= 7000):
    total = consumo * 0.05 + 30
else:
    total = consumo * 0.06 + 35

print(round(total, 2))#!#!#
3055#;#;#consumo = float(input("Consumo: "))

limiar = 100.0

if (consumo <= limiar):
    total = consumo * 1.1
elif (consumo > limiar and consumo <= 200):
    total = consumo * 1.09
elif (consumo > 200 and consumo <= 300):
    total = consumo * 1.08
else:
    total = consumo * 1.07

print(round(total, 2))#!#!#
3059#;#;#consumo = float(input("Consumo: "))

if (consumo <= 100):
    total = consumo * 1.2 + 1
elif (consumo > 100 and consumo <=200):
    total = consumo * 1.3 + 10
elif (consumo > 200 and consumo <=300):
    total = consumo * 1.4 + 20
else:
    total = consumo * 1.5 + 25

print(round(total, 2))#!#!#
3054#;#;#consumo = float(input("Horas trabalhadas: "))

limiar = 10

if (consumo <= limiar):
    total = consumo * 50. + 500
elif (consumo > 10 and consumo <= 20):
    total = consumo * 60. + 600
elif (consumo > 20 and consumo <= 30):
    total = consumo * 70. + 700
else:
    total = consumo * 80. + 800

print(round(total, 2))#!#!#
3052#;#;#consumo = float(input("Consumo: "))

if (consumo >= 0 and consumo <= 10):
    total = consumo * 3 + 15
elif (consumo > 10 and consumo <= 15):
    total = consumo * 3.5 + 20
elif (consumo > 15 and consumo <= 20):
    total = consumo * 4 + 25
else:
    total = consumo * 4.5 + 30

print(round(total, 2))#!#!#
2791#;#;#massa = int(input("Informe a quantidade de massa inicial: "))
anos = 0

while(0.5 <= massa):
	massa = massa - massa*0.1
	anos = anos + 1

print(round(anos,2))#!#!#
3527#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 9

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0


# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie +  x**(cont) / factorial(cont)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
3526#;#;#from math import *
# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 7

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
		
	serie = serie + x**(2*cont+1) / (2*cont+1)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
3524#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Sinal de cada termo
sinal = 1

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + sinal * x**(2*cont) / factorial(2*cont)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
3525#;#;#from math import *

# Variavel da serie
x = eval(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 9

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie +  x**(2*cont+1) / factorial(2*cont+1)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
3534#;#;#from math import *

# Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + x/factorial(cont)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
3535#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + x/(2*cont)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
3536#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 10

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + cont / x

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
3587#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-C - Tiro ao Alvo Multiplicativo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   1600
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 100
i = 0

while (i < size(v)):
	if (v[i] == 1):
		pontos = pontos*5
	elif (v[i] == 2):
		pontos = pontos*3
	elif (v[i] == 4):
		pontos = pontos/2
	i = i + 1

print(round(pontos,2))#!#!#
3593#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-C - Tiro ao Alvo Multiplicativo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   1600
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 200
i = 0

while (i < size(v)):
	if (v[i]%2 == 0):
			pontos = pontos*3
	else:
		pontos = pontos/2
	i = i + 1

print(round(pontos,2))#!#!#
3591#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-A - Tiro ao Alvo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   180
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 0
i = 0

while (i < size(v)):
	if (v[i] % 2 == 1):
		pontos = pontos + 10
	else:
		pontos = pontos + 5
	i = i + 1

print(pontos)#!#!#
3588#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-C - Tiro ao Alvo Multiplicativo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   1600
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 10000
i = 0

while (i < size(v)):
	if (v[i] == 1):
		pontos = pontos*2
	elif (v[i] == 3):
		pontos = pontos/2
	elif (v[i] == 4):
		pontos = pontos/4
	i = i + 1

print(round(pontos,2))#!#!#
3586#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-A - Tiro ao Alvo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   180
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 0
i = 0

while (i < size(v)):
    if (v[i] == 1):
        pontos = pontos + 100
    elif (v[i] == 2):
        pontos = pontos + 60
    elif (v[i] == 3):
        pontos = pontos + 20
    i = i + 1

print(pontos)#!#!#
3592#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-C - Tiro ao Alvo Multiplicativo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   1600
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 100
i = 0

while (i < size(v)):
	if (v[i] == 1):
		pontos = pontos
	elif (v[i]%2 == 0):
			pontos = pontos*v[i]
	else:
		pontos = pontos/v[i]
	i = i + 1

print(round(pontos,2))#!#!#
3589#;#;#from numpy import *

v = array(eval(input()))

i = 0
total = 0
while (i < size(v)):
	if (v[i] == 1):
		total = total + 80
	elif (v[i] == 2):
		total = total + 40
	elif (v[i] == 3):
		total = total + 20
	else:
		total = total + 10
	i = i + 1
print(total)#!#!#
3585#;#;## Questao H

from numpy import *

v = array(eval(input("Vetor: ")))
M  = 0
i  = 0

while(i<size(v)):
	M = M + v[i]**(1/4)
	i = i + 1

M = (M/size(v))**4
print(round(M,2))#!#!#
3590#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 2-A - Tiro ao Alvo
Exemplo de Entrada: [3, 1, 1, 4]
Exemplo de Saída:   180
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

pontos = 0
i = 0

while (i < size(v)):
	if (v[i] == 1 or v[i] == 6):
		pontos = pontos + 10
	elif (v[i] == 2 or v[i] == 4):
		pontos = pontos + 5
	elif (v[i] == 5):
		pontos = pontos + 20
	i = i + 1

print(pontos)#!#!#
3620#;#;#from numpy import *
gol_feito = array(eval(input("Gols Feitos: ")))
gol_recebido = array(eval(input("Gols Recebidos: ")))
result = zeros(3, dtype=int)
for i in range(0,size(gol_feito)):
    if gol_feito[i]>gol_recebido[i]:
        result[0]= result[0]+1
    elif gol_feito[i]==gol_recebido[i]:
        result[1]= result[1]+1
    else:
        result[2]= result[2]+1
print(result)#!#!#
3664#;#;#from numpy import *
m = int(input())
n = int(input())

matriz = zeros((m,n),dtype=int)

print(matriz)#!#!#
3665#;#;#from numpy import *

matriz = array(eval(input()))

print(size(matriz))
print(shape(matriz))
print(shape(matriz)[0])
print(shape(matriz)[1])
print(matriz[0,0])
print(matriz[shape(matriz)[0]-1,shape(matriz)[1]-1])
print(matriz[0])
print(matriz[shape(matriz)[0]-2])
print(amax(matriz))	
print(amin(matriz))	
print(sum(matriz))
print(round(sum(matriz)/size(matriz),2))

#!#!#
3684#;#;#from numpy import *
mat = array(eval(input()))

m = shape(mat)[0] # mat. quadrada; m = n

dprinc = 0
dsec = 0

for i in range(m):
	dprinc = dprinc + mat[i,i]
	for j in range(m):
		if (i + j == m - 1):
			dsec = dsec + mat[i,j]
			
print(dprinc - dsec)#!#!#
3687#;#;#from numpy import *
v = array(eval(input()))

n = size(v)

mat = zeros((n,n),dtype = int)

for i in range(n):
	mat[i,:] = v
	
print(mat)
#!#!#
3688#;#;#from numpy import *
v = array(eval(input()))

n = size(v)

mat = zeros((n,n),dtype = int)

for i in range(n):
	mat[:,i] = v
	
print(mat)
#!#!#
3686#;#;#from numpy import *
a = array(eval(input()))
b = array(eval(input()))

c = dot(a,b)

n = shape(c)[0]

flag = True
i = 0
while (flag == True and i < n):
	j = 0
	while (flag == True and j < n):
		if (i==j and c[i,j] != 1):
			flag = False
		elif (i != j and c[i,j] != 0):
			flag = False
		j = j + 1
	i = i + 1

if (flag):
	print(1)
else:
	print(0)
	#!#!#
3689#;#;#from numpy import *
a = array(eval(input()))
b = array(eval(input()))

m = shape(a)[0]
n = shape(a)[1]

c = zeros((m,n),dtype= int)

for i in range(m):
	for j in range(n):
		c[i,j] =  a[i,j] + b[i,j]

print(c)		
#!#!#
3690#;#;#from numpy import *
a = array(eval(input()))
b = array(eval(input()))

m = shape(a)[0]
n = shape(a)[1]

c = zeros((m,n),dtype= int)

for i in range(m):
	for j in range(n):
		c[i,j] =  a[i,j] * b[i,j]

print(c)		
#!#!#
3691#;#;#from numpy import *
a = array(eval(input()))
b = array(eval(input()))

m = shape(a)[0]
n = shape(a)[1]
p = shape(b)[1]

c = zeros((m,p),dtype= int)

for i in range(m):
	for k in range(p):
		soma = 0
		for j in range(n):
			soma = soma + a[i,j]*b[j,k]
		c[i,k] =  soma

print(c)		
#!#!#
3685#;#;#from numpy import *
m = array(eval(input()))

n = shape(m)[0]
flag = True
soma = sum(m[0])
for i in range(1,n):
	if (soma != sum(m[i])):
		flag = False

if flag == True:
	for i in range(n):
		if (soma != sum(m[:,i])):
			flag = False
			

if flag == True:
	sd = 0
	for i in range(n):
		sd = sd + m[i,i]
	if (soma != sd):
			flag = False

if flag == True:
	sd = 0
	for i in range(n):
		j = n - 1 - i
		sd = sd + m[i,j]		
	if (soma != sd):
			flag = False

if (flag):
	print("sim")
else:
	print("nao")
	
#!#!#
3580#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-G - Desconto em Compras

@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
    if (v[i] > 100):
        descontos = descontos + v[i]*0.12
    i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
3583#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-H - Desconto na Loja Bits and Pieces
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   211.49
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
	if (v[i] > 50):
		descontos = descontos + v[i]*0.08
	i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
3582#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-H - Desconto na Loja Bits and Pieces
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   211.49
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0
while (i < size(v)):
	if (v[i] > 160.0):
		descontos = descontos + 25.0
	i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
3584#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-H - Desconto na Loja Bits and Pieces
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   211.49
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
	if (v[i] > 200):
		descontos = descontos + v[i]*0.15
	i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
3581#;#;## -*- coding: utf-8 -*-
"""
Created on Seg Nov 28 16:11:12 AMT 2016
TP 05 - Questão 1-H - Desconto na Loja Bits and Pieces
Exemplo de Entrada: [111.4, 42.0, 88.0]
Exemplo de Saída:   211.49
@author: IComp / UFAM
"""

from numpy import *

v = array(eval(input("Informe o vetor:")))

descontos = 0
i = 0

while (i < size(v)):
	if (v[i] > 40):
		descontos = descontos + 2.5
	i = i + 1

print(round(sum(v) - descontos, 2))#!#!#
3682#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

for i in range(0,n):
	matriz[i,i] = i + 1
print(matriz)	#!#!#
3681#;#;#import numpy
n = int(input())

matriz = numpy.ones((n,n),dtype = int)

coluna = numpy.ones(n,dtype = int)


for i in range(n):
	matriz[i,i] = 0 
	
print(matriz)	#!#!#
3680#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

for i in range(n):
	for j in range(n):
		if (i >= j):
			matriz[i,j] = 1
	
print(matriz)	
#!#!#
3679#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

for i in range(n):
	for j in range(n):
		if (i <= j):
			matriz[i,j] = 1
	
print(matriz)	
#!#!#
3678#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

for i in range(n):
	for j in range(n):
		if (i > j):
			matriz[i,j] = 1
	
print(matriz)	#!#!#
3677#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

for i in range(n):
	for j in range(n):
		if (i < j):
			matriz[i,j] = 1
	
print(matriz)	#!#!#
3673#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

coluna = numpy.ones(n,dtype = int)
ncolunas = numpy.shape(matriz)[0]

for j in range(0,ncolunas,2):
	matriz[:,j] = coluna
	
print(matriz)	#!#!#
3672#;#;#import numpy
n = int(input())

matriz = numpy.zeros((n,n),dtype = int)

linha = numpy.ones(n,dtype = int)
nlinhas = numpy.shape(matriz)[0]
for i in range(0,nlinhas,2):
	matriz[i] = linha
	
print(matriz)	#!#!#
3528#;#;#v = float(input())
meses = int(input())

cont = 0
while (cont < meses):
	v = v + v * 1.1/100
	print(round(v,2))
	cont = cont + 1
	#!#!#
3529#;#;#valor = float(input("Escreva a quantia inicial: "))
meses = int(input("Escreva o número de meses: "))
n = 0

while (n<meses):
    valor = valor + valor*1.3/100
    print (round(valor,2))
    n = n+1#!#!#
3530#;#;#valor = float(input("Escreva a quantia inicial: "))
meses = int(input("Escreva o número de meses: "))
n = 0

while (n<meses):
    valor = valor + valor*1.4/100
    print(round(valor,2))
    n = n+1#!#!#
3531#;#;#valor = float(input("Escreva a quantia inicial: "))
meses = int(input("Escreva o número de meses: "))
n = 0

while (n<meses):
    valor = valor + valor*1.5/100
    print(round(valor,2))
    n = n+1
		#!#!#
3532#;#;#valor = float(input("Escreva a quantia inicial: "))
meses = int(input("Escreva o número de meses: "))
n = 0

while (n<meses):
    valor = valor + valor*0.35/100
    print(round(valor,2))
    n = n+1#!#!#
3533#;#;#valor = float(input("Escreva a quantia inicial: "))
meses = int(input("Escreva o número de meses: "))
n = 0

while (n<meses):
    valor = valor + valor*0.39/100
    print(round(valor,2))
    n = n+1#!#!#
29#;#;#NULL#!#!#
99#;#;#NULL#!#!#
193#;#;#NULL#!#!#
74#;#;#NULL#!#!#
2258#;#;#NULL#!#!#
774#;#;#NULL#!#!#
254#;#;#NULL#!#!#
2116#;#;#NULL#!#!#
2113#;#;#NULL#!#!#
271#;#;#NULL#!#!#
2727#;#;##!#!#
2657#;#;#NULL#!#!#
982#;#;#NULL#!#!#
184#;#;#NULL#!#!#
1585#;#;#NULL#!#!#
2114#;#;#NULL#!#!#
581#;#;#NULL#!#!#
928#;#;#NULL#!#!#
1745#;#;#NULL#!#!#
1849#;#;##!#!#
911#;#;#NULL#!#!#
2109#;#;#NULL#!#!#
104#;#;#NULL#!#!#
1704#;#;#NULL#!#!#
219#;#;#NULL#!#!#
1747#;#;#NULL#!#!#
2094#;#;##include <stdio.h>

int main(){
	int dia;
	
	scanf("%d", &dia);
	
	switch(dia){
		case 1:
			printf("Domingo\n");
			break;
		case 2:
			printf("Segunda-feira\n");
			break;
		case 3:
			printf("Terça-feira\n");
			break;
		case 4:
			printf("Quarta-feira\n");
			break;
		case 5:
			printf("Quinta-feira\n");
			break;
		case 6:
			printf("Sexta-feira\n");
			break;
		default:
			printf("Sábado\n");
			break;
	}
	return 0;
}#!#!#
1923#;#;#NULL#!#!#
1969#;#;#NULL#!#!#
61#;#;#NULL#!#!#
110#;#;#NULL#!#!#
470#;#;#NULL#!#!#
954#;#;##!#!#
650#;#;#NULL#!#!#
97#;#;#NULL#!#!#
520#;#;#NULL#!#!#
2223#;#;#NULL#!#!#
910#;#;#NULL#!#!#
2634#;#;#NULL#!#!#
892#;#;#NULL#!#!#
2261#;#;#NULL#!#!#
2260#;#;#NULL#!#!#
1068#;#;#NULL#!#!#
1963#;#;#par x 
 |mod x 2 == 0 = True 
 |otherwise = False 
 
tomaPrim::(a->Bool)->[a]->[a]
tomaPrim f (x:xs)
 | f x = x: tomaPrim f xs
 |otherwise = []#!#!#
204#;#;#NULL#!#!#
2091#;#;#NULL#!#!#
525#;#;#NULL#!#!#
2199#;#;#NULL#!#!#
56#;#;#NULL#!#!#
1755#;#;#NULL#!#!#
1077#;#;#NULL#!#!#
205#;#;#NULL#!#!#
852#;#;#NULL#!#!#
148#;#;#NULL#!#!#
1701#;#;#NULL#!#!#
1927#;#;#NULL#!#!#
209#;#;#NULL#!#!#
2368#;#;#NULL#!#!#
396#;#;#NULL#!#!#
775#;#;#NULL#!#!#
2225#;#;#NULL#!#!#
459#;#;#NULL#!#!#
636#;#;#NULL#!#!#
714#;#;#NULL#!#!#
1445#;#;#NULL#!#!#
590#;#;#NULL#!#!#
2545#;#;#NULL#!#!#
1934#;#;##include <stdio.h>
#include "stdlib.h"

int main(){

	int consumoMedio, cont, maiorMes = 0, maiorVar = 0;
	int mes, consumo, var;

	scanf("%d", &consumoMedio);
	scanf("%d %d", &mes, &consumo);
   maiorVar = abs(consumoMedio - consumo);
   cont = 0; 
	while(cont < 5 ){

		scanf("%d %d", &mes, &consumo);

		var = abs(consumoMedio - consumo);
		if(var > maiorVar){

			maiorMes = mes;
			maiorVar = var;

		}
		cont++;
	}

	printf("%d\n", maiorMes);

	return 0;

}#!#!#
2464#;#;#NULL#!#!#
783#;#;#NULL#!#!#
517#;#;#NULL#!#!#
2201#;#;#NULL#!#!#
401#;#;#NULL#!#!#
100#;#;#NULL#!#!#
604#;#;#NULL#!#!#
724#;#;#NULL#!#!#
2117#;#;#NULL#!#!#
638#;#;#NULL#!#!#
1130#;#;#NULL#!#!#
484#;#;#NULL#!#!#
438#;#;#NULL#!#!#
191#;#;#NULL#!#!#
47#;#;#NULL#!#!#
2547#;#;#NULL#!#!#
991#;#;#NULL#!#!#
628#;#;#NULL#!#!#
153#;#;#NULL#!#!#
1696#;#;#NULL#!#!#
2398#;#;#NULL#!#!#
688#;#;#NULL#!#!#
777#;#;#NULL#!#!#
434#;#;#NULL#!#!#
717#;#;#NULL#!#!#
648#;#;#NULL#!#!#
527#;#;#NULL#!#!#
601#;#;##!#!#
2265#;#;#NULL#!#!#
509#;#;#NULL#!#!#
2710#;#;#NULL#!#!#
227#;#;#NULL#!#!#
725#;#;#NULL#!#!#
417#;#;#NULL#!#!#
1871#;#;#NULL#!#!#
2251#;#;#NULL#!#!#
2254#;#;#NULL#!#!#
426#;#;#NULL#!#!#
444#;#;#NULL#!#!#
2309#;#;#NULL#!#!#
113#;#;#NULL#!#!#
2692#;#;#NULL#!#!#
407#;#;#NULL#!#!#
2175#;#;##include <stdio.h>

float num=0,perc=0;

float calc(float n,float p){
	return n*p/100;
}

int main(){
	float resultado;
	scanf("%f",&num);
	scanf("%f",&perc);
	resultado = calc(num,perc);
	printf("%f",resultado);	
}#!#!#
2352#;#;#NULL#!#!#
2105#;#;#NULL#!#!#
510#;#;#NULL#!#!#
2310#;#;#NULL#!#!#
630#;#;#NULL#!#!#
519#;#;#NULL#!#!#
145#;#;#NULL#!#!#
806#;#;#NULL#!#!#
1869#;#;#NULL#!#!#
755#;#;#NULL#!#!#
431#;#;#NULL#!#!#
607#;#;#NULL#!#!#
786#;#;#NULL#!#!#
1043#;#;#NULL#!#!#
871#;#;#NULL#!#!#
328#;#;#NULL#!#!#
2348#;#;##include "stdio.h"

int main(int argc, char const *argv[]) {
  int tam, tam_l1, tam_l2;
  scanf("%d%d",&tam, &tam_l2);

  tam_l1 = tam - tam_l2;
  int notas[tam];

  for(int i=0;i<tam_l1;i++){
    scanf("%d",&notas[i]);
  }
  int nota;
  int comparou=0;
  int movimentou=0;
  for(int i=0;i<tam_l2;i++){
    scanf("%d",&nota);
    int j=tam_l1+i-1;

    while( (j>=0) && (nota<notas[j]) ){
      comparou++;
      movimentou++;
      notas[j+1] = notas[j];
      j--;
    }
    if (j>=0)
      comparou++;
	 
	 j++;
    notas[j] = nota;
  }
  for(int i=0;i<tam;i++){
    printf("%.2lf ",notas[i]/100.0);
  }

  printf("\ncomparou: %d\n",comparou);
  printf("movimentou: %d\n", movimentou);

  return 0;
}
#!#!#
220#;#;#NULL#!#!#
962#;#;#NULL#!#!#
923#;#;#NULL#!#!#
461#;#;#NULL#!#!#
1868#;#;#NULL#!#!#
696#;#;#NULL#!#!#
422#;#;#NULL#!#!#
320#;#;#NULL#!#!#
2708#;#;#NULL#!#!#
107#;#;#NULL#!#!#
2229#;#;##!#!#
294#;#;#NULL#!#!#
1238#;#;#NULL#!#!#
1058#;#;#NULL#!#!#
951#;#;#NULL#!#!#
370#;#;#NULL#!#!#
2335#;#;##!#!#
2202#;#;#NULL#!#!#
2479#;#;#destino=input()
motores=int(input())
distanciaEmMilhas = (526/1.852)
if destino == "Terra Santa":  
    if motores == 2:
        tempoDaViagem = distanciaEmMilhas/38
        tempoDaViagem += 2
        print("%d hora(s)" % tempoDaViagem)
    else:
        tempoDaViagem = distanciaEmMilhas/28
        tempoDaViagem += 2
        print("%d hora(s)" % tempoDaViagem)
elif destino == "Manaus":
    if motores == 2:
        tempoDaViagem = distanciaEmMilhas/(38-38*0.35)
        print("%d hora(s)" % tempoDaViagem)
    else:
        tempoDaViagem = distanciaEmMilhas/(28-28*.45)
        print("%d hora(s)" % tempoDaViagem)
else:
    print("destino desconhecido")#!#!#
179#;#;#NULL#!#!#
2018#;#;#NULL#!#!#
143#;#;#NULL#!#!#
111#;#;#NULL#!#!#
2214#;#;#NULL#!#!#
895#;#;#NULL#!#!#
1282#;#;#NULL#!#!#
1444#;#;#NULL#!#!#
1357#;#;#NULL#!#!#
268#;#;#NULL#!#!#
2478#;#;#destino=input()
motores=int(input())
distanciaEmMilhas = (446/1.852)
if destino == "Parintins":  
    if motores == 2:
        tempoDaViagem = distanciaEmMilhas/38
        print("%d hora(s)" % tempoDaViagem)
    else:
        tempoDaViagem = distanciaEmMilhas/28
        print("%d hora(s)" % tempoDaViagem)
elif destino == "Manaus":
    if motores == 2:
        tempoDaViagem = distanciaEmMilhas/(38-38*0.3)
        print("%d hora(s)" % tempoDaViagem)
    else:
        tempoDaViagem = distanciaEmMilhas/(28-28*.45)
        print("%d hora(s)" % tempoDaViagem)
else:
    print("destino desconhecido")  
#!#!#
800#;#;#NULL#!#!#
1259#;#;#NULL#!#!#
1074#;#;#NULL#!#!#
2299#;#;#NULL#!#!#
570#;#;#NULL#!#!#
1698#;#;#NULL#!#!#
1067#;#;#NULL#!#!#
625#;#;#NULL#!#!#
245#;#;#NULL#!#!#
276#;#;#NULL#!#!#
772#;#;#NULL#!#!#
188#;#;#NULL#!#!#
425#;#;#NULL#!#!#
760#;#;#NULL#!#!#
1065#;#;#NULL#!#!#
94#;#;#NULL#!#!#
418#;#;#NULL#!#!#
50#;#;#NULL#!#!#
472#;#;#NULL#!#!#
2656#;#;#NULL#!#!#
1144#;#;#NULL#!#!#
414#;#;#NULL#!#!#
2333#;#;#NULL#!#!#
518#;#;#NULL#!#!#
2477#;#;#periodo=input()
motores=int(input())
distanciaEmMilhas = (446/1.852)
if periodo == "Diurno":  
    if motores == 2:
        tempoDaViagem = distanciaEmMilhas/38
        print("%d hora(s)" % tempoDaViagem)
    else:
        tempoDaViagem = distanciaEmMilhas/28
        print("%d hora(s)" % tempoDaViagem)
elif periodo == "Noturno":
    if motores == 2:
        tempoDaViagem = distanciaEmMilhas/(38 - 38*0.15)
        print("%d hora(s)" % tempoDaViagem)
    else:
        tempoDaViagem = distanciaEmMilhas/(28 - 28*0.10) 
        print("%d hora(s)" % tempoDaViagem)
else:
    print("turno desconhecido")#!#!#
2106#;#;#NULL#!#!#
231#;#;#NULL#!#!#
620#;#;#NULL#!#!#
55#;#;#NULL#!#!#
907#;#;#NULL#!#!#
993#;#;#NULL#!#!#
1342#;#;#NULL#!#!#
331#;#;#NULL#!#!#
737#;#;#NULL#!#!#
176#;#;#NULL#!#!#
409#;#;#NULL#!#!#
861#;#;#NULL#!#!#
1858#;#;#NULL#!#!#
882#;#;#NULL#!#!#
2659#;#;#NULL#!#!#
1914#;#;#NULL#!#!#
679#;#;#NULL#!#!#
122#;#;#NULL#!#!#
1697#;#;#NULL#!#!#
454#;#;#import java.util.Scanner;
class main{
	public static void main(String [] args){
		Scanner x = new Scanner(System.in);
		int valor1,valor2;
		valor1 = x.nextInt();
		valor2 = x.nextInt();
		int soma = valor1 + valor2;
		System.out.println("a soma eh: "+soma);
	}
}#!#!#
569#;#;##!#!#
924#;#;#NULL#!#!#
2605#;#;##include <stdio.h>
#define N 11

int mediana(int vet[N]){

	int i, j;

	for(i = 0; i < (N - 1); i++){

		int mediana = vet[i], contMenores = 0, contMaiores = 0;

		for(j = 0; j < N; j++){

			if(vet[j] > mediana) contMaiores++;
			else if(vet[j] < mediana) contMenores++;

		}

		if(contMenores == contMaiores) return mediana;

	}

	return vet[N - 1];

}

int main(void){

	int vet[N], cont;

	for(cont = 0; cont < N; cont++) scanf("%d", &vet[cont]);

	printf("%d\n", mediana(vet));

	return 0;

}#!#!#
363#;#;#NULL#!#!#
233#;#;#NULL#!#!#
1906#;#;#NULL#!#!#
1071#;#;#NULL#!#!#
489#;#;#NULL#!#!#
776#;#;#NULL#!#!#
1925#;#;#NULL#!#!#
660#;#;#NULL#!#!#
242#;#;#NULL#!#!#
2681#;#;#NULL#!#!#
1686#;#;#NULL#!#!#
2264#;#;#NULL#!#!#
1313#;#;#NULL#!#!#
987#;#;#NULL#!#!#
893#;#;#NULL#!#!#
3711#;#;## Ler ano corrente

anocorrente = int(input())

print("Em",anocorrente,"a UFAM completou", anocorrente - 1909, "anos de fundacao.")
#!#!#
2427#;#;##!#!#
843#;#;##!#!#
2416#;#;#NULL#!#!#
824#;#;##!#!#
2428#;#;#NULL#!#!#
3769#;#;#"""
Created on Wed Mar 06 2019
Lab 01 – Ex 07
Leia e converta para MAIÚSCULAS
@author: IComp / UFAM
"""

entrada = input("Digite a string: ").upper()
print(entrada)
#!#!#
3770#;#;#"""
Created on Wed Mar 06 2019
Lab 01 – Ex 08
LEIA E CONVERTA PARA minúsculas
@author: IComp / UFAM
"""

entrada = input("Digite a string: ")

print(entrada.lower())
#!#!#
3774#;#;#distancia = float(input("distancia percorrida (km): "))
combustivel = float(input("combustivel gasto (l): "))

consumo = distancia/combustivel

print(round(consumo, 3), "km/l")#!#!#
4097#;#;#from numpy import *

n = int(input())

m1 = zeros((n,n),dtype=int)

for i in range(n):
	linhas = []
	for j in range(n):
		if (i<=j):
			linhas.append(i+1)		
		else:
			linhas.append(j+1)					
	m1.append(linhas)	
print(m1)		
		#!#!#
3565#;#;##!#!#
4236#;#;#"""
Introducao a Programacao de Computadores
DESAFIOS 01 - Exercicio 03
Media Ponderada
Criado em 06 / 03 / 2019
@author: IComp / UFAM
"""

# Leitura das entradas
nota1 = float(input("Nota 1: "))
nota2 = float(input("Nota 2: "))
nota3 = float(input("Nota 3: "))
nota4 = float(input("Nota 4: "))
				  
#pesos = 1, 2, 3, 4
media = (nota1 + (nota2 * 2) + (nota3 * 3) + (nota4 * 4)) / 10.0

# Impressao dos resultados
print(round(media, 2))#!#!#
4266#;#;#x = float(input("x: "))
y = float(input("y: "))

if (y > 0):
	print("Superiores")
else:
	print("Inferiores")
	#!#!#
3267#;#;#area = float(input("Digite o valor da area:"))
if(area > 0):
	if (area <= 100.0):
		a = (area * 2) + 100.00
	if (area>100.0 and area<=2500.0):
		a = (area * 1.8) + 150.0
	if (area>2500.0 and area<=10000.0):
		a = (area * 1.5) + 200
	if (area>10000.0):
		a = (area * 1.2) + 250
	valor = round(a,2)
	print("Total: R$",valor)
else:
	print("Dados invalidos")#!#!#
4317#;#;#num= int(input())
while(num!=-1):
	if(num%2==0):
		print("PAR")
	else:
		print("IMPAR")
	num= int(input())#!#!#
4326#;#;##!#!#
4358#;#;#from numpy import *

vetor = array(eval(input()))

# Valor do primeiro elemento do vetor
print(vetor[0])

# Valor do último elemento do vetor
print(vetor[-1])

# Número de elementos do vetor
print(size(vetor))

# Maior elemento do vetor
max_vetor = max(vetor) 
print(max(vetor))

# Índice do maior elemento do vetor
i = 0
while (vetor[i] != max_vetor):
    i = i + 1
print(i)

# Menor elemento do vetor
min_vetor = min(vetor) 
print(min_vetor)

# Índice do menor elemento do vetor
j = 0
while (vetor[j] != min_vetor):
    j = j + 1
print(j)

# Soma dos elementos do vetor
soma_vetor = sum(vetor)
print(soma_vetor)

# Média aritmética dos elementos do vetor (com duas casas decimais de precisão).
media_vetor = soma_vetor/size(vetor)
print(round(media_vetor, 2))
#!#!#
3232#;#;#from numpy import *

v = array(eval(input("Insira o vetor: ")))
nvet = ones(size(v),dtype=int)

i = 0
j = 0

while (i < size(v)):
	if v[i] != 1:
		nvet[j] = v[i]
		j = j + 1
	i = i + 1


print(nvet)#!#!#
4359#;#;##!#!#
3189#;#;#from numpy import *
media = array(eval(input("Média final: ")))
freq = array(eval(input("Frequência: ")))
carga = array(eval(input("Carga: ")))
cont = zeros(3, dtype=int)
for i in range(0,size(media)):
    if media[i]>=5 and  freq[i]>=0.75*carga:
        cont[0]=cont[0]+1
    elif media[i]<5  and freq[i]>=0.75*carga:
        cont[1]+=1
    else:
        cont[2]+=1
print(cont)#!#!#
4434#;#;##!#!#
4452#;#;#from numpy import *
a = array(eval(input()))
b = array(eval(input()))

m = shape(a)[0]
n = shape(a)[1]

c = zeros((m,n),dtype= int)

for i in range(m):
	for j in range(n):
		c[i,j] =  a[i,j] + b[i,j]

print(c)		
#!#!#
4453#;#;#from numpy import *
a = array(eval(input()))
b = array(eval(input()))

m = shape(a)[0]
n = shape(a)[1]

c = zeros((m,n),dtype= int)

for i in range(m):
	for j in range(n):
		c[i,j] =  a[i,j] * b[i,j]

print(c)		
#!#!#
2212#;#;#NULL#!#!#
4063#;#;#print("Ola mundo!")#!#!#
3277#;#;#	
#!#!#
3276#;#;##include<stdio.h>

float rad;

int main(){
  scanf("%f", &rad);
  float g = rad*57.29578;

  int graus = (int) g;
  float m = g - graus;
  m = m*60;
  int min = (int) m;
  float s = m - min;
  s = s*60;
  int seg = (int) s;

  printf("%d graus, %d minutos e %d segundos",graus,min,seg);

}

#!#!#
3275#;#;##include <stdio.h>

int main()
{
	int valor, hora, restohora,minutos,restominutos,segundos;
	scanf("%d",&valor);
	hora = valor / 3600;
	restohora = valor % 3600;
	minutos  = restohora /60;
	restominutos = restohora % 60;
	segundos  = restominutos;
	printf("%02d:%02d:%02d",hora,minutos,segundos);
	return 0;
}#!#!#
4832#;#;#from numpy import *

v = array(eval(input("Insira o vetor: ")))
a = ones(size(v),dtype=int)
s = "["
inicio = 0
i = 0
while i < size(v):
	if(v[i] != 1):
		a[inicio] = v[i]
		inicio = inicio + 1
	i = i + 1
i = 0
while i < (size(a) - 1):
	s = s + str(a[i])+", "
	print(i)
	i = i + 1

s += str(a[size(a)-1]) + "]"

print(s)#!#!#
4105#;#;##!#!#
4106#;#;##!#!#
5162#;#;#media = float(input())
a = float(input())

print("%i" %(media*(3*((3*(a**2))**0.5)/2)))
#!#!#
5172#;#;##include <stdio.h>
#include <math.h>

#int main(void){
#	double peso, qdt_racao_por_dia, resto;
#	scanf("%lf %lf",&peso, &qdt_racao_por_dia);
#	resto = peso-(qdt_racao_por_dia*5);
#	printf("%lf", ceil(resto*100)/100);
#}

# Leitura das entradas 
peso = float(input("Digite o peso da ração: "))
qt = float(input("Digite a quantidade diária da ração: "))


# Calculo do perimetro:
sobra = peso - qt*5

# Impressao do valor total:
print(round(sobra,2))#!#!#
5170#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada furao em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*7)
print(round(restante,3))#!#!#
5164#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada cao em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*4)
print(round(restante,2))#!#!#
5165#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada coelho em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*6)
print(round(restante,4))#!#!#
5166#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada passaro em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*5)
print(round(restante,2))#!#!#
5167#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada porquinho em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*7)
print(round(restante,3))#!#!#
5168#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada coelho em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*7)
print(round(restante,4))#!#!#
5169#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada cavalo em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*4)
print(round(restante,2))#!#!#
5163#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada gato em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*5)
print(round(restante,3))
#!#!#
5171#;#;#peso = float(input("Informe o peso do saco de racao em gramas: "))
qdt_racao_por_dia = float(input("A quantidade de racao fornecida para cada hamster em gramas por dia: "))

restante = peso-(qdt_racao_por_dia*7)
print(round(restante,2))#!#!#
5179#;#;##include <stdio.h>
#include <time.h>

// Exemplo de uso
// int ano=2001, mes=1, dia=1;
// int dias = emdiasdesde2000(ano, mes,dia);

int emdiasdesde2000(int ano, int mes, int dia){
	int ano2000=2000, mes01=1, dia01=1;

	struct tm dt1 = (struct tm){.tm_year=ano-1900, .tm_mon=mes-1, .tm_mday=dia};
	time_t tempo1 = mktime(&dt1);

	struct tm dt2 = (struct tm){.tm_year=ano2000-1900, .tm_mon=mes01-1, .tm_mday=dia01};
	time_t tempo2 = mktime(&dt2);

	double seconds = difftime(tempo1, tempo2);

	seconds = (seconds<0?seconds*-1:seconds);

	return seconds/(24*60*60);
}

int emsegundosdesde2000(int ano, int mes, int dia, int hora, int min, int seg){

	return emdiasdesde2000(ano, mes, dia) * 86400 + hora * 3600 + min * 60 + seg;

}

int main(void){

	int ninhadas = 1;

	int anoVelho, mesVelho, diaVelho, horaVelho, minVelho, segVelho;
	scanf("%d-%d-%d %d:%d:%d", &anoVelho, &mesVelho, &diaVelho, &horaVelho, &minVelho, &segVelho);

	while(anoVelho != 0){

		int anoNovo, mesNovo, diaNovo, horaNovo, minNovo, segNovo;
		scanf("%d-%d-%d %d:%d:%d", &anoNovo, &mesNovo, &diaNovo, &horaNovo, &minNovo, &segNovo);

		int idadeVelho = emsegundosdesde2000(anoVelho, mesVelho, diaVelho, horaVelho, minVelho, segVelho);
		int idadeNovo = emsegundosdesde2000(anoNovo, mesNovo, diaNovo, horaNovo, minNovo, segNovo);

		int ano, mes, dia, hora, min, seg, idade;

		if(idadeNovo < idadeVelho){

			idade = idadeVelho;
			ano = anoVelho; mes = mesVelho; dia = diaVelho;
			hora = horaVelho; min = minVelho; seg = segVelho;

			idadeVelho = idadeNovo;
			anoVelho = anoNovo; mesVelho = mesNovo; diaVelho = diaNovo;
			horaVelho = horaNovo; minVelho = minNovo; segVelho = segNovo;

			idadeNovo = idade;
			anoNovo = ano; mesNovo = mes; diaNovo = dia;
			horaNovo = hora; minNovo = min; segNovo = seg;

		}

		scanf("%d-%d-%d %d:%d:%d", &ano, &mes, &dia, &hora, &min, &seg);

		while(ano != 0){

			idade = emsegundosdesde2000(ano, mes, dia, hora, min, seg);

			if(idade < idadeVelho){

				idadeNovo = idadeVelho;
				anoNovo = anoVelho; mesNovo = mesVelho; diaNovo = diaVelho;
				horaNovo = horaVelho; minNovo = minVelho; segNovo = segVelho;

				idadeVelho = idade;
				anoVelho = ano; mesVelho = mes; diaVelho = dia;
				horaVelho = hora; minVelho = min; segVelho = seg;

			}else if(idade < idadeNovo){

				idadeNovo = idade;
				anoNovo = ano; mesNovo = mes; diaNovo = dia;
				horaNovo = hora; minNovo = min; segNovo = seg;

			}

			scanf("%d-%d-%d %d:%d:%d", &ano, &mes, &dia, &hora, &min, &seg);

		}

		printf("Ninhada: %d\n", ninhadas);
		printf("%d-%02d-%02d %02d:%02d:%02d\n", anoVelho, mesVelho, diaVelho, horaVelho, minVelho, segVelho);
		printf("%d-%02d-%02d %02d:%02d:%02d\n", anoNovo, mesNovo, diaNovo, horaNovo, minNovo, segNovo);

		scanf("%d-%d-%d %d:%d:%d", &anoVelho, &mesVelho, &diaVelho, &horaVelho, &minVelho, &segVelho);

		ninhadas++;

	}

	return 0;

}#!#!#
5195#;#;##Gasto com chackar

dst_corrida = float(input("Distancia da corrida em km: ")) 
qt_chakra = float(input("Chakra total do ninja: "))

dst_metros = dst_corrida * 1000

calculo = dst_metros * 30 / 10

if qt_chakra < calculo:
	msg = "nao vai conseguir"
else:
	msg = "vai conseguir"

print(round(calculo , 2))
print(msg)#!#!#
5244#;#;#extras = float(input("Horas extras: "))
faltas = float(input("Horas faltadas: "))
 
h = extras - ((2/3) * faltas)
 
if (h > 600):
        gratificacao = 300.0
else:
        gratificacao = 200.0
         
print(extras, "extras e", faltas, "de falta")
print("R$", round(gratificacao, 2))#!#!#
5245#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao D - Aumento de Salario
@author: IComp / UFAM
"""
sal = float(input("Digite o salario: "))

# Eco das entradas
# print("Entrada: R$", sal)

if sal>0:
    if sal<=800.0:
        i = 50
    elif sal>800.0 and sal<=1000.0:
        i = 40
    elif sal>1000.0 and sal<=1200.0:
        i = 30
    elif sal>1200 and sal<=1400:
        i = 20
    elif sal>1400 and sal<=1600:
        i = 10
    else:
        i = 5
    
    sal_novo = round(sal + sal * i/100., 2)
    print("Novo salario: R$", sal_novo)
else:
    print("Dado invalido")

#!#!#
5246#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao E - Grupo de Risco
@author: IComp / UFAM
"""
idade = int(input("Digite a idade: "))
peso  = float(input("Digite o peso: "))

# Eco das entradas
# print("Entradas:", idade, "anos e", "%.1f" %peso, "kg")

c1 = (idade>=0) and (idade<=130)
c2 = (peso>0) and (peso<=550.0)

if (c1 and c2):
    if idade<=20:
        if peso<=60.0:
            grupo=9
        elif peso>60.0 and peso<=90.0:
            grupo=8
        else:
            grupo=7
    elif idade>20 and idade<=50:
        if peso<=60.0:
            grupo=6
        elif peso>60.0 and peso<=90.0:
            grupo=5
        else:
            grupo=4
    else:
        if peso<=60.0:
            grupo=3
        elif peso>60.0 and peso<=90.0:
            grupo=2
        else:
            grupo=1
    print("Grupo de risco:", grupo)
else:
    print("Dados invalidos")#!#!#
5247#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao G - Aumento de Salario-Cargo
@author: IComp / UFAM
"""
sal    = float(input("Digite o salario: "))
codigo = int(input("Digite o codigo do cargo: "))

# Eco das entradas
# print("Entradas: R$", sal, "e codigo", codigo)

c1 = sal>0.0
c2 = (codigo>=101) and (codigo<=104)

if c1 and c2:
    if codigo==101:
        i = 0.8/100
    elif codigo==102:
        i = 0.65/100
    elif codigo==103:
        i = 0.60/100
    else:
        i = 0.55/100
    sal_novo = round(sal + sal * i, 2)
    print("Novo salario: R$", sal_novo)
else:
    print("Dados invalidos")
    
#!#!#
5248#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao A - Dosagem de medicamento
@author: IComp / UFAM
"""
idade = int(input("Digite a idade: "))
peso  = float(input("Digite o peso: "))

c1 = (idade>=0) and (idade<=130)
c2 = (peso>0) and (peso<=550.0)

# Eco das entradas
print("Entradas:", idade, "anos e", peso, "kg")

if (c1 and c2):
    if (idade>=12):
        if (peso>=60.0):
            mg=1000
        else:
            mg=875
    else:
        if (peso<=5.0):
            mg=75
        elif (peso>5.0) and (peso<=9.0):
            mg=125
        elif (peso>9.0) and (peso<=16.0):
            mg=250
        elif (peso>16.0) and (peso<=24.0):
            mg=375
        elif (peso>24.0) and (peso<=30):
            mg=500
        else:
            mg=750
    print("Dosagem:", mg, "mg")
else:
    print("Dados invalidos")
#!#!#
5249#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao B - Refeicao
@author: IComp / UFAM
"""
pto = int(input("Digite o prato: "))
sob = int(input("Digite a sobremesa: "))
beb = int(input("Digite a bebida: "))

# Eco das entradas
# print("Entradas:", pto, ",", sob, ",", beb)

c1 = (pto>=1) and (sob>=1) and (beb>=1)
c2 = (pto<=4) and (sob<=4) and (beb<=4)
cal = 0

if (c1 and c2):
    if pto==1:
        cal=180
    elif pto==2:
        cal=230
    elif pto==3:
        cal=250
    else:
        cal=350
    if sob==1:
        cal=cal+75
    elif sob==2:
        cal=cal+110
    elif sob==3:
        cal=cal+170
    else:
        cal=cal+200
    if beb==1:
        cal=cal+20
    elif beb==2:
        cal=cal+70
    elif beb==3:
        cal=cal+100
    else:
        cal=cal+65
    print("Calorias:", cal, "cal")
else:
    print("Dados invalidos")#!#!#
5250#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao F - Viagem de trem
@author: IComp / UFAM
"""

# Entradas
vel  = float(input("Velocidade do trem: "))
tempo = float(input("Tempo de viagem: "))

# Eco das entradas
print("Entradas:", vel, "km/h e", tempo, "h")

# Distancia percorrida pelo trem
dist = vel * tempo 

if (vel <= 0 or tempo < 0):
    parada = "invalido"
elif (dist < 100):
    parada = "Bravos"
elif (dist < 200):
    parada = "Castamere"
elif (dist < 400):
    parada = "Doriath"
elif (dist < 600):
    parada = "Edoras"
elif (dist < 750):
    parada = "Fangorn"
elif (dist < 1150):
    parada = "Gondor"
else:
    parada = "Hogsmead"

if (parada == "invalido"):
    print("Dados invalidos")
else:
    print("Proxima parada:", parada)

# Caso de teste A
# Entradas: 1.0, -1 

# Caso de teste B
# Entradas: 88.5, 4.5  

# Caso de teste C
# Entradas: 123.4, 12.3 
#!#!#
5251#;#;#destino = input("Destino: ")
idade = int(input("Idade: "))

# print("Entradas:", destino, ",", idade)

# destino = destino.lower()
if (destino == "porto velho" or destino == "belem"  or destino == "santarem" or destino == "tefe" or destino == "tabatinga") and (idade >=0 and idade < 150):
    if destino == "porto velho":
        preco = 500.0
    elif destino == "santarem":
        preco = 370.0
    elif destino == "belem":
        preco = 600.0
    elif destino == "tefe":
        preco = 360.0
    elif destino == "tabatinga":
        preco = 550.0
        
    if idade >=0 and idade <= 2:
        preco = 0.0
    elif idade > 2 and idade <= 12:
        preco = preco / 2
    elif idade >= 65:
        preco = preco * 0.7
        
    print("Passagem: R$", round(preco, 2))
else:
    print("Entradas invalidas")#!#!#
5252#;#;#altura = float(input("Qual a sua altura? "))
sexo = input("Qual seu sexo? ")

if sexo.upper() != "M" and sexo.upper() != "F":
    print("codigo invalido de sexo")
elif (altura < 1.0 or altura > 2.5):
    print("altura invalida")
elif (sexo.upper() == "M"):
    peso_ideal = (72.7 * altura) - 58
    print(round(peso_ideal, 2))
else:
    peso_ideal = (62.1 * altura) - 44.7
    print(round(peso_ideal, 2))#!#!#
5253#;#;#nivel  = float(input("Nivel do Professor: "))
horas	 = int(input("Horas trabalhadas: "))

if (nivel == 1):
    salario = horas*12.0
else: 
    if(nivel == 2):
        salario = horas*17.0
    else:
        salario = horas * 25.0

print(round(salario,2))#!#!#
5254#;#;#valor_produto = float(input("Valor do produto: "))
codigoRegiao = int(input("Codigo regiao: "))

descontoBF = 40/100

if (codigoRegiao == 1) : 
	frete = 10
else:
	if(codigoRegiao == 2) :
		frete = 8
	else:
		if (codigoRegiao == 3) :
			frete  = 0
		else:
			frete  = 2			

venda = (valor_produto - valor_produto * descontoBF) + valor_produto * (frete/100)

print(round(venda, 2))#!#!#
5255#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional
Versao H
Correios
Criado em 27 / 02 / 2018
@author: IComp / UFAM
"""
 
#constantes
kilo = 25.00
km = 0.10
 
#entradas
peso = float(input("Entre com o peso do produto: "))
distancia = float(input("Entre com a distancia: "))
codigo = int(input("Codigo UF destino: "))

if (codigo == 1):
	icms = 17
if (codigo == 2):
	icms = 17.5
if (codigo == 3):
	icms = 18
if (codigo == 4):
	icms = 20	
 
#processamento
preco = (peso * kilo) + (distancia * km)
precoICMS = preco * (icms / 100)
precoTotal = preco + precoICMS
 
#saidas
print(round(precoTotal,2))#!#!#
5256#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao I
Bolsa de Valores
Criado em 09 / 04 / 2018
@author: Alex Monteiro
"""
 
#entradas
precoAbertura = float(input("Preco de abertura: "))
precoFechamento = float(input("Preco de fechamento: "))
 
#processamento
diferenca = precoFechamento - precoAbertura
percentual = (diferenca * 100) / precoAbertura

if (percentual < 0):
    print("saldo negativo")
else:
    if(percentual == 0)	:
        print("sem variacao")
    else :
        print("saldo positivo")#!#!#
5257#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 03 - Estrutura Condicional Encadeada
Versao J
Bolsa de Valores
Criado em 09 / 04 / 2018
@author: Alex Monteiro, Leandro Galvao
"""
 
#entradas
custo = float(input("Valor do produto: "))
 
#processamento
if (custo <= 50):
    valorFinal = custo * 2
elif (custo > 50 and custo <= 100):
    valorFinal = custo * 1.5
elif (custo > 100 and custo <= 500):
    valorFinal = custo * 1.4
else:
    valorFinal = custo * 1.3
	
print(round(valorFinal, 2))#!#!#
5258#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 03 - Estrutura Condicional Aninhada
Versao F
Manaus-Porto Velho
Criado em 27 / 02 / 2018
@author: Alex Monteiro, Leandro Galvao
"""

#entradas
nBilhetes = int(input("No. bilhetes: "))
classe = input("Classe do assento: ").lower()
 
#processamento
if (classe == "rede"):
    total = nBilhetes * 500.0
    print(total)
elif (classe == "camarote"):
    total = nBilhetes * 1200.0
    print(total)
elif (classe == "suite"):
    total = nBilhetes * 1500.0
    print(total)
else:
    print("acomodacao invalida")#!#!#
5259#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Estrutura Condicional
Versao E
Desconto nas mensalidades
Criado em 09 / 04 / 2018
@author: Alex Monteiro
"""
 
#entradas
mensalidade = float(input("Mensalidade: "))
criancas = float(input("Criancas"))
 
#processamento
if (criancas == 1):
    desconto = 10
if (criancas == 2):
    desconto = 30
if (criancas >= 3):
    desconto = 40

valorFinal = (mensalidade - mensalidade * (desconto/100)) * criancas
	
print(round(valorFinal,2))#!#!#
5260#;#;#peso = float(input("Peso: "))
altura = float(input("Altura: "))

imc = peso/(altura**2)

if (imc < 18.5):
    print("abaixo do peso")
if (imc >= 18.5 and imc < 25):
    print("normal")
if (imc >= 25 and imc <= 30):
    print("acima do peso")
if (imc > 30):
    print("obeso")#!#!#
5287#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
moeda = (input("Digite CARA ou COROA: ")).upper()

#Variavel contadora 
qteC = 0
qteT = 0
# Laco de repeticao
while (moeda != "S"):
	qteT = qteT + 1
	if (moeda  == "CARA"):
        #Incrementa quantidade de CARAS
		qteC = qteC + 1     	
	# Inputs seguintes
	moeda = (input("Digite CARA ou COROA: ")).upper()

print(qteT)
print(round(100*qteC/qteT,2))
#!#!#
5283#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
numero = int(input())

#Variavel contadora 
qteT = 0
qteP = 0

# Laco de repeticao
while (numero != 0):
	qteT = qteT + 1
	if (numero > 0):
		qteP = qteP + 1
	numero = int(input()) # Inputs seguintes

print(qteT)
print(round(100*qteP/qteT,2))

#!#!#
5288#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
idade = int(input())

#Variavel contadora 
qteT = 0
qteI = 0
# Laco de repeticao
while (idade != -1):
    qteT = qteT + 1
	# Verifica se valor eh menor que 18

    if (idade < 18):
        #Incrementa quantidade de menores de idade
	    qteI = qteI + 1     	
	# Inputs seguintes
    idade = int(input())

print(qteT)
print(round(100*qteI/qteT,2))

#!#!#
5289#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
dado = int((input()))

#Variavel contadora 
qteT = 0
qte6 = 0
# Laco de repeticao
while (dado != -1):
	qteT = qteT + 1
	# Verifica se valor eh divisivel por 2
	if (dado == 6):
        #Incrementa quantidade de CARAS
		qte6 = qte6 + 1     	
	# Inputs seguintes
	dado = int((input()))

print(qteT)
print(round(100*qte6/qteT,2))

#!#!#
5290#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
dado = int((input()))

#Variavel contadora 
qteT = 0
qte5 = 0
# Laco de repeticao
while (dado != -1):
	qteT = qteT + 1
	# Verifica se valor eh divisivel por 2
	if (dado == 5):
        #Incrementa quantidade de CARAS
		qte5 = qte5 + 1     	
	# Inputs seguintes
	dado = int((input()))

print(qteT)
print(round(100*qte5/qteT,2))

#!#!#
5291#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input()).upper()

#Variavel contadora 
qteT = 0
qteS = 0
# Laco de repeticao
while (resposta != "S"):
	qteT = qteT + 1
	if (resposta  == "SIM"):
        #Incrementa quantidade de respostas positivas
		qteS = qteS + 1     	
	# Inputs seguintes
	resposta = (input()).upper()


print(qteT)
print(round(100*qteS/qteT,2))


#!#!#
5292#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
casa = (input("Digite PRETA ou VERMELHA: ")).upper()

#Variavel contadora 
qteT = 0
qteP = 0
# Laco de repeticao
while (casa != "S"):
	qteT = qteT + 1
	if (casa  == "PRETA"):
        #Incrementa quantidade de CARAS
		qteP = qteP + 1     	
	# Inputs seguintes
	casa = (input("Digite PRETA ou VERMELHA: ")).upper()

print(qteT)
print(round(100*qteP/qteT,2))
#!#!#
5286#;#;#num = int(input())

qteT = 0
qteM2 = 0

while(num != 0):
	qteT = qteT + 1	
	if (num % 2 == 0):
		qteM2 = qteM2 + 1	
	num = int(input())
	
print(qteT)
print(round(100*qteM2/qteT,2))
#!#!#
5293#;#;#num = int(input())

qteT = 0
qteM2 = 0

while(num != 0):
	qteT = qteT + 1	
	if (num % 2 == 0):
		qteM2 = qteM2 + 1	
	num = int(input())
	
print(qteT)
print(round(100*qteM2/qteT,2))

		#!#!#
5269#;#;#num = int(input())

qteT = 0
qteM3 = 0

while(num != 0):
	qteT = qteT + 1	
	if (num % 3 == 0):
		qteM3 = qteM3 + 1	
	num = int(input())
	
print(qteT)
print(round(100*qteM3/qteT,2))

		#!#!#
5305#;#;#from math import *

# Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + x/factorial(cont)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
5306#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + x/(2*cont)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
5307#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 10

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + cont / x

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
5308#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 10

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + cont/(2*cont*x)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
5309#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + x/(2*cont + 1)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
5310#;#;#from math import *

# Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + x/factorial(2*cont + 1)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
5311#;#;#deposito = float(input('deposito: '))
meses = int(input('meses: '))

#taxa = float(input('taxa: '))
cont = 0
taxa = 0.012

while cont < meses:
	deposito += (deposito * taxa)
	print(round(deposito,2))  
	cont+= 1
	

#!#!#
5312#;#;#n_bacterias = int(input("Informe o número de bactérias inicial: "))
horas_futuro = int(input("Informe o número horas: "))
horas = 0

while(horas < horas_futuro):
    n_bacterias = n_bacterias + int(n_bacterias*0.02)
    horas = horas + 1

print (n_bacterias)
#!#!#
5313#;#;#bogomips_desejado = float(input("Informe o valor em bogomips: "))
bogomips = 7206.14
ano = 2018

while (bogomips < bogomips_desejado):
    bogomips = bogomips + bogomips*0.65
    ano = ano + 1

print (ano)
#!#!#
5299#;#;#N = int(input("Informe o ano desejado: "))
ano = 1993
bogomips = 23.0

while (ano <= N):
	print(round(bogomips,2))
	bogomips = bogomips + bogomips*0.65
	ano = ano + 1#!#!#
5300#;#;#velocidade = float(input("Informe a velocidade de lançamento: "))
minuto = 0

while(velocidade >= 50):
	print (round(velocidade,2))
	velocidade = velocidade - velocidade*0.25	
	minuto = minuto + 1#!#!#
5301#;#;#velocidade = float(input("Informe a velocidade de lançamento: "))
segundos = 0

while(velocidade > 40):
	velocidade = velocidade - velocidade*0.02
	segundos = segundos + 1

print (segundos)#!#!#
5302#;#;#massa = float(input("Informe a quantidade de massa inicial: "))
N = int(input("Informe a quantidade de anos: "))
anos = 0

while(anos < N):
	massa = massa - massa*0.05
	anos = anos + 1
	print(round(massa,2))#!#!#
5303#;#;#massa = int(input("Informe a quantidade de massa inicial: "))
anos = 0

while(0.5 <= massa):
	massa = massa - massa*0.1
	anos = anos + 1

print(round(anos,2))#!#!#
5304#;#;#n_bacterias = int(input("Informe o número de bactérias inicial: "))
horas_futuro = int(input("Informe o número horas: "))
horas = 0

while(horas < horas_futuro):
	n_bacterias = n_bacterias + int(n_bacterias*0.15)
	horas = horas + 1
	print(n_bacterias)#!#!#
5362#;#;#from numpy import *
vetor=array(eval(input("vetor:")))
n=int(input())
for i in range(len(vetor)):
	vetor[i]=vetor[i] + n
print(vetor)#!#!#
5363#;#;#from numpy import *
vetor=array(eval(input("vetor:")))
n=int(input())
for i in range(len(vetor)):
	vetor[i]=vetor[i] * n
print(vetor)#!#!#
5364#;#;#from numpy import *
vet1=array(eval(input("vetor1:")))
vet2=array(eval(input("vetor2:")))
for i in range(len(vet1)):
	vet1[i]=vet1[i] + vet2[i]
print(vet1)#!#!#
5365#;#;#from numpy import *
vet1=array(eval(input("vetor1:")))
vet2=array(eval(input("vetor2:")))
for i in range(len(vet1)):
	vet1[i]=vet1[i] * vet2[i]
print(vet1)#!#!#
5366#;#;#from numpy import *
vet1=array(eval(input("vetor:")))
total=0
for i in range(len(vet1)):
	total = total + vet1[i]
print(total)#!#!#
5367#;#;#from numpy import *
cpf=array(eval(input("vetor:")))
aux=array([1,2,3,4,5,6,7,8,9])
total_soma=0
for i in aux:
    total_soma=total_soma + cpf[i-1] * aux[i-1]
print(total_soma%11)#!#!#
5368#;#;#from numpy import *
vet1=array(eval(input("vetor:")))
total=1
for i in range(len(vet1)):
	total = total * vet1[i]
print(total)#!#!#
5369#;#;#from numpy import *
cpf = array(eval(input("vetor:")))
aux = array([9,8,7,6,5,4,3,2,1])
total_soma=0
for i in aux:
	total_soma=total_soma + cpf[i-1] * aux[i-1]
print(total_soma%11)#!#!#
5370#;#;#from numpy import *
vet1=array(eval(input("vetor:")))
resp=True
for i in range(len(vet1)-1):
	if vet1[i+1] < vet1[i]:
		resp=False
print(resp)#!#!#
5371#;#;#from numpy import *
vet1=array(eval(input("vetor:")))
resp=True
for i in range(len(vet1)-1):
	if vet1[i+1] > vet1[i]:
		resp=False
print(resp)#!#!#
5374#;#;## -*- coding: utf-8 -*-
"""
Created on Qua Nov 30 10:16:58 AMT 2016
TP 05 - Questão 2-I - Custo de Gravação
@author: IComp / UFAM

Exemplo de Entrada:
IPC

Exemplo de Saída:
0.49
"""

from numpy import *

palavra = (input("Palavra:")).upper()

total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 0.15
	else:
		total = total + 0.17
	i = i + 1

print(round(total, 2))
#!#!#
5382#;#;#from numpy import *
palavra = input("Palavra:")
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 0.25
	else:
		total = total + 0.27
	i = i + 1
print(round(total, 2))
#!#!#
5383#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 0.12
	else:
		total = total + 0.18
	i = i + 1
print(round(total, 2))
#!#!#
5384#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 45.15
	else:
		total = total + 50.17
	i = i + 1
print(round(total, 2))
#!#!#
5385#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 35.15
	else:
		total = total + 42.17
	i = i + 1
print(round(total, 2))
#!#!#
5386#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 1.12
	else:
		total = total + 1.18
	i = i + 1
print(round(total, 2))
#!#!#
5387#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 45.12
	else:
		total = total + 50.18
	i = i + 1
print(round(total, 2))
#!#!#
5388#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 25.12
	else:
		total = total + 40.18
	i = i + 1
print(round(total, 2))
#!#!#
5389#;#;#palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 3.15
	else:
		total = total + 4.17
	i = i + 1
print(round(total, 2))
#!#!#
5390#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 0.19
	else:
		total = total + 0.23
	i = i + 1
print(round(total, 2))
#!#!#
5161#;#;#valor = float(input("valor da encomenda: "))

valor_total = valor + (0.81 * valor) + 12

print(round(valor_total, 2))#!#!#
5197#;#;##Emprestimo do Seu Madruga
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.20

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
5188#;#;##Emprestimo da Dona Florinda
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.25

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
5189#;#;##venda de churros
churros = int(input("Informe a quantidade de churros: "))

if churros < 12:
     print("O valor total da sua compra eh:", round(churros * 0.75,2))
else:
     print("O valor total da sua compra eh:", round(churros * 0.70,2))
#!#!#
5190#;#;#cargo = int(input("Informe o cargo: "))
salario = float(input("Salario: "))

if cargo == 101:
      salario_novo =  salario + (salario * 0.10)
      msg = "Aumento de 10 por cento"
else:
      salario_novo =  salario  + (salario  * 0.30) 
      msg = "Aumento de 30 por cento"

print (round(salario_novo,2))
print (msg)#!#!#
5191#;#;#Q = float(input("carga: "))
i = float(input("corrente: "))

t = Q / i
tempo = t * 60

print(tempo, "minutos")

if tempo > 72:     
      msg = "nao suporta o ataque"
else:
      msg = "suporta o ataque"

print (msg)
#!#!#
5192#;#;#tempo = int(input("Tempo: "))
i = 0.35

Q = i * tempo

print(round(Q,2))

if Q > 10:     
	msg = "nao suporta o ataque"
else:
	msg = "suporta o ataque"

print (msg)#!#!#
5193#;#;##include <stdio.h>

int main(){

    float ramem, menma, bolinhoArroz, onigi;
    float total;
    scanf("%f %f %f %f", &ramem, &menma, &bolinhoArroz, &onigi);

    total = 7*ramem + 6*menma + 3*bolinhoArroz + 5*onigi;
    if(total<= 42.00){
        printf("%.2f ryous\n", total - 3);
    }else{
        printf("%.2f ryous\n", total - (total*0.1));
    }

    return 0; 
}#!#!#
5194#;#;## Imposto Ninja
classe_missao = input("Informe classificacao da missao: ").upper()
valor_pago  = float(input("Valor pago pela missao: "))

if classe_missao == "B":
	valor_final  = valor_pago - (valor_pago * 0.15)
	msg = "Chunin" 
else:
	valor_final  = valor_pago - (valor_pago * 0.22)
	msg = "Jounin"

print("Classe:", msg)
print(round(valor_final,2))
#!#!#
5196#;#;#preco_antigo = float(input("Preco antigo: "))

if preco_antigo <= 100.0:
      preco_novo =  preco_antigo + (preco_antigo * 0.05)
      msg = "Aumento de 5 porcento"
else:
      preco_novo =  preco_antigo + (preco_antigo * 0.15) 
      msg = "Aumento de 15 porcento"

print (round(preco_novo , 2), "ryous")
print (msg)#!#!#
5231#;#;#N = int(input("N: "))

if (N % 3 == 0) and (N % 5 == 0):
    print("FizzBuzz")
elif (N % 3 == 0):
    print("Fizz")
elif (N % 5 == 0):
    print("Buzz")
else:
  print(N)
#!#!#
5233#;#;#N = int(input("N: "))

if (N % 3 == 0) and (N % 5 == 0):
    print("AuauMiau")
elif (N % 3 == 0):
    print("Auau")
elif (N % 5 == 0):
    print("Miau")
else:
  print(N)
#!#!#
5234#;#;#N = int(input("N: "))

if (N % 3 == 0) and (N % 5 == 0):
    print("TicTac")
elif (N % 3 == 0):
    print("Tic")
elif (N % 5 == 0):
    print("Tac")
else:
  print(N)
#!#!#
5235#;#;#N = int(input("N: "))

if (N % 3 == 0) and (N % 5 == 0):
    print("Zuuum")
elif (N % 3 == 0):
    print("Plunct")
elif (N % 5 == 0):
    print("Plact")
else:
	print(N)#!#!#
5236#;#;#N = int(input("N: "))

if (N % 3 == 0) and (N % 5 == 0):
    print("PirlimPimpim")
elif (N % 3 == 0):
    print("Pirlim")
elif (N % 5 == 0):
    print("Pimpim")
else:
  print(N)#!#!#
5237#;#;#N1 = int(input("N1: "))
N2 = int(input("N2: "))
N3 = int(input("N3: "))

if (N1 % 2 == 0) and (N2 % 2 == 0):
    print("SIM")
elif (N2 % 2 == 0) and (N3 % 2 == 0):
    print("SIM")
elif (N1 % 2 == 0) and (N3 % 2 == 0):
    print("SIM")
else:
    print("NAO")#!#!#
5238#;#;#N1 = int(input("N1: "))
N2 = int(input("N2: "))
N3 = int(input("N3: "))

if (N1 >= 1000) and (N2 >= 1000):
    print("SIM")
elif (N2 >= 1000) and (N3 >= 1000):
    print("SIM")
elif (N1 >= 1000) and (N3 >= 1000):
    print("SIM")
else:
    print("NAO")#!#!#
5239#;#;#N = float(input("Nota: "))

if (N > 10 or N < 0):
    print("ERRO")
elif (N >= 9):
    print("A")
elif (N >= 8):
    print("B")
elif (N >= 7):
    print("C")
elif (N >= 6):
    print("D")
elif (N >= 5):
    print("E")
else:
    print("F")#!#!#
5240#;#;#consumo = int(input("Consumo: "))

if (consumo < 100):
	t = 0.50*consumo + 50
elif (consumo >= 100 and consumo < 250):
	t = 0.75*consumo + 50
elif 	(consumo >= 250 and consumo < 500):
	t = 1.00*consumo + 50
else:
	t = 1.25*consumo + 50
	
print(round(t, 2))#!#!#
5241#;#;#C = float(input("Consumo: "))

valor = 20

if (C < 10):
    valor += C*2
elif (C < 20):
    valor += C*2.5
elif (C < 40):
    valor += C*2.75
else:
    valor += C*3

print(round(valor, 2))#!#!#
5294#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 10

# Inicia variavel contadora
cont = 1

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont <= k):
	# Computa novo termo da serie
	serie = serie + cont/(2*cont*x)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))
#!#!#
5295#;#;## Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + x/(2*cont + 1)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
5296#;#;#from math import *

# Variavel da serie
x = float(input("x: "))

# Numero de termos da serie
k = int(input("No. de termos: "))

# Precisao de impressao
precisao = 8

# Inicia variavel contadora
cont = 0

# Inicia variavel acumuladora (primeiro termo da serie)
serie = 0

# Determina e imprime demais aproximacoes
while (cont < k):
	# Computa novo termo da serie
	serie = serie + x/factorial(2*cont + 1)

	# Incrementa contador
	cont = cont + 1

# Imprime resultado
print(round(serie, precisao))#!#!#
5298#;#;#n_bacterias = int(input("Informe o número de bactérias inicial: "))
horas_futuro = int(input("Informe o número horas: "))
horas = 0

while(horas < horas_futuro):
    n_bacterias = n_bacterias + int(n_bacterias*0.02)
    horas = horas + 1

print (n_bacterias)
#!#!#
5297#;#;#bogomips_desejado = float(input("Informe o valor em bogomips: "))
bogomips = 7206.14
ano = 2018

while (bogomips < bogomips_desejado):
    bogomips = bogomips + bogomips*0.65
    ano = ano + 1

print (ano)
#!#!#
5019#;#;#salario_atual = float(input('Informe o salario atual: '))

if (salario_atual<1212):
    salario_novo=salario_atual+(salario_atual*0.12)
    salario_novo=round(salario_novo, 2)
    print(salario_novo)

if ((salario_atual>=1212) and (salario_atual <=5000)):
    salario_novo=salario_atual+(salario_atual*0.08)
    salario_novo=round(salario_novo, 2)
    print(salario_novo)

if (salario_atual>5000):
    salario_novo=salario_atual+(salario_atual*0.03)
    salario_novo=round(salario_novo, 2)
    print(salario_novo)#!#!#
5626#;#;##Emprestimo da Dona Clotilde
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.25

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
5624#;#;#consumo = float(input("Consumo: ")) 
limiar = 7000
if (consumo < limiar):
    total = consumo * .03
else:
    total = 80 + consumo * 0.05
print(round(total, 2))
#!#!#
5622#;#;#consumo = float(input("Consumo: "))
 
limiar = 120
 
if (consumo <= limiar):
    total = consumo * 1.3
else:
    total = 30 + consumo * 1.5
 
print(round(total, 2))
#!#!#
5627#;#;#cargo = int(input("Informe o cargo: "))
salario = float(input("Salario: "))

if cargo == 101:
      salario_novo =  salario + (salario * 0.20)
      msg = "Aumento de 20 por cento"
else:
      salario_novo =  salario  + (salario  * 0.35) 
      msg = "Aumento de 35 por cento"

print (round(salario_novo,2))
print (msg)
#!#!#
5625#;#;##constantes
tapioca = 5.5
salgado = 4.0
ac = 10.00

#entradas
item = input("Tapioca (T) ou salgado (S)? ")
qtd = int(input("Quantidade de tapiocas ou salgados: "))
qtd_ac = int(input("Quantidade de acai: "))

#processamento
if item == 'T':
	total = tapioca * qtd + (ac * qtd_ac)
else: 
	total = salgado * qtd + (ac * qtd_ac)

#saidas
print(total)
#!#!#
5623#;#;##constantes
bolo = 5.0
salgado = 4.0
cap = 7.5

#entradas
item = input("Bolo (B) ou salgado (S)? ")
qtd = int(input("Quantidade de fatias de bolo ou salgados: "))
qtd_cap = int(input("Quantidade de cappuccinos: "))

#processamento
if item == 'B':
	total = bolo * qtd + (cap * qtd_cap)
else: 
	total = salgado * qtd + (cap * qtd_cap)

#saidas
print(total)
#!#!#
5924#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 15

# Impressao do valor total:
print(perimetro)#!#!#
5930#;#;#valor = float(input("valor da encomenda: "))

valor_total = valor + (0.81 * valor) + 12

print(round(valor_total, 2))#!#!#
5918#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 7

# Impressao do valor total:
print(perimetro)#!#!#
5935#;#;#massa = float(input("massa da mercadoria (kg): "))

valor_total = 43.21 * massa + 25
valor_total = valor_total + 0.62 * valor_total

print(round(valor_total, 2))#!#!#
5921#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 10

# Impressao do valor total:
print(perimetro)#!#!#
5936#;#;#energia = float(input("consumo de energia em kWh: "))

valor_total = 0.43 * energia + 10
valor_total = valor_total + 0.25 * valor_total

print(round(valor_total, 2))#!#!#
5929#;#;#volume = float(input("volume de agua consumido no mes: "))

valor_mes = 0.37* volume + 15
valor_mes = valor_mes + 0.35 * valor_mes

print(round(valor_mes, 2))#!#!#
5925#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 20

# Impressao do valor total:
print(perimetro)#!#!#
5916#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 4

# Impressao do valor total:
print(perimetro)#!#!#
5917#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 6

# Impressao do valor total:
print(perimetro)#!#!#
5937#;#;#quant_litros = float(input("quantidade de litros de gasolina: "))

valor_total = 2.86 * quant_litros + 50
valor_total = valor_total + 0.34 * valor_total

print(round(valor_total, 2))#!#!#
5909#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 5

# Impressao do valor total:
print(perimetro)#!#!#
5932#;#;#consumo = float(input("consumo de chamadas (em minutos) durante o mês: "))

valor_total = 0.28 * consumo + 23
valor_total = valor_total + 0.31 * valor_total

print(round(valor_total, 2))#!#!#
5920#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 9

# Impressao do valor total:
print(perimetro)#!#!#
5922#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 11

# Impressao do valor total:
print(perimetro)#!#!#
5915#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 3

# Impressao do valor total:
print(perimetro)#!#!#
5919#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 8

# Impressao do valor total:
print(perimetro)#!#!#
5931#;#;#minutos = float(input("minutos excedentes no mes: "))

valor_mes = 0.97 * minutos + 45
valor_mes = valor_mes + 0.42 * valor_mes

print(round(valor_mes, 2))#!#!#
5923#;#;## Leitura das entradas e conversao para int:
lado = int(input("Qual a medida do lado do poligono? "))

# Calculo do perimetro:
perimetro = lado * 12

# Impressao do valor total:
print(perimetro)#!#!#
6024#;#;#valor_emprestimo = float(input())

if valor_emprestimo > 10000:
    print("Voce precisa apresentar um fiador")
else:
    print("Voce nao precisa apresentar um fiador")

juros = valor_emprestimo * 0.05 * 12
juros = round(juros, 2)
print("O valor dos juros para um ano e de: R$", juros)#!#!#
6026#;#;#preco_a = float(input()) # Preço das passagens da companhia A
preco_b = float(input()) # Preço das passagens da companhia B
atraso_a = int(input()) # Média de atraso em minutos da companhia A
atraso_b = int(input()) # Média de atraso em minutos da companhia B
custo_atraso = float(input()) # Custo padrão por minuto de atraso

custo_beneficio_a = preco_a * (atraso_a * custo_atraso)
custo_beneficio_b = preco_b * (atraso_b * custo_atraso)

if custo_beneficio_a > custo_beneficio_b:
    print("B")
elif custo_beneficio_b > custo_beneficio_a:
    print("A")
else:
    print("CUSTO-BENEFICIO IGUAL")
#!#!#
5955#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao Stefane
Restaurante do Zezinho – dinheiro curto
Criado em 04 / 04 / 2023
@author: IComp / UFAM
"""

#constantes
refri = 3.0
bolo = 2.50
salgado = 3.50

#entradas
item = input("Bolo(B) ou salgado (S) ?")
qtd_bs = int(input("Digite a quantidade de bolo ou salgado: "))
qtd_refr = int(input("Digite a quantidade de refrigerante: "))
disponivel = float(input("Digite o valor disponivel: "))

#processamento
if item == 'B':
	total = (qtd_refr * refri) + (bolo * qtd_bs)
else:
	total = (qtd_refr * refri) + (salgado * qtd_bs)
#saidas
print(round(total, 2))
if disponivel >= total:
	print("Sim")
else:
	print("Nao")#!#!#
5998#;#;#numero_de_macas = int(input())

if numero_de_macas < 12:
    total = 0.30 * numero_de_macas
else:
    total = 0.25 * numero_de_macas

print(round(total, 2))#!#!#
5999#;#;#numero_de_laranjas = int(input())

if numero_de_laranjas < 6:
    total = numero_de_laranjas * 0.75
else:
    total = numero_de_laranjas * 0.60

print(round(total, 2))#!#!#
6000#;#;#numero_de_cachos = int(input())

if numero_de_cachos < 3:
    total = numero_de_cachos * 5.0
else:
    total = numero_de_cachos * 4.25

print(total)#!#!#
6002#;#;#numero_de_mangas = int(input())

if numero_de_mangas < 6:
    total = numero_de_mangas * 3.80
else:
    total = numero_de_mangas * 3.45

print(round(total, 2))#!#!#
6003#;#;#numero_de_cenouras = int(input())

if numero_de_cenouras < 5:
    total = numero_de_cenouras * 1.20
else:
    total = numero_de_cenouras * 0.90

print(round(total, 2))#!#!#
6004#;#;#numero_de_tomates = int(input())

if numero_de_tomates < 4:
    total = numero_de_tomates * 0.75
else:
    total = numero_de_tomates * 0.55

print(round(total, 2))#!#!#
6005#;#;#numero_de_aboboras = int(input())

if numero_de_aboboras < 5:
    total = numero_de_aboboras * 3.80
else:
    total = numero_de_aboboras * 3.45

print(round(total, 2))#!#!#
6006#;#;#numero_de_batatas = int(input())

if numero_de_batatas < 10:
    total = numero_de_batatas * 0.90
else:
    total = numero_de_batatas * 0.75

print(round(total, 2))#!#!#
6007#;#;#numero_de_espigas = int(input())

if numero_de_espigas < 6:
    total = numero_de_espigas * 1.85
else:
    total = numero_de_espigas * 1.50

print(round(total, 2))#!#!#
6001#;#;#numero_de_morangos = int(input())

if numero_de_morangos < 12:
    total = numero_de_morangos * 1.50
else:
    total = numero_de_morangos * 1.35

print(round(total, 2))#!#!#
5947#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao C
Criado em 04 / 04 / 2023
@author: IComp / UFAM / Tutora Stefane Gandra
"""

#constantes
l = 2.0
s = 4.50
r = 6.0

#entradas
item = input("? ")
qtd = int(input(":"))
qtd_r = int(input(": "))

#processamento
if item == 'C':
	total = l * qtd + (r * qtd_r)
else: 
	total = s * qtd + (r * qtd_r)

#saidas
print(total)#!#!#
5950#;#;##constantes
bolo = 6.0
salgado = 5.0
cap = 4.5

#entradas
item = input("Bolo (B) ou salgado (S)? ")
qtd = int(input("Quantidade de fatias de bolo ou salgados: "))
qtd_cap = int(input("Quantidade de cappuccinos: "))

#processamento
if item == 'T':
	total = bolo * qtd + (cap * qtd_cap)
else: 
	total = salgado * qtd + (cap * qtd_cap)

#saidas
print(total)#!#!#
5951#;#;##constantes
tapioca = 4.5
salgado = 5.0
ac = 12.00

#entradas
item = input("Tapioca (T) ou salgado (S)? ")
qtd = int(input("Quantidade de tapiocas ou salgados: "))
qtd_ac = int(input("Quantidade de acai: "))

#processamento
if item == 'T':
	total = tapioca * qtd + (ac * qtd_ac)
else: 
	total = salgado * qtd + (ac * qtd_ac)

#saidas
print(total)#!#!#
5952#;#;##constantes
tapioca = 3.5
salgado = 5.0
ac = 13.00

#entradas
item = input("Tapioca (T) ou salgado (S)? ")
qtd = int(input("Quantidade de tapiocas ou salgados: "))
qtd_ac = int(input("Quantidade de acai: "))

#processamento
if item == 'T':
	total = tapioca * qtd + (ac * qtd_ac)
else: 
	total = salgado * qtd + (ac * qtd_ac)

#saidas
print(total)
#!#!#
5946#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao C
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
lanche = 6.0
pizza = 4.50
refri = 3.0

#entradas
item = input("Lanche (L) ou pizza (P)? ")
qtd = int(input("Quantidade de lanches ou pizza: "))
qtd_refri = int(input("Quantidade de refrigerantes: "))

#processamento
if item == 'L':
	total = lanche * qtd + (refri * qtd_refri)
else: 
	total = pizza * qtd + (refri * qtd_refri)

#saidas
print(total)#!#!#
5949#;#;##constantes
bolo = 3.0
salgado = 6.0
cap = 5.5

#entradas
item = input("Bolo (B) ou salgado (S)? ")
qtd = int(input("Quantidade de fatias de bolo ou salgados: "))
qtd_cap = int(input("Quantidade de cappuccinos: "))

#processamento
if item == 'B':
	total = bolo * qtd + (cap * qtd_cap)
else: 
	total = salgado * qtd + (cap * qtd_cap)

#saidas
print(total)
#!#!#
5953#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao C
Cantina da Neide – lanche ou salgado
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#constantes
lanche = 6.0
salgado = 13.50
refri = 3.0

#entradas
item = input("Lanche (L) ou salgado (S)? ")
qtd = int(input("Quantidade de lanches ou salgados: "))
qtd_refri = int(input("Quantidade de refrigerantes: "))

#processamento
if item == 'L':
	total = lanche * qtd + (refri * qtd_refri)
else: 
	total = salgado * qtd + (refri * qtd_refri)

#saidas
print(total)#!#!#
6008#;#;##Emprestimo do Seu Carlos
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.20

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
6009#;#;##Emprestimo da dona Fernanda
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.30

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
6010#;#;##Emprestimo do Seu Madruga
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.35

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
6011#;#;##Emprestimo da dona Carla
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.35

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")#!#!#
6013#;#;##Emprestimo do Seu Sabá
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.15

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")#!#!#
6014#;#;##Emprestimo da Maria Chiquinha
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.35

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")#!#!#
6012#;#;##Emprestimo do Seu Paulo
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.25

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
6078#;#;#v = float(input("valor do produto: "))

t = v + 10
t = t + t*0.1
if (v > 120):
	t = t - t*0.25
	print(t)
	print("Sim")
else:
	print(t)
	print("Nao")#!#!#
6079#;#;#qb = int(input('quantidade de bolo: '))
qs = int(input('quantidade de salgado: '))
qr = int(input('quantidade de refrigerante: '))
v = float(input('valor disponivel: '))

t = qb * 2.5 + qs* 3.5 + qr * 3.0

if v >= t:
	print(round(t, 2))
	print("Sim")
	print(v-t)
else:
	print("Nao")
#!#!#
6080#;#;#altura = float(input())
largura = float(input())
comprimento = float(input())
consumo = float(input())

volume = (altura * largura * comprimento)/1000
autonomia = volume/consumo

print(volume)
print(autonomia)

if autonomia < 2:
	print("consumo elevado")
else:
	if autonomia >= 2:
		if autonomia <= 7:
			print("consumo moderado")
		else:
			print("consumo reduzido")#!#!#
6100#;#;## Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Parte da saída da versão antiga do enunciado.
# Removido a fim de reduzir os textos das saídas.
# print("Entradas:", a, ",", b, ",", c)

# Testa se todas as entradas são positivas 
if (a == b and b == c):
	x = "equilatero"
elif (a == b or b == c or a == c):
	x = "isosceles"
else:
	x = "escaleno"

print(x)
#!#!#
6094#;#;#valor_plano = float(input())
num_membros = int(input())

if num_membros == 1:
    desconto = 0
elif num_membros == 2:
    desconto = 0.15
elif num_membros == 3:
    desconto = 0.25
else:
    desconto = 0.35

valor_total = valor_plano * num_membros * (1 - desconto)
valor_total = round(valor_total,2)

print("R$",valor_total)#!#!#
6104#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função B
"""

x = float(input('Entre com o valor de x: '))

if (x <= 0):
    fx = 0
elif (x> 0 and x <=1):
    fx = 1
elif (x> 1 and x <=2):
    fx = x**(1/2)
else:
    fx = x**(1/3)    

print(round(fx,4))#!#!#
6103#;#;#x = float(input())
a = float(input())
b = float(input())

if (a < b):
	if (x >= a and x <=b):
		print("pertence")
	else:
		print("nao pertence")
else:
	print("entradas invalidas")#!#!#
6095#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 10.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 14.0
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 18.6
else: # 50.0 ou mais 
    hiper_combustivel = 24.5
    
total = combustivel_comum + hiper_combustivel

print(total)
#!#!#
6093#;#;#salario = float(input())
tempo_servico = int(input())

if (10000>=salario>=1000 and 35>=tempo_servico >=1):
    if salario <= 1500.00:
        if  tempo_servico <= 3:
            salario *= 1.05  # aumento de 5%
        elif 10 > tempo_servico > 3:
            salario *= 1.08  # aumento de 8%
        else:
            salario *= 1.20  # aumento de 20%
    else:
        if tempo_servico > 5:
            salario *= 1.10  # aumento de 10%
        elif 5>tempo_servico>=1:
            salario *= 1.05  # aumento de 5%
            
    salario = round(salario,2)
    print("R$", salario)
else:
    print("Salario e/ou tempo de servico invalidos")
#!#!#
6102#;#;#"""
Introducao a Programacao de Computadores
Desafio 03 - Exercicio 01
ÍNDICE DE MASSA CORPORAL (IMC)
Criado em 11 / 04 / 2017
@author: IComp / UFAM
"""

X = int(input("Digite a idade: "))
Y = float(input("Digite o IMC: "))


# Calculo do Índice

if((X <= 0) or (X > 130) or (Y <0)):
    print("Entradas:", X, "anos e IMC", Y)
    print("Dados invalidos")
elif (X < 45):
    if(Y < 22):
        Z = 'Baixo'
    else:
        Z = 'Medio'
    print("Risco:", Z)
else:
    if (Y < 22):
        Z = 'Medio'
    else:
        Z = 'Alto'
    print("Risco:", Z)#!#!#
6158#;#;#temperatura = float(input("Digite a temperatura no dia do lançamento em ºC: "))
velocidade_vento = float(input("Digite a velocidade do vento em km/h: "))
chuva = input("Está chovendo? (S/N): ").upper()

if temperatura < 4.4 or temperatura > 35:
    print("Nao e possivel realizar o lancamento")
elif velocidade_vento > 74:
    print("Nao e possivel realizar o lancamento")
elif chuva == "S":
    print("Nao e possivel realizar o lancamento")
else:
    print("Lancamento autorizado")
#!#!#
6159#;#;#coragem = input("Voce se considera corajoso? ").upper()
ousadia = input("Voce se considera ousado? ").upper()
nobresa = input("Voce se considera nobre? ").upper()
cavalheirismo = input("Voce se considera cavalheiresco? ").upper()
ambicao = input("Voce e ambicioso? ").upper()
astucia = input("Voce e astuto? ").upper()
lideranca = input("Voce tem habilidades de lideranca? ").upper()
determinacao = input("Voce e determinado? ").upper()
inteligencia = input("Voce e inteligente? ").upper()
criatividade = input("Voce e criativo? ").upper()
originalidade = input("Voce e original? ").upper()
sabedoria = input("Voce e sabio? ").upper()
paciencia = input("Voce e paciente? ").upper()
lealdade = input("Voce e leal? ").upper()
bondade = input("Voce e bondoso? ").upper()
modestia = input("Voce e modesto? ").upper()

pontos_grifinoria = 0
pontos_sonserina = 0
pontos_corvinal = 0
pontos_lufalufa = 0

if coragem == "SIM":
	pontos_grifinoria += 1
if ousadia == "SIM":
	pontos_grifinoria += 1
if nobresa == "SIM":
	pontos_grifinoria += 1
if cavalheirismo == "SIM":
    pontos_grifinoria += 1

if ambicao == "SIM":
	pontos_sonserina += 1
if astucia == "SIM":
	pontos_sonserina += 1
if lideranca == "SIM":
	pontos_sonserina += 1
if determinacao == "SIM":
    pontos_sonserina += 1

if inteligencia == "SIM":
	pontos_corvinal += 1
if criatividade == "SIM":
	pontos_corvinal += 1
if originalidade == "SIM":
	pontos_corvinal += 1
if sabedoria == "SIM":
	pontos_corvinal += 1

if paciencia == "SIM":
	pontos_lufalufa += 1
if lealdade == "SIM":
	pontos_lufalufa += 1
if bondade == "SIM":
	pontos_lufalufa += 1
if modestia == "SIM":
	pontos_lufalufa += 1

if pontos_grifinoria > pontos_sonserina and pontos_grifinoria > pontos_corvinal and pontos_grifinoria > pontos_lufalufa:
    print("Grifinoria")
elif pontos_sonserina > pontos_grifinoria and pontos_sonserina > pontos_corvinal and pontos_sonserina > pontos_lufalufa:
    print("Sonserina")
elif pontos_corvinal > pontos_grifinoria and pontos_corvinal > pontos_sonserina and pontos_corvinal > pontos_lufalufa:
    print("Corvinal")
elif pontos_lufalufa > pontos_grifinoria and pontos_lufalufa > pontos_corvinal and pontos_lufalufa > pontos_sonserina:
    print("Lufa-Lufa")#!#!#
6160#;#;#massa = float(input("Digite a massa do objeto em kg: "))
velocidade = float(input("Digite a velocidade do objeto em m/s: "))

energia_cinetica = (1/2) * massa * velocidade ** 2

print("{:.2f}".format(energia_cinetica))

if energia_cinetica < 1000:
    print("Baixa energia")
elif energia_cinetica < 5000:
    print("Energia media")
else:
    print("Alta energia")
#!#!#
6041#;#;#N = int(input("N: "))

if N > 0:
    print("Tic")
elif N < 0:
    print("Tac")
else:
    print("Toe")

#!#!#
6149#;#;#i = int(input())

if i >= 20 and i <= 70:
    print("normal")
elif i >= 71 and i <= 100:
    print("vip")
else:
    print("intruso")#!#!#
6124#;#;#peso = float(input())

if 3000.0 <= peso < 3400.0:
    hiper_combustivel = 0.8
elif 3400.0 <= peso < 3900.0:
    hiper_combustivel = 1.3
elif 3900.0 <= peso < 4100.0:
    hiper_combustivel = 2.1
else: 
    hiper_combustivel = 3.0
    
total = peso*hiper_combustivel

print(round(total, 1))
#!#!#
6075#;#;#N = int(input("N: "))

if N > 0:
    print("Big")
elif N < 0:
    print("Bang")
else:
    print("Theory")#!#!#
6153#;#;#i = int(input())

if (i % 2 == 0) and (i % 3 == 0):
    print("normal")
elif i % 2 == 0:
    print("vip")
else:
    print("intruso")#!#!#
6123#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 0.8
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 1.3
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 2.1
else: # 50.0 ou mais 
    hiper_combustivel = 3.0
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6070#;#;#N = int(input("N: "))

if N > 0:
    print("Plunct")
elif N < 0:
    print("Plact")
else:
    print("Zuuum")#!#!#
6150#;#;#i = int(input())

if (i % 3 == 0) and (i % 5 == 0):
    print("normal")
elif i % 5 == 0:
    print("vip")
else:
    print("intruso")#!#!#
6072#;#;#N = int(input("N: "))

if N > 0:
    print("Pirlim")
elif N < 0:
    print("Pimpim")
else:
    print("Pirlim Pimpim")#!#!#
6147#;#;#i = int(input())

if i >= 30 and i <= 99:
    print("normal")
elif i >= 100 and i <= 150:
    print("vip")
else:
    print("intruso")#!#!#
6152#;#;#i = int(input())

if (i % 2 == 0) and (i % 3 == 0):
    print("normal")
elif i % 3 == 0:
    print("vip")
else:
    print("intruso")#!#!#
6109#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 1.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 2.3
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 3.3
else: # 50.0 ou mais 
    hiper_combustivel = 4.7
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6074#;#;#N = int(input("N: "))

if N > 0:
    print("Pedra")
elif N < 0:
    print("Papel")
else:
    print("Tesoura")#!#!#
6148#;#;#i = int(input())

if i >= 100 and i <= 200:
    print("normal")
elif i >= 201 and i <= 250:
    print("vip")
else:
    print("intruso")#!#!#
6112#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 10.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 14.0
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 18.6
else: # 50.0 ou mais 
    hiper_combustivel = 24.5
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6077#;#;#N = int(input("N: "))

if N > 0:
    print("Mario")
elif N < 0:
    print("Pacman")
else:
    print("Zelda")#!#!#
6144#;#;#i = int(input())

if i >= 0 and i <= 50:
    print("normal")
elif i >= 51 and i <= 100:
    print("vip")
else:
    print("intruso")

#!#!#
6108#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 1.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 2.3
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 3.3
else: # 50.0 ou mais 
    hiper_combustivel = 4.7
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6071#;#;#N = int(input("N: "))

if N > 0:
    print("Pos")
elif N < 0:
    print("Neg")
else:
    print("Null")#!#!#
6146#;#;#i = int(input())

if i >= 1 and i <= 64:
    print("normal")
elif i >= 65 and i <= 99:
    print("vip")
else:
    print("intruso")#!#!#
6145#;#;#i = int(input())

if i >= 1 and i <= 35:
    print("normal")
elif i >= 36 and i <= 50:
    print("vip")
else:
    print("intruso")#!#!#
6073#;#;#N = int(input("N: "))

if N > 0:
    print("Zig")
elif N < 0:
    print("Zag")
else:
    print("Zug")#!#!#
6110#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 10.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 14.0
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 18.6
else: # 50.0 ou mais 
    hiper_combustivel = 24.5
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6107#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 1.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 2.3
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 3.3
else: # 50.0 ou mais 
    hiper_combustivel = 4.7
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6122#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 0.8
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 1.3
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 2.1
else: # 50.0 ou mais 
    hiper_combustivel = 3.0
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6175#;#;##!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Apr 24 13:20:24 2019

@author: fgnaka
Problema: Função D
"""

x = float(input('Entre com o valor de x: '))

if (x < -4  or x >4):
    print('entrada invalida')
else:
    if (x>=-4 and x < 0):
        fx = abs(x)**(1/2)
    elif  (x>=0 and x <= 4):   
        fx = x**(1/2)   
    print(round(fx,4))
#!#!#
6111#;#;#combustivel_comum = float(input())

if combustivel_comum < 17.5:
    hiper_combustivel = 10.5
elif 17.5 <= combustivel_comum < 35.0:
    hiper_combustivel = 14.0
elif 35.0 <= combustivel_comum < 50.0:
    hiper_combustivel = 18.6
else: # 50.0 ou mais 
    hiper_combustivel = 24.5
    
total = combustivel_comum + hiper_combustivel

print(round(total, 1))
#!#!#
6076#;#;#N = int(input("N: "))

if N > 0:
    print("Mac OS")
elif N < 0:
    print("Windows")
else:
    print("Linux")#!#!#
6040#;#;#N = int(input("N: "))

if N > 0:
    print("Auau")
elif N < 0:
    print("Miau")
else:
    print("Oinc")
#!#!#
6151#;#;#i = int(input())

if (i % 3 == 0) and (i % 5 == 0):
    print("normal")
elif i % 3 == 0:
    print("vip")
else:
    print("intruso")#!#!#
6042#;#;#num = int(input())
soma = 0
contador = 0
# Laco de repeticao
while (num!=-1):
	contador = contador + 1	
	soma = soma + num	
	# Inputs seguintes
	num = int(input())
	
print(contador)	
print(soma)	#!#!#
6039#;#;#num = int(input())

# Laco de repeticao
while (num!=-1):
	# Verifica se valor eh divisivel por 2
	if (num%2==0):
		mensagem = "PAR"
	else:
		mensagem = "IMPAR"
	
	print(mensagem)
	
	# Inputs seguintes
	num = int(input())#!#!#
6050#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
nuc = (input("Digite o nucleotideo: ")).upper()

#Variavel contadora 
qte = 0
# Laco de repeticao
while (nuc != "S"):
	# Verifica se valor eh divisivel por 2
    if (nuc  == "A"):
        #Incrementa quantidade de respostas positivas
        qte = qte + 1     	
	# Inputs seguintes
    nuc = (input("Digite o nucleotideo: ")).upper()

print(qte)
#!#!#
6048#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
dado = int((input("Digite a face de um dado: ")))

#Variavel contadora 
qte = 1
# Laco de repeticao
while (dado != 6):
    #Incrementa quantidade de CARAS
    qte = qte + 1     	
	# Inputs seguintes
    dado = int((input("Digite a face de um dado: ")))

print(qte)
#!#!#
6085#;#;#n = input("digite resultado ")
jogos=0
pontos=0
porc=0.0
while n.upper() != "X":
   if n.upper()=="V" or n.upper()=="D" or n.upper()=="E":
      jogos+=1
   if n.upper()=="V":
      pontos+=3
   if n.upper()=="E":
      pontos+=1
   n = input("digite resultado ")

if(jogos>0):
   porc=100*pontos/(jogos*3)
print(round(porc,2))

  #!#!#
6193#;#;#x = int(input())
y = int(input())
while x <= y:
    if x % 3 == 0:
        print(x)
    x = x + 1
#!#!#
6194#;#;#x = int(input())
y = int(input())
soma = 0
while x <= y:
    if x % 5 == 0:
        soma = soma + x
    x = x + 1
print(soma)#!#!#
6215#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 55 and n <= 125):
        contador+=1
    n = int(input())

print(contador)#!#!#
6043#;#;#qi = float(input())
tempo = int(input())
juros = 0.04
saldo = qi # Variavel acumuladora

# Valor inicial da variavel contadora
cont = 0

# Atualizacao de saldo
while (cont<tempo):
    rend = saldo * juros
    saldo = saldo + rend
    cont += 1
    print(round(saldo, 2))#!#!#
6044#;#;#popA = int(input())
popB = int(input())
percA = float(input())
percB = float(input())

ano = 0

while (popA < popB):
	popA = popA + popA*percA/100
	popB = popB + popB*percB/100
	ano = ano + 1
	
print(ano)	#!#!#
6051#;#;#massa = int(input("Informe a quantidade de massa inicial: "))
anos = 0

while(0.5 <= massa):
	massa = massa - massa*0.1
	anos = anos + 1

print(round(anos,2))#!#!#
6205#;#;#altura_macaco = 1.75
taxa_macaco = 0.02

anos = 0
altura_felino = float(input())
taxa_felino = float(input())

while(altura_macaco > altura_felino):
    altura_macaco = altura_macaco + taxa_macaco
    altura_felino = altura_felino + taxa_felino
    anos  = anos + 1

print(anos)#!#!#
6195#;#;#n_bacterias = int(input("Informe o número de bactérias inicial: "))
taxa_crescimento = float(input("Informe o número horas: "))
horas = 0

limite = 2 * n_bacterias
while(n_bacterias < limite):
    n_bacterias = n_bacterias + n_bacterias*taxa_crescimento/100
    horas = horas + 1

print (horas)
#!#!#
6224#;#;## Iniciando o programa

# Definindo variáveis iniciais
total = 0
passaram = 0
reprovados = 0
maior_nota = 0.0
menor_nota = 10.0

# Lendo os valores
valor = float(input())

while valor >= 0:
    # Verificando a validade da nota
    if 0 <= valor <= 10:
        # Atualizando variáveis
        total += 1
        if valor >= 5:
            passaram += 1
        else:
            reprovados += 1
        if valor > maior_nota:
            maior_nota = valor
        if valor < menor_nota:
            menor_nota = valor
    else:
        print("Nota invalida.")

    # Lendo o próximo valor
    valor = float(input())

# Calculando a média
media = round(maior_nota / total, 2)

# Imprimindo os resultados
print(passaram,"alunos passaram")
print(reprovados,"alunos ficaram abaixo da media")
print("Maior nota:", round(maior_nota, 2))
print("Menor nota:", round(menor_nota, 2))#!#!#
6245#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input()).upper()

#Variavel contadora 
qteS = 0
# Laco de repeticao
while (resposta != "X"):

	if (resposta  == "S"):
        #Incrementa quantidade de respostas positivas
		qteS = qteS + 1     	
	# Inputs seguintes
	resposta = (input()).upper()


print(qteS)


#!#!#
6247#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input()).upper()

#Variavel contadora 
qteS = 0
# Laco de repeticao
while (resposta != "X"):

	if (resposta  == "FT"):
        #Incrementa quantidade de respostas positivas
		qteS = qteS + 1     	
	# Inputs seguintes
	resposta = (input()).upper()


print(qteS)


#!#!#
6248#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input()).upper()

#Variavel contadora 
qteS = 0
# Laco de repeticao
while (resposta != "X"):

	if (resposta  == "A"):
        #Incrementa quantidade de respostas positivas
		qteS = qteS + 1     	
	# Inputs seguintes
	resposta = (input()).upper()


print(qteS)


#!#!#
6246#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input()).upper()

#Variavel contadora 
qteS = 0
# Laco de repeticao
while (resposta != "X"):

	if (resposta  == "A"):
        #Incrementa quantidade de respostas positivas
		qteS = qteS + 1     	
	# Inputs seguintes
	resposta = (input()).upper()


print(qteS)


#!#!#
6173#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
resposta = (input()).upper()

#Variavel contadora 
qteS = 0
# Laco de repeticao
while (resposta != "S"):

	if (resposta  == "SIM"):
        #Incrementa quantidade de respostas positivas
		qteS = qteS + 1     	
	# Inputs seguintes
	resposta = (input()).upper()


print(qteS)


#!#!#
6192#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
casa = (input("Digite PRETA ou VERMELHA: ")).upper()

#Variavel contadora 
qteT = 0

# Laco de repeticao
while (casa != "S"):
	if (casa  == "PRETA"):
        #Incrementa quantidade de CARAS
		qteT = qteT + 1     	
	# Inputs seguintes
	casa = (input("Digite PRETA ou VERMELHA: ")).upper()

print(qteT)
#!#!#
6191#;#;## Introducao a Programacao de Computadores
# Criado em 15 / 05 / 2017
# @author: IComp / UFAM

# Primeiro input
moeda = (input("Digite CARA ou COROA: ")).upper()

#Variavel contadora 
qteC = 0
# Laco de repeticao
while (moeda != "S"):

	if (moeda  == "CARA"):
        #Incrementa quantidade de CARAS
		qteC = qteC + 1     	
	# Inputs seguintes
	moeda = (input("Digite CARA ou COROA: ")).upper()

print(qteC)
#!#!#
6218#;#;#x = int(input())
y = int(input())
while x <= y:
    if x % 2 == 0:
        print(x)
    x = x + 1
#!#!#
6216#;#;#x = int(input())
y = int(input())
while x <= y:
    if x % 5 == 0:
        print(x)
    x = x + 1
#!#!#
6223#;#;#x = int(input())
y = int(input())
soma = 0
while x <= y:
    if x % 2 != 0:
        soma = soma + x
    x = x + 1
print(soma)#!#!#
6222#;#;#x = int(input())
y = int(input())
soma = 0
while x <= y:
    if x % 2 == 0:
        soma = soma + x
    x = x + 1
print(soma)#!#!#
6221#;#;#x = int(input())
y = int(input())
soma = 0
while x <= y:
    if x % 7 == 0:
        soma = soma + x
    x = x + 1
print(soma)#!#!#
6220#;#;#x = int(input())
y = int(input())
soma = 0
while x <= y:
    if x % 3 == 0:
        soma = soma + x
    x = x + 1
print(soma)#!#!#
6219#;#;#x = int(input())
y = int(input())
while x <= y:
    if x % 2 != 0:
        print(x)
    x = x + 1
#!#!#
6217#;#;#x = int(input())
y = int(input())
while x <= y:
    if x % 7 == 0:
        print(x)
    x = x + 1
#!#!#
6214#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 45 and n <= 150):
        contador+=1
    n = int(input())

print(contador)#!#!#
6213#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 101 and n <= 201):
        contador+=1
    n = int(input())

print(contador)#!#!#
6212#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 26 and n <= 85):
        contador+=1
    n = int(input())

print(contador)#!#!#
6211#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 100 and n <= 199):
        contador+=1
    n = int(input())

print(contador)#!#!#
6210#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 35 and n <= 95):
        contador+=1
    n = int(input())

print(contador)#!#!#
6209#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 76 and n <= 100):
        contador+=1
    n = int(input())

print(contador)#!#!#
6208#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 51 and n <= 75):
        contador+=1
    n = int(input())

print(contador)#!#!#
6207#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 26 and n <= 50):
        contador+=1
    n = int(input())

print(contador)#!#!#
6206#;#;#n = int(input())
contador = 0

while(n != -1):
    if (n >= 0 and n <= 25):
        contador+=1
    n = int(input())

print(contador)#!#!#
6204#;#;#altura_macaco = 1.86
taxa_macaco = 0.01

anos = 0
altura_coelho = float(input())
taxa_coelho = float(input())

while(altura_macaco > altura_coelho):
    altura_macaco = altura_macaco + taxa_macaco
    altura_coelho = altura_coelho + taxa_coelho
    anos  = anos + 1

print(anos)#!#!#
6203#;#;#altura_macaco = 1.4
taxa_macaco = 0.06

anos = 0
altura_leao = float(input())
taxa_leao = float(input())

while(altura_macaco < altura_leao):
    altura_macaco = altura_macaco + taxa_macaco
    altura_leao = altura_leao + taxa_leao
    anos  = anos + 1

print(anos)#!#!#
6202#;#;#altura_bia = 1.69
taxa_bia = 0.01

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_pessoa <= altura_bia ):
    altura_bia = altura_bia + taxa_bia
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6201#;#;#altura_joe = 1.77
taxa_joe = 0.02

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_joe > altura_pessoa):
    altura_joe = altura_joe + taxa_joe
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6200#;#;#altura_max = 1.75
taxa_max = 0.01

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_max > altura_pessoa):
    altura_max = altura_max + taxa_max
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6199#;#;#altura_cicero = 1.8
taxa_cicero = 0.01

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_cicero > altura_pessoa):
    altura_cicero = altura_cicero + taxa_cicero
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6198#;#;#altura_luna = 1.65
taxa_luna = 0.02

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_luna > altura_pessoa):
    altura_luna = altura_luna + taxa_luna
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6197#;#;#altura_alice = 1.6
taxa_alice = 0.02

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_pessoa < altura_alice):
    altura_alice = altura_alice + taxa_alice
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6196#;#;#altura_chico = 1.5
taxa_chico = 0.02

anos = 0
altura_pessoa = float(input())
taxa_pessoa = float(input())

while(altura_pessoa  < altura_chico):
    altura_chico = altura_chico + taxa_chico
    altura_pessoa = altura_pessoa + taxa_pessoa
    anos  = anos + 1

print(anos)#!#!#
6270#;#;#from numpy import *

vetor = array(eval(input()))

# Valor do primeiro elemento do vetor
print(vetor[0])

# Valor do último elemento do vetor
print(vetor[-1])

# Número de elementos do vetor
print(size(vetor))

# Maior elemento do vetor
max_vetor = max(vetor) 
print(max(vetor))


# Menor elemento do vetor
min_vetor = min(vetor) 
print(min_vetor)


# Soma dos elementos do vetor
soma_vetor = sum(vetor)
print(soma_vetor)

# Média aritmética dos elementos do vetor (com duas casas decimais de precisão).
media_vetor = soma_vetor/size(vetor)
print(round(media_vetor, 2))
#!#!#
6273#;#;#string = input()

print(string[0])
print(string[-1])
print(len(string))
cont  = 0

for l in string:
	if l.islower():
		cont = cont + 1
print(cont)

cont  = 0
for l in string:
	if l.isupper():
		cont = cont + 1
print(cont)

cont  = 0
for l in string:
	if l.isnumeric():
		cont = cont + 1
print(cont)

print(string.lower())
print(string.upper())
print(string*10)#!#!#
6272#;#;#from numpy import *

vetor = array(eval(input()))

salto_record = max(vetor)
cont = 0
i = 0
while (i < size(vetor)):
    if vetor[i] < salto_record:
        cont = cont + 1
    i = i + 1

print(round(salto_record, 2))
print(cont)
#!#!#
6259#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0


while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
	if (vetor[i] % 2 == 0 and vetor[i] > N):
		cont += 1
	i += 1
        

print(cont)#!#!#
6271#;#;#from numpy import *

vetor = array(eval(input()))
num = int(input())
tam = len(vetor)
i = 0
while(vetor[i] != num and i < tam):
	i = i + 1

if (i == tam):
	print("Não encontrado")
else:
	print(i)

# Maior elemento do vetor
max_vetor = max(vetor) 
print(max(vetor))

i = 0
while(vetor[i] != max_vetor):
	i = i + 1
print(i)

	

# Menor elemento do vetor
min_vetor = min(vetor) 
print(min_vetor)

i = 0
while(vetor[i] != min_vetor):
	i = i + 1
print(i)
#!#!#
6260#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "H"):
        preco += 5.50
        c1 += 1
    elif (produtos[i] == "L"):
        preco += 3.75
        c2 += 1
    elif (produtos[i] == "P"):
        preco += 4.20
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)

#!#!#
6264#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = vetor[0] 
				  
i = tam - 2

while (i > 0):
	s = s + vetor[i]
	i = i - 1			  

s = s + vetor[-1]
	
print(s)				  #!#!#
6250#;#;#string = input()
letras_maiusculas = 0
letras_minusculas = 0
for letra in string:
	if letra.isupper():
		letras_maiusculas += 1
	elif letra.islower():
			letras_minusculas += 1
if letras_maiusculas > 0 and letras_minusculas > 0:
	mensagem = "maiusculas e minusculas: " + str(letras_maiusculas) + " maiusculas, " + str(letras_minusculas) + " minusculas"
	print(mensagem)
elif letras_maiusculas > 0:
	print("apenas maiusculas")
elif letras_minusculas > 0:
	print("apenas minusculas") 
#!#!#
6251#;#;#from numpy import *
# Vetores de entrada
items = eval(input())
values = eval(input())

# Vetor de saída
output = zeros(3,dtype=int)

# Para cada pedido
for i in range(len(items)):

  # Se o pedido tiver um item
  if items[i] == 1:
    output[0] += 1
  # Se o pedido tiver mais de um item
  else:
    output[1] += 1

  # Somar o valor do pedido
  output[2] += values[i]

# Imprimir o vetor de saída
print(output)#!#!#
6322#;#;#from numpy import *

n = int(input())
vet  = zeros(n, dtype=int)
vet[0] = 0
vet[1] = 1
i = 2

while(i<n):
    vet[i] = vet[i-1] + vet[i-2]
    i+=1

print(vet)#!#!#
6343#;#;#nome = input().upper()

if nome[1] == "A":
	print(nome)
else:
	print("nome invalido")#!#!#
6344#;#;#nome = input().upper()

if nome[4] == "C":
	print(nome)
else:
	print("nome invalido")#!#!#
6345#;#;#nome = input().upper()

if nome[2] == "R":
	print(nome)
else:
	print("nome invalido")#!#!#
6350#;#;#nome = input().upper()

if nome[1] == "U":
	print(nome)
else:
	print("nome invalido")#!#!#
6351#;#;#nome = input().upper()

if nome[-1] == "S":
	print(nome)
else:
	print("nome invalido")#!#!#
6352#;#;#nome = input().upper()

if nome[-1] == "N":
	print(nome)
else:
	print("nome invalido")#!#!#
6349#;#;#nome = input().upper()

if nome[2] == "L":
	print(nome)
else:
	print("nome invalido")#!#!#
6342#;#;#nome = input().upper()

if nome[0] == "M":
	print(nome)
else:
	print("nome invalido")#!#!#
6346#;#;#nome = input().upper()

if nome[0] == "W":
	print(nome)
else:
	print("nome invalido")#!#!#
6347#;#;#nome = input().upper()

if nome[3] == "I":
	print(nome)
else:
	print("nome invalido")#!#!#
6340#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
		cont += 1
	i += 1
        

print(cont)#!#!#
6341#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
	elif vetor[i] > N:
		cont += 1
	i += 1

print(cont)#!#!#
6337#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
	elif vetor[i] < N:
		cont += 1
	i += 1

print(cont)
#!#!#
6339#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
		cont += 1
	i += 1
        
print(cont)#!#!#
6338#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
	elif vetor[i] > N:
		cont += 1
	i += 1

print(cont)#!#!#
6299#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
	elif vetor[i] < N:
		cont += 1
	i += 1

print(cont)
#!#!#
6294#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < len(vetor)):
	if vetor[i] == N:
		print(i)
		cont += 1
	i += 1
        
print(cont)#!#!#
6336#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < 10):
	if vetor[i] == N:
		print(i)
	elif vetor[i] > N:
		cont += 1
	i += 1

print(cont)
#!#!#
6335#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < 10):
	if vetor[i] == N:
		print(i)
	elif vetor[i] < N:
		cont += 1
	i += 1

print(cont)
#!#!#
6316#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "D"):
        preco += 2.25
        c1 += 1
    elif (produtos[i] == "S"):
        preco += 4.00
        c2 += 1
    elif (produtos[i] == "I"):
        preco += 6.90
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6315#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "I"):
        preco += 3.75
        c1 += 1
    elif (produtos[i] == "M"):
        preco += 4.50
        c2 += 1
    elif (produtos[i] == "S"):
        preco += 2.90
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6313#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "B"):
        preco += 6.80
        c1 += 1
    elif (produtos[i] == "C"):
        preco += 11.75
        c2 += 1
    elif (produtos[i] == "M"):
        preco += 5.90
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6312#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "B"):
        preco += 3.75
        c1 += 1
    elif (produtos[i] == "C"):
        preco += 7.90
        c2 += 1
    elif (produtos[i] == "E"):
        preco += 9.85
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6311#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "C"):
        preco += 10.50
        c1 += 1
    elif (produtos[i] == "E"):
        preco += 8.75
        c2 += 1
    elif (produtos[i] == "P"):
        preco += 17.90
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6310#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "M"):
        preco += 7.25
        c1 += 1
    elif (produtos[i] == "P"):
        preco += 4.75
        c2 += 1
    elif (produtos[i] == "R"):
        preco += 3.50
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6309#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "H"):
        preco += 5.40
        c1 += 1
    elif (produtos[i] == "C"):
        preco += 8.95
        c2 += 1
    elif (produtos[i] == "L"):
        preco += 4.50
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6308#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "A"):
        preco += 16.75
        c1 += 1
    elif (produtos[i] == "L"):
        preco += 4.60
        c2 += 1
    elif (produtos[i] == "P"):
        preco += 2.85
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6306#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "A"):
        preco += 19.90
        c1 += 1
    elif (produtos[i] == "L"):
        preco += 3.50
        c2 += 1
    elif (produtos[i] == "P"):
        preco += 4.25
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6305#;#;#produtos = input().upper()
preco = 0
i = 0
c1 = 0
c2 = 0
c3 = 0

while(i < len(produtos)):
    if (produtos[i] == "H"):
        preco += 3.85
        c1 += 1
    elif (produtos[i] == "L"):
        preco += 2.95
        c2 += 1
    elif (produtos[i] == "E"):
        preco += 7.90
        c3 += 1
    i += 1

print(round(preco,2), c1, c2, c3)#!#!#
6324#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = ""
i = 0
while i < tam:
    if (i % 3 == 0):
        s = s + vetor[i]
    i = i + 1
print(s)#!#!#
6325#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = ""
i = 0
while i < tam:
    if i % 2 == 0:
        s = s + vetor[i]
    i = i + 1
print(s)#!#!#
6330#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = ""
i = 0

while i < tam-1:
    if i % 2 != 0:
        s = s + vetor[i]
    i = i + 1

print(s)#!#!#
6329#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = ""
i = 1

while i < tam-1:
    if i % 2 == 0:
        s = s + vetor[i]
    i = i + 1

print(s)#!#!#
6328#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = ""
i = 0
while i < tam:
    if i % 3 != 0:
        s = s + vetor[i]
    i = i + 1
print(s)#!#!#
6321#;#;#from numpy import *

vetor = array(eval(input()))
tam = size(vetor)
s = ""
i = 0
while i < tam:
    if  i % 2 != 0:
        s = s + vetor[i]
    i = i + 1
print(s)#!#!#
6353#;#;#n = int(input())

for i in range(n,-1,-1):
        print (i)
        if (i == 0):
            print ("Fim da contagem regressiva!")

#!#!#
6354#;#;#from numpy import *

cont = zeros(4, dtype=int)

vet = input("Tipos de sangue: ").upper().split(',')

for i in range(size(vet)):
    if (vet[i] == 'R'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'F'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'S'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'T'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6355#;#;#def contar_anos_bissextos(X, Y):
    contador = 0

    for ano in range(X, Y + 1):
        if ano % 4 == 0 and (ano % 100 != 0 or ano % 400 == 0):
            contador += 1
    
    return contador

# Leitura dos anos X e Y
X = int(input(""))
Y = int(input(""))

# Chamada da função para contar os anos bissextos
total_anos_bissextos = contar_anos_bissextos(X, Y)

# Impressão do resultado
print(total_anos_bissextos)
#!#!#
6357#;#;#palavra = input()
anagramas = []
fila = [("", palavra)]

while fila:
    anagrama_atual, palavra_restante = fila.pop(0)

    if len(anagrama_atual) == len(palavra):
        anagramas.append(anagrama_atual)
    else:
        for i in range(len(palavra_restante)):
            nova_palavra_restante = palavra_restante[:i] + palavra_restante[i+1:]
            fila.append((anagrama_atual + palavra_restante[i], nova_palavra_restante))

print(len(anagramas))
for i in range(15):
    print(anagramas[i])#!#!#
6359#;#;#N = int(input())
for i in range(N, -1, -3):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6381#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Cartas do baralho: ").upper().split(',')
for i in range(size(vet)):
    if (vet[i] == 'C'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'O'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'P'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'E'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6394#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	if vetor[indice] == 9:
		vetor[indice] = 0
	else:	
		vetor[indice] = vetor[indice]+1
print(vetor)#!#!#
6362#;#;#N = int(input())
for i in range(N, 4, -1):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6372#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Itens comprados: ").upper().split(',')

for i in range(size(vet)):
    if (vet[i] == 'A'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'B'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'L'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'H'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6371#;#;#from numpy import *
# leitura do vetor
vetor = array(eval(input("Informe o vetor:")))

# processamento
for indice in range(size(vetor)):
    if vetor[indice] == 0:
        predecessor = 9
    else:
        predecessor = vetor[indice] - 1
    vetor[indice] = predecessor**2

# saída
print(vetor)#!#!#
6365#;#;#N = int(input())
for i in range(N, 1, -1):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6380#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Produtos em estoque: ").upper().split(',')
for i in range(size(vet)):
    if (vet[i] == 'E'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'V'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'A'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'D'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6391#;#;#from numpy import *
# leitura do vetor
vetor = array(eval(input("Informe o vetor:")))

# processamento
for indice in range(size(vetor)):
    if vetor[indice] == 0:
        predecessor = 9
    else:
        predecessor = vetor[indice] - 1
    vetor[indice] = predecessor**3

# saída
print(vetor)#!#!#
6363#;#;#N = int(input())
for i in range(N, 3, -1):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6377#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Gols realizados: ").upper().split(',')
for i in range(size(vet)):
    if (vet[i] == 'A'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'B'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'C'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'D'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6396#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	vetor[indice] = vetor[indice]*2
print(vetor)#!#!#
6393#;#;#from numpy import *
# leitura do vetor
vetor = array(eval(input("Informe o vetor:")))

# processamento
for indice in range(size(vetor)):
    if vetor[indice] == 9:
        sucessor = 0
    else:
        sucessor = vetor[indice] + 1
    vetor[indice] = sucessor**3

# saída
print(vetor)#!#!#
6360#;#;#N = int(input())
for i in range(N, -1, -4):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6378#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Notas retiradas: ").upper().split(',')
for i in range(size(vet)):
    if (vet[i] == 'C'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'D'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'V'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'U'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6367#;#;#N = int(input())
for i in range(N, 5, -1):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6366#;#;#N = int(input())
for i in range(N, -1, -5):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6375#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Votos registrados: ").upper().split(',')

for i in range(size(vet)):
    if (vet[i] == 'A'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'B'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'C'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'D'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6358#;#;#N = int(input())
for i in range(N, -1, -2):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6382#;#;#from numpy import *
# leitura do vetor
vetor = array(eval(input("Informe o vetor:")))

# processamento
for indice in range(size(vetor)):
    if vetor[indice] == 9:
        sucessor = 0
    else:
        sucessor = vetor[indice] + 1
    vetor[indice] = sucessor**2

# saída
print(vetor)#!#!#
6379#;#;#from numpy import *

cont = zeros(5, dtype=int) # inicialização com zeros

vet = input("Notas dos alunos: ").upper().split(',')
for i in range(size(vet)):
    if (vet[i] == 'A'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'B'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'C'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'D'):
        cont[3] = cont[3] + 1
    elif (vet[i] == 'E'):
        cont[4] = cont[4] + 1
        
print(cont)#!#!#
6361#;#;#N = int(input())
for i in range(N, 9, -1):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6373#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Tarefas concluídas: ").upper().split(',')

for i in range(size(vet)):
    if (vet[i] == 'A'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'P'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'D'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'M'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6374#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Pacientes registrados: ").upper().split(',')

for i in range(size(vet)):
    if (vet[i] == 'O'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'D'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'N'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'C'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6364#;#;#N = int(input())
for i in range(N, 2, -1):
    print (i)
print("Fim da contagem regressiva!")#!#!#
6376#;#;#from numpy import *

cont = zeros(4, dtype=int) # inicialização com zeros

vet = input("Cestas realizadas: ").upper().split(',')

for i in range(size(vet)):
    if (vet[i] == 'A'):
        cont[0] = cont[0] + 1
    elif (vet[i] == 'B'):
        cont[1] = cont[1] + 1
    elif (vet[i] == 'C'):
        cont[2] = cont[2] + 1
    elif (vet[i] == 'D'):
        cont[3] = cont[3] + 1
        
print(cont)#!#!#
6368#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
soma = 0
for elemento in vetor:
	if elemento == 5:
		soma = soma * 5
	else:
		soma = soma + elemento
print(soma)
#!#!#
6113#;#;## Entrada de dados e definicao de constantes
v0    = float(input("Velocidade inicial: "))
theta = float(input("Angulo (em graus): "))
g     = 9.81

# Importar modulo matematico
from math import *

if (v0 >= 0) and (theta > 0) and (theta < 90):
    theta_rad = radians(theta)
    s = (v0**2 / g) * sin(2 * theta_rad)
    print(round(s, 3))
else:
    print("Dados invalidos.")#!#!#
6114#;#;## Entrada de dados
r = float(input("Raio: "))
x = float(input("Coord. X do ponto: "))
y = float(input("Coord. Y do ponto: "))

if (x**2 + y**2 == r**2):
    print("contido")
elif (x**2 + y**2 < r**2):
    print("interno")
else:
    print("externo")#!#!#
6227#;#;#x = int(input())
y = int(input())
z = int(input())


while (x <= y):
	print(x)
	x = x + z
	
	
	
	#!#!#
6228#;#;#nota = float(input())
cont = 0

while (nota >= 0):
	cont = cont + 1
	nota = float(input())

print(cont)
		
	
	#!#!#
6229#;#;#nota = float(input())
cont = 0

while (nota >= 0):
	if (nota >=5):
		cont = cont + 1
	nota = float(input())

print(cont)
		
	
	#!#!#
6230#;#;#nota = float(input())
cont = 0
notas = 0

while (nota >= 0):
	notas = notas + nota
	cont = cont + 1
	nota = float(input())

print(round(notas/cont,2))
		
	
	#!#!#
6231#;#;##!#!#
6392#;#;#def contar_anos_bissextos(X, Y):
    contador = 0

    for ano in range(X, Y + 1):
        if ano % 4 == 0 and (ano % 100 != 0 or ano % 400 == 0):
            contador += 1
    
    return contador

# Leitura dos anos X e Y
X = int(input(""))
Y = int(input(""))

# Chamada da função para contar os anos bissextos
total_anos_bissextos = contar_anos_bissextos(X, Y)

# Impressão do resultado
print(total_anos_bissextos)
#!#!#
5934#;#;#energia = float(input("consumo de energia em kWh: "))

valor_total = 0.43 * energia + 10
valor_total = valor_total + 0.25 * valor_total

print(round(valor_total, 2))#!#!#
5904#;#;##!#!#
6045#;#;#from math import *

k = int(input())
e = 0
i = 0
while (i < k):
	e = e + 1/factorial(i)
	i = i + 1

print(round(e,8))	#!#!#
6046#;#;#from math import *

x = eval(input())
k = int(input())
senx = 0
i = 0
while (i < k):
	senx = senx + (-1)**(i) * x**(2*i+1)/(factorial(2*i+1))
	i = i + 1

print(round(senx,10))#!#!#
6089#;#;#n = int(input())

cont = 0
pi = 0
divisor = 1.0
while (cont<n):
    cont+=1 
    if (cont%2==1):
        pi += 4/divisor
    else:
        pi -= 4/divisor
    divisor += 2

print(round(pi, 8))#!#!#
6049#;#;#n = int(input("digite n "))
pares= 0
impares=0
porc_pares=0.0
porc_impares=0.0
while n != 0:
   if (n%2==0):
      pares+=1
   else:
      impares+=1
   n = int(input("digite n "))
total=pares+impares
if(total>0):
   porc_impares=100*(impares/total)
   porc_pares=100*(pares/total)
print(round(porc_pares,2))
print(round(porc_impares,2))
  #!#!#
6189#;#;#nota = int(input('Qual a sua nota?'))
contador = 0
notas1 = 0
notas2 = 0
notas3 = 0
while 1<=nota<=3:
	if nota == 1:
		notas1+=1
	elif nota ==2:
		notas2 +=1
	else:
		notas3 +=1
	contador+=1
	nota = int(input('Qual a sua nota? '))
	
print(contador)
if notas1 > 0:
	print('{}'.format(round(notas1*100/contador,1)))
else:
	print(0.0)
if notas2 > 0:
	print('{}'.format(round(notas2*100/contador,1)))
else:
	print(0.0)
if notas3 > 0:
	print('{}'.format(round(notas3*100/contador,1)))
else:
	print(0.)#!#!#
6091#;#;#salario = float(input())
tempo_servico = int(input())

if (10000>=salario>=1000 and 35>=tempo_servico >=1):
    if salario <= 1500.00:
        if  tempo_servico <= 3:
            salario *= 1.05  # aumento de 5%
        elif 10 > tempo_servico > 3:
            salario *= 1.08  # aumento de 8%
        else:
            salario *= 1.20  # aumento de 20%
    else:
        if tempo_servico > 5:
            salario *= 1.10  # aumento de 10%
        elif 5>tempo_servico>=1:
            salario *= 1.05  # aumento de 5%
            
    salario = round(salario,2)
    print("R${}".format(salario))
else:
    print("Salario e/ou tempo de servico invalidos")
#!#!#
6092#;#;#valor_plano = float(input())
num_membros = int(input())

if num_membros == 1:
    desconto = 0
elif num_membros == 2:
    desconto = 0.15
elif num_membros == 3:
    desconto = 0.25
else:
    desconto = 0.35

valor_total = valor_plano * num_membros * (1 - desconto)
valor_total = round(valor_total,2)

print("R${}".format(valor_total))#!#!#
6304#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

if len(vetor) <= 10:
	while(i < len(vetor)):
		if vetor[i] == N:
			print(i)
		elif (vetor[i] % 2 != 0) and (vetor[i] > N):
			cont += 1
		i += 1

print(cont)#!#!#
6249#;#;## Vetores de entrada
items = eval(input())
values = eval(input())

# Vetor de saída
output = [0, 0, 0]

# Para cada pedido
for i in range(len(items)):

  # Se o pedido tiver um item
  if items[i] == 1:
    output[0] += 1
  # Se o pedido tiver mais de um item
  else:
    output[1] += 1

  # Somar o valor do pedido
  output[2] += values[i]

# Imprimir o vetor de saída
print(output)#!#!#
6395#;#;#from numpy import *
# Leitura do vetor
vetor = array(eval(input("Informe o vetor:")))
for indice in range(size(vetor)):
	if vetor[indice] == 0:
		vetor[indice] = 9
	else:	
		vetor[indice] = vetor[indice]-1
print(vetor)#!#!#
6466#;#;#base = float(input())
altura = float(input())

area = (base * altura) / 2

print(round(area,2))#!#!#
6467#;#;#lado = float(input())

area = lado * lado

print(round(area,2))#!#!#
6468#;#;#from math import *
lado = float(input())
apotema = lado / (2 * tan(pi / 5))
area = (5 * lado * apotema) / 2

print(round(area,2))#!#!#
6469#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 6))
area = 3 * lado * apotema

print(round(area,2))#!#!#
6470#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 7))

area = (7 * lado * apotema) / 2

print(round(area,2))#!#!#
6471#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 8))

area = 4 * lado * apotema

print(round(area,2))#!#!#
6472#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 9))

area = (9 * lado * apotema) / 2

print(round(area,2))#!#!#
6473#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 10))

area = 5 * lado * apotema

print(round(area,2))#!#!#
6474#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 11))

area = (11 * lado * apotema) / 2

print(round(area,2))#!#!#
6475#;#;#from math import *

lado = float(input())
apotema = lado / (2 * tan(pi / 12))

area = 6 * lado * apotema

print(round(area,2))#!#!#
6476#;#;#valorCoroaDinamarquesa = float(input())

valorReal = valorCoroaDinamarquesa * 0.7

print(round(valorReal,2))#!#!#
6477#;#;#valorCoroaNorueguesa = float(input())

valorReal = valorCoroaNorueguesa * 0.47

print(round(valorReal,2))#!#!#
6478#;#;#valorCoroaSueca = float(input())

valorReal = valorCoroaSueca * 0.46

print(round(valorReal,2))#!#!#
6479#;#;#valorDolarAustraliano = float(input())

valorReal = valorDolarAustraliano * 3.22

print(round(valorReal,2))#!#!#
6480#;#;#valorDolarCanadense = float(input())

valorReal = valorDolarCanadense * 3.61

print(round(valorReal,2))#!#!#
6481#;#;#valorDolarNeozelandes = float(input())

valorReal = valorDolarNeozelandes * 2.96

print(round(valorReal,2))#!#!#
6482#;#;#valorEuros = float(input())

valorReal = valorEuros * 5.25

print(round(valorReal,2))#!#!#
6483#;#;#valorLibras = float(input())

valorReal = valorLibras * 6.13

print(round(valorReal,2))#!#!#
6484#;#;#valorPesosArgentinos = float(input())

valorReal = valorPesosArgentinos * 0.018

print(round(valorReal,2))#!#!#
6485#;#;#valorPesosMexicanos = float(input())

valorReal = valorPesosMexicanos * 0.28

print(round(valorReal,2))#!#!#
6498#;#;#idade = int(input())
if idade >= 18:
	print("Maior_de_idade")
else:
	print("Menor_de_idade")
#!#!#
6496#;#;#N = int(input())

if N >= 0:
    print("positivo")
else:
    print("negativo")#!#!#
6497#;#;#valor_total = float(input())
if valor_total >= 100.0:
    desconto = valor_total * 0.1
    valor_final = round((valor_total - desconto),2)
    print(valor_final)
else:
    print(valor_total)
#!#!#
6512#;#;#n = int(input())
conta = n * 32.90

if (n > 3):
    conta = conta - ((20/100)*conta)
    
print(round(conta,2))#!#!#
6514#;#;#user = input()

if (user.upper() == "OPTIMUS"):
    print("Bem-vindo, guerreiro de Cybertron!")
else:
    print("Seja bem-vindo,", user)#!#!#
6509#;#;#h = int(input())
n = int(input())

conta = 28.5 * n

if (h >= 18):
    conta = conta - ((20/100) * conta) 

print(round(conta,2))#!#!#
6533#;#;#user = input()

if (user.upper() == "DARTH"):
    print("Bem-vindo, mestre do lado sombrio!")
else:
    print("Seja bem-vindo,", user)#!#!#
6532#;#;#user = input()

if (user.upper() == "YODA"):
    print("Bem-vindo, mestre Jedi!")
else:
    print("Seja bem-vindo,", user)#!#!#
6534#;#;#user = input()

if (user.upper() == "SHERLOCK"):
    print("Bem-vindo, detetive brilhante!")
else:
    print("Seja bem-vindo,", user)#!#!#
6507#;#;#n = int(input())
conta = n*25
if (n > 3):
    conta = conta - ((8/100) * conta)

print(round(conta,2))#!#!#
6528#;#;#user = input()

if (user.upper() == "POTTER"):
    print("Bem-vindo, bruxo de Hogwarts!")
else:
    print("Seja bem-vindo,", user)#!#!#
6513#;#;#n = int(input())
conta = n*20

if (n >= 4):
    conta = conta - ((15/100)*conta)

print(round(conta,2))

#!#!#
6505#;#;#tipo = input("Digite o tipo A, B ou C: ")
qtd = int(input("Quantidade de pratos consumidos: "))
conta = 30 * qtd

if (tipo.upper() == "C"): # se combo C, recebe desconto de 15%
    conta = conta - ((15/100)*conta)
    
print(round(conta, 2))#!#!#
6515#;#;#user = input()

if (user.upper() == "MARIO"):
    print("Bem-vindo, defensor do Reino dos Cogumelos!")
else:
    print("Seja bem-vindo,", user)#!#!#
6529#;#;#user = input()

if (user.upper() == "LINK"):
    print("Bem-vindo, protetor de Hyrule!")
else:
    print("Seja bem-vindo,", user)#!#!#
6531#;#;#user = input()

if (user.upper() == "GANDALF"):
    print("Bem-vindo, o mago dos magos!")
else:
    print("Seja bem-vindo,", user)#!#!#
6511#;#;#tipo = input()
n = int(input())

conta = 25.9 * n

if (tipo.upper() == 'B'):
    conta = conta - ((10/100)*conta)
    
print(round(conta,2))#!#!#
6510#;#;#dia = input()
n = int(input())

conta = n*22

if (dia == "qua"):
    conta = conta - ((15/100)*conta)
    
print(round(conta,2))#!#!#
6506#;#;#n = int(input())
sobremesa = input()

conta = n * 40

if (sobremesa.lower() == "s"):
    conta = conta - ((5/100) * conta)

print(round(conta, 2))#!#!#
6530#;#;#user = input()

if (user.upper() == "SKYWALKER"):
    print("Bem-vindo, cavaleiro Jedi!")
else:
    print("Seja bem-vindo,", user)#!#!#
6508#;#;#n = int(input())
conta = n * 50

if (n > 4):
    conta = conta - ((12/100)*conta)

print(round(conta,2))#!#!#
6535#;#;#user = input()

if (user.upper() == "FRODO"):
    print("Bem-vindo, portador do Anel de Sauron!")
else:
    print("Seja bem-vindo,", user)#!#!#
6504#;#;#n = int(input())

if (n <= 5):
    conta = n * 20
else:
    conta = (n*20) - (0.1 * (n*20))
    
print(round(conta,2))#!#!#
6526#;#;#nota1 = float(input())
nota2 = float(input())
nota3 = float(input())

media = (nota1 + nota2 + nota3) / 3

if media >= 7.0:
    situacao = "A"
elif media >= 5.0:
    situacao = "ER"
else:
    situacao = "R"

media = round(media, 2)

print(media,situacao)
#!#!#
6527#;#;#peso = float(input())
distancia = float(input())

if peso <= 1000:
    if distancia <= 100:
        frete = 50.00
    else:
        km_excedente = distancia - 100
        frete = 50.00 + (0.20 * km_excedente)
elif 1000 < peso <= 5000:
    if distancia <= 100:
        frete = 100.00
    else:
        km_excedente = distancia - 100
        frete = 100.00 + (0.30 * km_excedente)
else:
    frete = 500.00

frete = round(frete, 2)
print(frete)
#!#!#
6525#;#;#valor_total = float(input())
pagamento = input()

if valor_total >= 500 and pagamento == "A":
    desconto = valor_total * 0.1
elif valor_total >= 500 and pagamento == "P":
    desconto = valor_total * 0.05
elif valor_total < 500 and pagamento == "A":
    desconto = valor_total * 0.05
else:
    desconto = 0

valor_com_desconto = valor_total - desconto
valor_com_desconto = round(valor_com_desconto, 2)

print(valor_com_desconto)
#!#!#
6580#;#;## Solicita ao usuário que insira um número decimal
decimal = int(input())
binario = ''  # Inicializa a string binária vazia

# Verifica se o número decimal é igual a 0 (caso especial)
if decimal == 0:
    binario = "0"
else:
    while decimal > 0:
        # Passo 1: Calcula o resto da divisão por 2
        resto = decimal % 2
        # Passo 2: Adiciona o resto à esquerda da string binária
        binario = str(resto) + binario
        # Passo 3: Realiza a divisão inteira por 2
        decimal = decimal // 2

# Imprime a representação binária
print(binario)
#!#!#
6582#;#;## Solicita ao usuário que insira um número inteiro não negativo
numero = int(input())

# Verifica se o número é não negativo
resultado = 1
contador = 1
# Calcula o fatorial do número usando um loop while
while contador <= numero:
	resultado *= contador
	contador += 1
# Imprime o resultado
print(resultado)
#!#!#
6581#;#;## Solicita ao usuário o número inicial da contagem regressiva
inicio = int(input())

# Inicia a contagem regressiva
while inicio >= 0:
    print(inicio)
    inicio -= 1
#!#!#
6549#;#;#n = int(input())

if (n == 8):
    print("eh magico")
elif (n < 8):
    print("eh menor")
else:
    print("eh maior")#!#!#
6567#;#;#n = int(input())
preco = 60
if (n < 50):
    preco += 4.5
elif (n == 50):
    preco += 5.5
else:
    preco += 6.5

print("total=", round(preco,2))#!#!#
6557#;#;#n = int(input())

if (n == 123):
    print("desconto especial")
elif (n < 123):
    print("eh menor")
else:
    print("eh maior")#!#!#
6564#;#;#n = int(input())
diaria = 100*n
if n < 7:
    diaria = diaria + 15.0
elif n == 7:
    diaria = diaria + 12.0
else:
    diaria = diaria + 10.0
    
print("total=", round(diaria,2))#!#!#
6548#;#;#n = int(input())

if (n == 21):
    print("eh da sorte")
elif (n < 21):
    print("eh menor")
else:
    print("eh maior")#!#!#
6565#;#;#d = int(input())
preco = 50.0

if (d < 10):
    preco = preco + 5.5
elif (d == 10):
    preco = preco + 7.75
else:
    preco = preco + 10
    
print("total=",round(preco,2))#!#!#
6554#;#;#n = int(input())

if (n == 7):
    print("eh fortuna")
elif (n < 7):
    print("eh menor")
else:
    print("eh maior")#!#!#
6571#;#;#peso = float(input())

preco = 10

if peso < 5:
    preco += 3.75
elif peso == 5:
    preco += 4.75
else:
    preco += 5.75

print("total=", round(preco,2))#!#!#
6559#;#;#n = int(input())

if (n == 5):
    print("eh brilhante")
elif (n < 5):
    print("eh menor")
else:
    print("eh maior")#!#!#
6566#;#;#q = int(input())
preco = 30.0

if (q < 10):
    preco = preco + 3.25
elif (q == 10):
    preco = preco + 4.50
else:
    preco = preco + 6

print("total=", round(preco,2))#!#!#
6563#;#;#n = int(input())
diaria = 175*n
if n < 15:
    diaria = diaria + 20.0
elif n == 15:
    diaria = diaria + 16.0
else:
    diaria = diaria + 10.0
    
print("total=", round(diaria,2))#!#!#
6555#;#;#n = int(input())

if (n == 9):
    print("eh premiado")
elif (n < 9):
    print("eh menor")
else:
    print("eh maior")#!#!#
6558#;#;#n = int(input())

if (n == 100):
    print("eh limite")
elif (n < 100):
    print("eh menor")
else:
    print("eh maior")#!#!#
6569#;#;#idade = int(input())

ingresso = 20

if idade < 12:
    ingresso += 1.25
elif idade == 12:
    ingresso += 2.25
else:
    ingresso += 3.25
    
print("total=", round(ingresso,2))#!#!#
6562#;#;#n = int(input())

if (n == 190):
    print("acesso vip")
elif (n < 190):
    print("eh menor")
else:
    print("eh maior")#!#!#
6572#;#;#n = int(input())

preco = n * 5

if (n < 3):
    preco += 3
elif (n == 3):
    preco += 3.25
else:
    preco += 4.5

print("total=", round(preco, 2))#!#!#
6561#;#;#n = int(input())

if (n == 175):
    print("voo premiado")
elif (n < 175):
    print("eh menor")
else:
    print("eh maior")#!#!#
6570#;#;#h = float(input())
preco = 5

if (h < 2):
    preco += 1.25
elif h == 2:
    preco += 2.25
else:
    preco += 3.25

print("total=", round(preco,2))#!#!#
6568#;#;#prato = input()
preco = 15.0
if prato.lower() == "frango":
    preco += 5
elif prato.lower() == "peixe":
    preco += 7
elif prato.lower() == "carne":
    preco += 10

print("total=", round(preco,2))#!#!#
6560#;#;#n = int(input())

if (n == 42):
    print("tesouro encontrado")
elif (n < 42):
    print("eh menor")
else:
    print("eh maior")#!#!#
6599#;#;#N = int(input()) # quantidade de pessoas que vão votar
contM = 0 # turno A
contT = 0 # turno B
contN = 0 # turno C

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'M':
		contM += 1
	elif voto.upper() == 'T':
		contT += 1
	elif voto.upper() == 'N':
		contN += 1
	c += 1

print("M=", contM)
print("T=", contT)
print("N=", contN)#!#!#
6604#;#;## quadrados

N = int(input())

c = 1

while(c <= N):
    quadrado = c**2
    print(quadrado)
    c += 1
print("fim")

#!#!#
6598#;#;#N = int(input())
c = 0
c_edgar = 0
c_tais = 0
c_ana = 0

while(c < N):
	candidato = input()
	if candidato.lower() == "tais":
		c_tais += 1
	elif candidato.lower() == "edgar":
		c_edgar += 1
	elif candidato.lower() == "ana":
		c_ana += 1
	c += 1
print("tais=", c_tais)
print("edgar=", c_edgar)
print("ana=", c_ana)#!#!#
6609#;#;#N = int(input())

while(N <= 0):
    if N % 3 == 0:
        print(N)
    N += 1
print("fim")#!#!#
6602#;#;#N = int(input()) # quantidade de pessoas que vão votar
contL = 0 # prato L
contC = 0 # prato C
contP = 0 # prato P

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'L':
		contL += 1
	elif voto.upper() == 'C':
		contC += 1
	elif voto.upper() == 'P':
		contP += 1
	c += 1

print("L=", contL)
print("C=", contC)
print("P=", contP)#!#!#
6613#;#;#N = int(input())

c = 1
soma = 0

while(c <= N):
    cubo = c**3
    soma += cubo
    c += 1

print("soma=", soma)#!#!#
6605#;#;## cubos

N = int(input())

c = 1

while(c <= N):
    cubo = c**3
    print(cubo)
    c += 1
print("fim")

#!#!#
6587#;#;#N = int(input()) # quantidade de pessoas que vão votar
contA = 0 # candidato A
contB = 0 # candidato B
contC = 0 # candidato C

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'A':
		contA += 1
	elif voto.upper() == 'B':
		contB += 1
	elif voto.upper() == 'C':
		contC += 1
	c += 1

print("A=", contA)
print("B=", contB)
print("C=", contC)#!#!#
6611#;#;#N = int(input())
c = 1
soma = 0
while(c <= N):
    if c % 3 == 0:
        soma += c
    c += 1

print("soma=", soma)#!#!#
6606#;#;#N = int(input())

c = 1

while(c <= N):
    if c % 3 == 0:
        print(c)
    c+= 1
print("fim")#!#!#
6597#;#;#N = int(input()) # quantidade de pessoas que vão votar
contA = 0 # técnica A
contB = 0 # técnica B
contC = 0 # técnica C

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'A':
		contA += 1
	elif voto.upper() == 'B':
		contB += 1
	elif voto.upper() == 'C':
		contC += 1
	c += 1

print("A=", contA)
print("B=", contB)
print("C=", contC)#!#!#
6610#;#;#N = int(input())
c = 1
soma = 0
while(c <= N):
    if c % 2 == 0:
        soma += c
    c += 1

print("soma=", soma)#!#!#
6596#;#;#N = int(input())
t1 = 0
t2 = 0
t3 = 0
c = 0

while(c < N):
    voto = input()
    if voto.upper() == "TEMA1":
        t1 += 1
    elif voto.upper() == "TEMA2":
        t2 += 1
    elif voto.upper() == "TEMA3":
        t3 += 1
    c += 1

print("TEMA1=", t1)
print("TEMA2=", t2)
print("TEMA3=", t3)#!#!#
6608#;#;#N = int(input())

while(N <= 0):
    if N % 2 == 0:
        print(N)
    N += 1
print("fim")#!#!#
6603#;#;#N = int(input()) # quantidade de pessoas que vão votar
contP = 0 
contM = 0
contB = 0 

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'P':
		contP += 1
	elif voto.upper() == 'M':
		contM += 1
	elif voto.upper() == 'B':
		contB += 1
	c += 1

print("P=", contP)
print("M=", contM)
print("B=", contB)#!#!#
6607#;#;#N = int(input())

c = 1

while(c <= N):
    if c % 2 == 0:
        print(c)
    c+= 1
print("fim")#!#!#
6588#;#;#N = int(input())
c = 0
c_pedro = 0
c_jose = 0
c_ana = 0

while(c < N):
	candidato = input()
	if candidato.upper() == "JOSE":
		c_jose += 1
	elif candidato.upper() == "PEDRO":
		c_pedro += 1
	elif candidato.upper() == "ANA":
		c_ana += 1
	c += 1
print("JOSE=", c_jose)
print("PEDRO=", c_pedro)
print("ANA=", c_ana)
#!#!#
6612#;#;#N = int(input())

c = 1
soma = 0

while(c <= N):
    quadrado = c**2
    soma += quadrado
    c += 1

print("soma=", soma)#!#!#
6601#;#;#N = int(input()) # quantidade de pessoas que vão votar
contS = 0 # dia S
contT = 0 # dia T
contQ = 0 # dia Q

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'S':
		contS += 1
	elif voto.upper() == 'T':
		contT += 1
	elif voto.upper() == 'Q':
		contQ += 1
	c += 1

print("S=", contS)
print("T=", contT)
print("Q=", contQ)#!#!#
6600#;#;#N = int(input()) # quantidade de pessoas que vão votar
contV = 0 # cor V
contA = 0 # cor A
contP = 0 # cor P

c = 0 # controlador do laço

while(c < N):
	voto = input()
	if voto.upper() == 'V':
		contV += 1
	elif voto.upper() == 'A':
		contA += 1
	elif voto.upper() == 'P':
		contP += 1
	c += 1

print("V=", contV)
print("A=", contA)
print("P=", contP)#!#!#
6640#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'N':
        print(i)
        cont += 1
    i += 1

if cont == 0:
    print("nao achei")
#!#!#
6652#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([2, 2, 6, 1])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6639#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'M':
        print(i)
        cont += 1
    i += 1

if cont == 0:
    print("nao achei")
#!#!#
6651#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([5, 4, 3, 2])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6629#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'P':
        print(i)
        cont += 1
    i += 1

if cont == 0:
    print("nao achei")
#!#!#
6655#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([5, 1])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6624#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'A':
        cont += 1
    i += 1

print(cont)#!#!#
6650#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([4, 3])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6627#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'D':
        cont += 1
    i += 1

print(cont)#!#!#
6654#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([1, 3, 2, 5])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6628#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'E':
        cont += 1
    i += 1

print(cont)#!#!#
6656#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([3, 4, 2, 1, 4, 5])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6647#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([2,1,5])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6626#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'C':
        cont += 1
    i += 1

print(cont)#!#!#
6653#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([3, 5, 1])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6641#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'O':
        print(i)
        cont += 1
    i += 1

if cont == 0:
    print("nao achei")
#!#!#
6649#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([3,2,4,1,3])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6630#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'L':
        print(i)
        cont += 1
    i += 1

if cont == 0:
    print("nao achei")
#!#!#
6646#;#;#from numpy import *

# Leitura das notas
notas = array(eval(input()))

pesos = array([1,2,3])
i = 0
soma = 0

while (i < size(notas)):
	soma = soma + notas[i] * pesos[i]
	i = i + 1

media = soma / sum(pesos)
print(round(media,2))#!#!#
6669#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 500.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6667#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 0 <= nota <= 10:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6663#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 50.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6682#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 10 <= nota <= 18:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6670#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 20.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6674#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 40 <= nota <= 120:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6668#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 170.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6678#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 0 <= nota <= 16:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6673#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 100 <= nota <= 200:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6681#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 2000 <= nota <= 8000:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6662#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 200.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6661#;#;#from numpy import *

precos = eval(input("Informe os preços: "))
cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 100.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6664#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 80.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6677#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 0 <= nota <= 20:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6680#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 500 <= nota <= 3000:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6672#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 180.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6665#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 150.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6679#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 4 <= nota <= 12:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6625#;#;#frase = input("Digite a string: ").upper()

i = 0
cont = 0

while(i < len(frase)):
    if frase[i] == 'B':
        cont += 1
    i += 1

print(cont)#!#!#
6676#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 0 <= nota <= 8:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6671#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 15.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6683#;#;#from numpy import *

precos = eval(input("Informe os preços: "))

cont = 0
soma = 0.0
media = 0.0
for i in range(size(precos)):
    if precos[i] > 200.0:
        soma += precos[i]
        cont += 1

if cont > 0:
    media = soma / cont

print(round(media,2))#!#!#
6463#;#;#a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))

delta = b**2 - 4 * a * c

if (delta < 0):
     print("Nao")
else:
     print("Tem")
#!#!#
6464#;#;##!#!#
6447#;#;#salario_bruto = float(input())
inss = 0.11 * salario_bruto
irpf = 0.075 * salario_bruto
salario_liquido = salario_bruto - inss - irpf
salario_liquido = round(salario_liquido,2)


print("Salario liquido: R$",salario_liquido)
#!#!#
6695#;#;#celsius = float(input())

kelvin = celsius + 273.15
print(round(kelvin,2))#!#!#
6694#;#;#celsius = float(input())
fahrenheit = (celsius * 9/5) + 32
print(round(fahrenheit,2))#!#!#
6693#;#;##PORCENTAGEM

n = float(input())

print(round(0.27*n,2))
print(round(1.42*n,2))
print(round(0.37*n,2))#!#!#
6692#;#;## Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
t1 = float(input("Entre com a primeira temperatura: "))
t2 = float(input("Entre com a primeira temperatura: "))
t3 = float(input("Entre com a primeira temperatura: "))
t4 = float(input("Entre com a primeira temperatura: "))
t5 = float(input("Entre com a primeira temperatura: "))
t6 = float(input("Entre com a primeira temperatura: "))


# Usando as funções para encontrar a menor e maior tempratura:

minima = min(t1,t2,t3,t4,t5,t6)
maxima = max(t1,t2,t3,t4,t5,t6)

# Impressao da menor e maior temperatura:
print("Temperatura Minima:", minima,"graus celsius")
print("Temperatura Maxima:", maxima,"graus celsius")#!#!#
6698#;#;## Questão 5 - Pedágio Rodoviário

# Entrada de dados
quantidade_pedagios = int(input())

# Cálculo do custo total
custo_pedagio = quantidade_pedagios * 9.80
taxa_fixa_manutencao = 20.00
custo_total = custo_pedagio + taxa_fixa_manutencao
icms = custo_total * 0.15
custo_total_final = round(custo_total + icms, 2)

# Saída de dados
print(custo_total_final)
#!#!#
6701#;#;## Questão 8 - Compra Online

# Entrada de dados
valor_produtos = float(input())

# Cálculo do custo total
frete = 15.00
custo_total = valor_produtos + frete
icms = custo_total * 0.30
custo_total_final = round(custo_total + icms, 2)

# Saída de dados
print(custo_total_final)
#!#!#
6700#;#;## Questão 7 - Aluguel de Equipamento

# Entrada de dados
dias_aluguel = int(input())

# Cálculo do custo total
custo_diario_aluguel = 50.00
taxa_fixa_manutencao = 30.00
custo_total = (dias_aluguel * custo_diario_aluguel) + taxa_fixa_manutencao
icms = custo_total * 0.18
custo_total_final = round(custo_total + icms, 2)

# Saída de dados
print(custo_total_final)
#!#!#
6699#;#;## Questão 6 - Taxa de Estacionamento

# Entrada de dados
tempo_estacionamento = float(input())

# Cálculo do custo total
taxa_hora_estacionamento = 15.00
taxa_fixa_limpeza = 5.00
custo_total = (tempo_estacionamento * taxa_hora_estacionamento) + taxa_fixa_limpeza
icms = custo_total * 0.20
custo_total_final = round(custo_total + icms, 2)

# Saída de dados
print(custo_total_final)
#!#!#
6715#;#;#x =int(input("Insira um numero inteiro: "))
y = int(input("divisor"))
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6714#;#;#status_cliente = input().upper()
valor_emprestimo = int(input())
status_cliente = status_cliente.upper()
numero_meses = 24

if(status_cliente == "V"):
	taxa_juros = 0.08
else:
	taxa_juros = 0.12

taxa_mensal = taxa_juros / 12
pagamento_mensal = (valor_emprestimo * taxa_mensal) / (1 - (1 + taxa_mensal) ** -numero_meses)
pagamento_mensal = round(pagamento_mensal, 2)
print(pagamento_mensal)
#!#!#
6730#;#;#x =int(input("Insira um numero inteiro: "))
y = 43
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6731#;#;#x =int(input("Insira um numero inteiro: "))
y = 47
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6728#;#;#x =int(input("Insira um numero inteiro: "))
y = 37
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6727#;#;#x =int(input("Insira um numero inteiro: "))
y = 31
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6726#;#;#x =int(input("Insira um numero inteiro: "))
y = 29
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6725#;#;#x =int(input("Insira um numero inteiro: "))
y = 23
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6722#;#;#x =int(input("Insira um numero inteiro: "))
y = 17
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6721#;#;#x =int(input("Insira um numero inteiro: "))
y = 13
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6723#;#;#x =int(input("Insira um numero inteiro: "))
y = 19
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6729#;#;#x =int(input("Insira um numero inteiro: "))
y = 41
if x % y == 0:
	print(x//y)
	print("sim")
else:
	print(x%y)
	print("nao")#!#!#
6733#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Premier e Start
if status_cliente == "P":
	taxa_juros = 0.09  
else:
	taxa_juros = 0.11  
    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))


#!#!#
6734#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para DIAMOND e Essential
if status_cliente == "D":
	taxa_juros = 0.10	
else:
	taxa_juros = 0.15

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6740#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Crystal e Easy
if status_cliente == "C":
	taxa_juros = 0.07	
else:
	taxa_juros = 0.14

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6741#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Royal e Entry
if status_cliente == "R":
	taxa_juros = 0.03	
else:
	taxa_juros = 0.09

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6738#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Star e Fundamental
if status_cliente == "S":
	taxa_juros = 0.04
else:
	taxa_juros = 0.07

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6737#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Titanium e Silver
if status_cliente == "T":
	taxa_juros = 0.10	
else:
	taxa_juros = 0.20

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6724#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())
# Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

# Define as taxas de juros para VIP e Comum
if status_cliente == "V":
	taxa_juros = 0.08  
else:
	taxa_juros = 0.12  

# Prazo padrão de 1 ano
tempo_anos = 1

# Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

# Exibe o valor dos juros arredondado em duas casas decimais
print(juros)#!#!#
6732#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

# Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Black e Ordinary
if status_cliente == "B":
	taxa_juros = 0.07  
else:
	taxa_juros = 0.13  

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))

#!#!#
6735#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Gold e Casual
if status_cliente == "G":
	taxa_juros = 0.11	
else:
	taxa_juros = 0.14

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6736#;#;## Exemplo de uso
status_cliente = input()
valor_emprestimo = float(input())

    # Converte a string para maiúscula, se necessário
status_cliente = status_cliente.upper()

    # Define as taxas de juros para Shappire e Access
if status_cliente == "S":
	taxa_juros = 0.06	
else:
	taxa_juros = 0.10

    # Prazo padrão de 1 ano
tempo_anos = 1

    # Fórmula para calcular os juros
juros = valor_emprestimo * taxa_juros * tempo_anos

    # Exibe o valor dos juros arredondado em duas casas decimais
print(round(juros,2))#!#!#
6710#;#;#ano_nascimento = int(input())
pais = input().upper()

idade = 2023 - ano_nascimento

idade_minima_brasil = 18
idade_minima_eua = 16

if (pais == 'B' and idade >= idade_minima_brasil) or (pais == 'E' and idade >= idade_minima_eua):
    print("Idade suficiente")
else:
    print("Idade insuficiente")
#!#!#
6745#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento")

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.10,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.05,2))#!#!#
6746#;#;#n = int(input())

if (n == 21):
    print("sorte")
elif (n < 21):
    print("menor")
else:
    print("maior")#!#!#
6747#;#;#n = int(input())

if (n == 8):
    print("magico")
elif (n < 8):
    print("menor")
else:
    print("maior")#!#!#
6748#;#;#n = int(input())

if (n == 7):
    print("fortuna")
elif (n < 7):
    print("menor")
else:
    print("maior")#!#!#
6749#;#;#n = int(input())

if (n == 9):
    print("premiado")
elif (n < 9):
    print("menor")
else:
    print("maior")#!#!#
6750#;#;#n = int(input())

if (n == 123):
    print("desconto")
elif (n < 123):
    print("menor")
else:
    print("maior")#!#!#
6751#;#;#n = int(input())

if (n == 100):
    print("limite")
elif (n < 100):
    print("menor")
else:
    print("maior")#!#!#
6752#;#;#n = int(input())

if (n == 5):
    print("brilhante")
elif (n < 5):
    print("menor")
else:
    print("maior")#!#!#
6753#;#;#n = int(input())

if (n == 42):
    print("tesouro")
elif (n < 42):
    print("menor")
else:
    print("maior")#!#!#
6754#;#;#n = int(input())

if (n == 175):
    print("premiado")
elif (n < 175):
    print("menor")
else:
    print("maior")#!#!#
6755#;#;#n = int(input())

if (n == 190):
    print("vip")
elif (n < 190):
    print("menor")
else:
    print("maior")#!#!#
6756#;#;#n = int(input())
diaria = 175*n
if n < 15:
    diaria = diaria + 20.0
elif n == 15:
    diaria = diaria + 16.0
else:
    diaria = diaria + 10.0
    
print(round(diaria,2))#!#!#
6758#;#;#n = int(input())
diaria = 100*n
if n < 7:
    diaria = diaria + 15.0
elif n == 7:
    diaria = diaria + 12.0
else:
    diaria = diaria + 10.0
    
print(round(diaria,2))#!#!#
6759#;#;#d = int(input())
preco = 50.0

if (d < 10):
    preco = preco + 5.5
elif (d == 10):
    preco = preco + 7.75
else:
    preco = preco + 10
    
print(round(preco,2))#!#!#
6760#;#;#q = int(input())
preco = 30.0

if (q < 10):
    preco = preco + 3.25
elif (q == 10):
    preco = preco + 4.50
else:
    preco = preco + 6

print(round(preco,2))#!#!#
6761#;#;#n = int(input())
preco = 60
if (n < 50):
    preco += 4.5
elif (n == 50):
    preco += 5.5
else:
    preco += 6.5

print(round(preco,2))#!#!#
6762#;#;#idade = int(input())

ingresso = 20

if idade < 12:
    ingresso += 1.25
elif idade == 12:
    ingresso += 2.25
else:
    ingresso += 3.25
    
print(round(ingresso,2))#!#!#
6763#;#;#h = float(input())
preco = 5

if (h < 2):
    preco += 1.25
elif h == 2:
    preco += 2.25
else:
    preco += 3.25

print(round(preco,2))#!#!#
6764#;#;#peso = float(input())

preco = 10

if peso < 5:
    preco += 3.75
elif peso == 5:
    preco += 4.75
else:
    preco += 5.75

print(round(preco,2))#!#!#
6757#;#;#n = int(input())

preco = n * 5

if (n < 3):
    preco += 3
elif (n == 3):
    preco += 3.25
else:
    preco += 4.5

print(round(preco, 2))#!#!#
6775#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upp

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.20,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.10,2))
#!#!#
6774#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.18,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.07,2))
#!#!#
6773#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.19,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.09,2))
#!#!#
6772#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.17,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.08,2))
#!#!#
6771#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.16,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.06,2))
#!#!#
6770#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.15,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.10,2))
#!#!#
6767#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.12,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.07,2))
#!#!#
6768#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.13,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.08,2))
#!#!#
6769#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.14,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.09,2))
#!#!#
6766#;#;#compra = float(input("valor da compra"))
fp = input("forma de pagamento").upper()

if(fp=="D" or fp=="P"):
	print(round(compra-compra*0.11,2))
elif(fp=="C1"):
	print(round(compra,2))
elif(fp=="C2"):
	print(round(compra+compra*0.06,2))
#!#!#
6765#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "R":
	idade_minima = 21
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6776#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "R":
	idade_minima = 17
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6777#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "I":
	idade_minima = 17
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6778#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 21
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "J":
	idade_minima = 20
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6779#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "J":
	idade_minima = 16
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6780#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 21
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "C":
	idade_minima = 24
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6781#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 21
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "E":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6782#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "E":
	idade_minima = 16
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6784#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 21
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "R":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6783#;#;#ano_nascimento = int(input())
pais = input().upper()

# Arbitrar o ano de consulta como 2023
ano_consulta = 2023

# Calcular a idade da pessoa (sem considerar o mês)
idade = ano_consulta - ano_nascimento

# Verificar a idade mínima para dirigir com base no país selecionado
if pais == "B":
	idade_minima = 18
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
elif pais == "E":
	idade_minima = 16
	if idade >= idade_minima:
		print("sim")
		print(idade - idade_minima)	
	else:
		anos_faltantes = idade_minima - idade
		print("nao")
		print(anos_faltantes)
else:
    print("invalido")
#!#!#
6811#;#;## quadrados

N = int(input())

c = 1

while(c <= N):
    quadrado = c**2
    print(quadrado)
    c += 1
print("fim")

#!#!#
6812#;#;## cubos

N = int(input())

c = 1

while(c <= N):
    cubo = c**3
    print(cubo)
    c += 1
print("fim")

#!#!#
6815#;#;#import math

# Ler o número N
N = int(input())
i = 1
# Iterar de 1 até N e imprimir as raízes quadradas
while (i<= N):
	raiz = round(math.sqrt(i),2)
	print(raiz)
	i = i + 1
print("fim")	
	#!#!#
6814#;#;#N = int(input())
i = 0 
while(i<=N):
	print(2**i)
	i = i + 1
print("fim")	
#!#!#
6818#;#;#n = int(input())

i = 1

while (i <= n):
	print(round(i/7,2))
	i = i + 1
print("fim")
#!#!#
6813#;#;#n = int(input())

i = 1

while (i <= n):
	print(i%3)
	i = i + 1
print("fim")

#!#!#
6817#;#;#n = int(input())

i = 1

while (i <= n):
	print(i%5)
	i = i + 1
print("fim")
#!#!#
6816#;#;#n = int(input())

i = 1

while (i <= n):
	print(round(i/3,2))
	i = i + 1
print("fim")#!#!#
6788#;#;#from numpy import *

vetor = array(eval(input()))

salto_record = max(vetor)
cont = 0
i = 0
while (i < size(vetor)):
    if vetor[i] < salto_record:
        cont = cont + 1
    i = i + 1

print(round(salto_record, 2))
print(cont)
#!#!#
6787#;#;#from numpy import *
vetor = array(eval(input()))

cont = 0
N = int(input())
i = 0

while(i < size(vetor)):
	if vetor[i] == N:
		print(i)
	elif vetor[i] < N:
		cont += 1
	i += 1

print(cont)
#!#!#
6786#;#;##include <stdio.h>
#include <stdlib.h>

#define N 3

int triangular_inferior(double A[][N]){
   int i,j;
	for ( i = 0; i < N; i++) {
		for ( j = i + 1; j < N; j++) {
			if(A[i][j] != 0) {
				return 0;
			}
		}
	}
	return 1;
}

int main(){

    double matriz[N][N],d;
    int i,j,k;

    for(i =0; i<N ; i++){
        for(j =0;j<N;j++){
            scanf("%ld",&matriz[i][j]);
        }
    }

    printf("%d\n", triangular_inferior(matriz));

    return 0;


}#!#!#
6830#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "H"):
        preco += 3.85
    elif (produtos[i] == "L"):
        preco += 2.95
    elif (produtos[i] == "E"):
        preco += 7.90
    i += 1

print(round(preco,2))#!#!#
6829#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "A"):
        preco += 19.90
    elif (produtos[i] == "L"):
        preco += 3.50
    elif (produtos[i] == "P"):
        preco += 4.25
    i += 1

print(round(preco,2))#!#!#
6831#;#;#produtos = input().upper()
preco = 0
i = 0

while(i < len(produtos)):
    if (produtos[i] == "A"):
        preco += 16.75
    elif (produtos[i] == "L"):
        preco += 4.60
    elif (produtos[i] == "P"):
        preco += 2.85
    i += 1

print(round(preco,2))#!#!#
6832#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "H"):
        preco += 5.40
    elif (produtos[i] == "C"):
        preco += 8.95
    elif (produtos[i] == "L"):
        preco += 4.50
    i += 1

print(round(preco,2))#!#!#
6833#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "M"):
        preco += 7.25
    elif (produtos[i] == "P"):
        preco += 4.75
    elif (produtos[i] == "R"):
        preco += 3.50
    i += 1

print(round(preco,2))#!#!#
6834#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "C"):
        preco += 10.50
    elif (produtos[i] == "E"):
        preco += 8.75
    elif (produtos[i] == "P"):
        preco += 17.90
    i += 1

print(round(preco,2))#!#!#
6835#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "B"):
        preco += 3.75
    elif (produtos[i] == "C"):
        preco += 7.90
    elif (produtos[i] == "E"):
        preco += 9.85
    i += 1

print(round(preco,2))#!#!#
6836#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "B"):
        preco += 6.80
    elif (produtos[i] == "C"):
        preco += 11.75
    elif (produtos[i] == "M"):
        preco += 5.90
    i += 1

print(round(preco,2))#!#!#
6837#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "I"):
        preco += 3.75
    elif (produtos[i] == "M"):
        preco += 4.50
    elif (produtos[i] == "S"):
        preco += 2.90
    i += 1

print(round(preco,2))#!#!#
6838#;#;#produtos = input().upper()
preco = 0
i = 0


while(i < len(produtos)):
    if (produtos[i] == "D"):
        preco += 2.25
    elif (produtos[i] == "S"):
        preco += 4.00
    elif (produtos[i] == "I"):
        preco += 6.90
    i += 1

print(round(preco,2))#!#!#
2407#;#;#NULL#!#!#
2405#;#;#NULL#!#!#
2406#;#;#NULL#!#!#
2408#;#;#NULL#!#!#
2475#;#;##!#!#
2647#;#;#"""
TP 06 - Questão 2 - C - Tom da pele
@author: IComp / UFAM
Data: 16 - 01 - 2017
"""

from numpy import *

# Cria o vetor de 6 categorias com zeros
cont = zeros(6, dtype=int)

# Leitura do vetor de tom da pele
# Separe o tipo de cada pessoa por virgula
vet = input("Digite os tons das peles: ").upper().split(',')

# print('\n[MC,C,CM,EM,E,ME]')
# Contagem de ocorrencias
for x in vet:
    if (x == 'MC'):
        cont[0] = cont[0] + 1
    elif (x == 'C'):
        cont[1] = cont[1] + 1
    elif (x == 'CM'):
        cont[2] = cont[2] + 1
    elif (x == 'EM'):
        cont[3] = cont[3] + 1
    elif (x == 'E'):
        cont[4] = cont[4] + 1
    else:    # Para a pele muito escura 
        cont[5] = cont[5] + 1
#     print('')
#     print(x)
#     print(cont)
# print('\n\n')
# Imprime maior incidencia de cor 
print(max(cont))

# Imprime vetor de contagem
print(cont)
#!#!#
2796#;#;#bogomips_desejado = float(input("Informe o valor em bogomips: "))
bogomips = 7206.14
ano = 2018

while (bogomips < bogomips_desejado):
    bogomips = bogomips + bogomips*0.65
    ano = ano + 1

print (ano)
#!#!#
2950#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao F
Apartamento de Robertina
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""

#constantes
capital = 1500.00
tempo = 36

#entradas
taxaJuros = float(input("Entre com o valor da taxa de juros: " ))

#processamento
total = capital * (1+ taxaJuros)**tempo

#saidas
print(round(total,2))

#!#!#
2951#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao E
O segredo do sucesso de Robertina
Criado em 20 / 03 / 2019
@author: IComp / UFAM
"""

#constantes
montanteInicial = 1500.00
montanteFinal = 1042000.00

#entradas
tempo = int (input("Entre o tempo de investimento (em meses): "))

#processamento
TaxaJuros = ((montanteFinal/montanteInicial)**(1.0/tempo))-1

#saidas
print(round (TaxaJuros, 5))
#!#!#
2949#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 01 - Variaveis e Estrutura Sequencial
Versao I
Açaí
Criado em 21 / 03 / 2019
@author: IComp / UFAM
"""
#constante
precoAcai = 24.00
salgado = 3.00

#entradas
copo = int(input("Entre com a quantidade de acai de seu pedido (g): "))
qtsalgado= int(input("Entre com a quantidade de salgado: "))

#processamento
total = ((precoAcai * copo / 1000) + (qtsalgado * salgado))
#saidas
print(round(total, 2))#!#!#
2996#;#;#"""
Introducao a Programacao de Computadores
Trabalho Pratico 02 - Estrutura Condicional Simples e Composta
Versao D
Loja Virtual de Games – desconto
Criado em 10 / 04 / 2019
@author: IComp / UFAM
"""

#entradas
qtd = int(input("Quantidade de jogos (1 ou 2)? "))
jogo1 = float(input("Informe o preco do primeiro jogo comprado: "))


#processamento
if qtd == 2:
	jogo2 = float(input("Informe o preco do segundo jogo comprado: "))
	total = jogo1 + (jogo2 * 0.75)
else:
	total = jogo1

#saidas
print(round(total,2))#!#!#
3206#;#;##!#!#
3236#;#;##!#!#
3522#;#;##!#!#
3766#;#;#import math

b = float(input("b: "))
c = float(input("c: "))
alpha = float(input("angulo entre b e c (em graus): "))

a = math.sqrt(b**2 + c**2 - 2*b*c*math.cos(math.radians(alpha)))
a = round(a, 2)
print(a)#!#!#
866#;#;#NULL#!#!#
1741#;#;#NULL#!#!#
1957#;#;#mapeia:: (a->a) -> [a] -> [a]
mapeia f [] = []
mapeia f (x:xs) = f x:mapeia f xs#!#!#
3021#;#;#filtro::(a->Bool)->[a]->[a]
filtro f [] = []
filtro f (x:xs)
 |f x ==True = x: filtro f xs
 |otherwise = filtro f xs#!#!#
1961#;#;#NULL#!#!#
1967#;#;#divLista :: (a -> Bool) -> [a] -> ([a],[a]) -> ([a],[a])
divLista f [] (l1,l2) = (l1,l2)
divLista f (x:xs) (l1,l2)
 |f x == True = divLista f xs (x:l1,l2)
 |otherwise = divLista f xs (l1,x:l2)#!#!#
3022#;#;##!#!#
1970#;#;#NULL#!#!#
1972#;#;#NULL#!#!#
3011#;#;#quadrado::Int->Int
quadrado n = n*n

subFimInicio::[Int]->(Int->Int)->Int
subFimInicio [x] f = f x 
subFimInicio (x:xs) f = subFimInicio xs f - f x
#!#!#
3012#;#;##!#!#
3013#;#;##!#!#
3014#;#;#desenfileirar::[a]->a
desenfileirar (x:[]) = x
desenfileirar (x:xs) = desenfileirar xs#!#!#
3015#;#;#NULL#!#!#
3016#;#;##!#!#
3017#;#;#NULL#!#!#
3018#;#;##!#!#
3019#;#;#NULL#!#!#
3020#;#;#NULL#!#!#
3782#;#;##!#!#
4200#;#;#print("Instituto Federal do Amazonas")#!#!#
4202#;#;#print("Universidade Federal do Amazonas")#!#!#
4203#;#;#print("Universidade Federal do Amazonas")#!#!#
4204#;#;#print("Universidade Federal do Amazonas")#!#!#
4205#;#;#print("Universidade Federal do Amazonas")#!#!#
4206#;#;#print("Universidade Federal do Amazonas")#!#!#
4207#;#;#print("Universidade Federal do Amazonas")#!#!#
4208#;#;#print("Universidade Federal do Amazonas")#!#!#
4209#;#;#print("Universidade Federal do Amazonas")#!#!#
4210#;#;#print("Universidade Federal do Amazonas")#!#!#
4211#;#;#print("Universidade Federal do Amazonas")#!#!#
4212#;#;#print("Universidade Federal do Amazonas")#!#!#
4213#;#;#print("Universidade Federal do Amazonas")#!#!#
4214#;#;#print("Universidade Federal do Amazonas")#!#!#
4215#;#;#print("Universidade Federal do Amazonas")#!#!#
4216#;#;#print("Universidade Federal do Amazonas")#!#!#
4217#;#;#print("Universidade Federal do Amazonas")#!#!#
4218#;#;#print("Universidade Federal do Amazonas")#!#!#
4219#;#;#print("Universidade Federal do Amazonas")#!#!#
4220#;#;#print("Universidade Federal do Amazonas")#!#!#
4221#;#;#print("Universidade Federal do Amazonas")#!#!#
4222#;#;#print("Universidade Federal do Amazonas")#!#!#
4223#;#;#print("Universidade Federal do Amazonas")#!#!#
4224#;#;#print("Universidade Federal do Amazonas")#!#!#
4225#;#;#print("Universidade Federal do Amazonas")#!#!#
4226#;#;#print("Universidade Federal do Amazonas")#!#!#
4957#;#;#print("Universidade Federal do Amazonas")#!#!#
4956#;#;#print("Universidade Federal do Amazonas")#!#!#
4955#;#;#print("Universidade Federal do Amazonas")#!#!#
4954#;#;#print("Universidade Federal do Amazonas")#!#!#
4953#;#;#print("Universidade Federal do Amazonas")#!#!#
4952#;#;#print("Universidade Federal do Amazonas")#!#!#
4951#;#;#print("Universidade Federal do Amazonas")#!#!#
4950#;#;#print("Universidade Federal do Amazonas")#!#!#
4949#;#;#print("Universidade Federal do Amazonas")#!#!#
4948#;#;#print("Universidade Federal do Amazonas")#!#!#
4947#;#;#print("Universidade Federal do Amazonas")#!#!#
4946#;#;#print("Universidade Federal do Amazonas")#!#!#
4945#;#;#print("Universidade Federal do Amazonas")#!#!#
4944#;#;#print("Universidade Federal do Amazonas")#!#!#
4245#;#;##include <stdio.h>
#include <string.h>

int main (void) {
	char a[30],b[30],c[60];
	scanf("%[^\n]%*c", a);  
	scanf("%[^\n]%*c", b);
	strcpy(c, a);
	strcat(c, b);
	printf ("%s", c);
	return 0;
}

#!#!#
3815#;#;#print("Universidade Federal do Amazonas")#!#!#
3814#;#;#print("Universidade Federal do Amazonas")#!#!#
3813#;#;#print("Universidade Federal do Amazonas")#!#!#
3812#;#;#print("Universidade Federal do Amazonas")#!#!#
3811#;#;#print("Universidade Federal do Amazonas")#!#!#
3810#;#;#print("Universidade Federal do Amazonas")#!#!#
3809#;#;#print("Universidade Federal do Amazonas")#!#!#
3808#;#;#print("Universidade Federal do Amazonas")#!#!#
3806#;#;#print("Universidade Federal do Amazonas")#!#!#
3807#;#;#print("Universidade Federal do Amazonas")#!#!#
3805#;#;#print("Universidade Federal do Amazonas")#!#!#
3804#;#;#print("Universidade Federal do Amazonas")#!#!#
3803#;#;#print("Universidade Federal do Amazonas")#!#!#
3802#;#;#print("Universidade Federal do Amazonas")#!#!#
3801#;#;#print("Universidade Federal do Amazonas")#!#!#
3800#;#;#print("Universidade Federal do Amazonas")#!#!#
4544#;#;##include <stdio.h>
int main(void){

	printf("%d",20*35);
	return 0;
}#!#!#
4424#;#;##!#!#
3773#;#;#valor = float(input())

if valor <= 100:
    result = 0.1*valor + valor
else:
    result = 0.08*valor + valor
    
print(round(result, 2))#!#!#
3771#;#;#horas = float(input())

if horas <= 40:
    result = 15*horas
else:
    result = 40*15 + ((horas-40)*20)
    
print(round(result, 2))#!#!#
5138#;#;##!#!#
1426#;#;#NULL#!#!#
1427#;#;#NULL#!#!#
1428#;#;#NULL#!#!#
1429#;#;#NULL#!#!#
1430#;#;#NULL#!#!#
1431#;#;#NULL#!#!#
1432#;#;#NULL#!#!#
1433#;#;#NULL#!#!#
1434#;#;#NULL#!#!#
1435#;#;#NULL#!#!#
5177#;#;##!#!#
2366#;#;#NULL#!#!#
2334#;#;#NULL#!#!#
1569#;#;#NULL#!#!#
5456#;#;##!#!#
5187#;#;##Emprestimo do Seu Madruga
renda = float(input("Informe a renda: "))
prestacao = float(input("Informe valor da prestacao: "))

total = renda * 0.20

if prestacao > total:
	print("Emprestimo nao aprovado")
else:
	print("Emprestimo aprovado")
#!#!#
5261#;#;#"""
Avaliacao 3 (A3)
junho de 2016
Questao 1
Versao E - Grupo de Risco
@author: IComp / UFAM
"""
idade = int(input("Digite a idade: "))
peso  = float(input("Digite o peso: "))

# Eco das entradas
print("Entradas:", idade, "anos e", "%.1f" %peso, "kg")

c1 = (idade>=0) and (idade<=130)
c2 = (peso>0) and (peso<=550.0)

if (c1 and c2):
    if idade<=20:
        if peso<=60.0:
            grupo=9
        elif peso>60.0 and peso<=90.0:
            grupo=8
        else:
            grupo=7
    elif idade>20 and idade<=50:
        if peso<=60.0:
            grupo=6
        elif peso>60.0 and peso<=90.0:
            grupo=5
        else:
            grupo=4
    else:
        if peso<=60.0:
            grupo=3
        elif peso>60.0 and peso<=90.0:
            grupo=2
        else:
            grupo=1
    print("Grupo de risco:", grupo)
else:
    print("Dados invalidos")#!#!#
5272#;#;##!#!#
5641#;#;##!#!#
5809#;#;#valor = int(input("Informe um valor: "))
print(valor*valor)#!#!#
5835#;#;##!#!#
5837#;#;##include <stdio.h>

int main(void){
	double raio;
	scanf("%lf",&raio);
	printf("%lf",2 * 3.1416 * raio);
}#!#!#
5838#;#;##include <stdio.h>

int main(void){
	double distancia;
	scanf("%lf",&distancia);
	printf("%lf",0.34*distancia);
}
#!#!#
5839#;#;##!#!#
5853#;#;##!#!#
5892#;#;##!#!#
6278#;#;#from numpy import *
palavra = (input("Palavra:")).upper()
total = 0
i = 0
while (i<len(palavra)):
	if (palavra[i] == "A" or palavra[i] == "E" or palavra[i] == "I" or palavra[i] == "O" or palavra[i] == "U"):
		total = total + 0.19
	else:
		total = total + 0.23
	i = i + 1
print(round(total, 2))
#!#!#
2482#;#;#destino=input()
frequencia=int(input())
custoReforma = float(1000000.0)
ida_volta=2
lugares=56
if destino == "Parintins":
    custoPorTrecho = int(10)*446
    custoPorSemana = ida_volta*custoPorTrecho*frequencia
    if frequencia == 1:
        passagensPorSemana=0.9*lugares*ida_volta 
    else:
        passagensPorSemana=0.65*lugares*ida_volta*2
    
    tempoRetorno=18*4
    precoPassagem = (custoReforma/float(tempoRetorno*passagensPorSemana)  + custoPorSemana/passagensPorSemana)
    
    print("%f reais" % float(precoPassagem))
elif destino == "Coari":
    custoPorTrecho = int(10)*451
    custoPorSemana = ida_volta*custoPorTrecho*frequencia
    if frequencia == 1:
        passagensPorSemana=1.0*lugares*ida_volta 
    else:
        passagensPorSemana=0.7*lugares*ida_volta*frequencia
    
    tempoRetorno=18*4
    precoPassagem = (custoReforma/float(tempoRetorno*passagensPorSemana)  + custoPorSemana/passagensPorSemana)
    
    print("%f reais" % float(precoPassagem))
else:
    print("destino desconhecido") 
#!#!#
6495#;#;#valorDolarAustraliano = float(input())

valorReal = valorDolarAustraliano * 3.22

print(round(valorReal,2))#!#!#
6675#;#;#import numpy as np

# Cria um vetor com 10 índices preenchidos com zeros
notas_alunos = np.zeros(10)

# Recebe a sequência de notas dos alunos
for i in range(10):
	nota = float(input())
	if 10 <= nota <= 18:
		notas_alunos[i] =  nota

# Recebe a nota mínima para aprovação
nota_minima = float(input())

# Inicializa uma variável contadora para contar alunos aprovados
alunos_aprovados = 0

# Percorre o vetor de notas e conta quantos alunos foram aprovados
for nota in notas_alunos:
	 if nota >= nota_minima:
		  alunos_aprovados += 1

# Inicializa um vetor vazio para armazenar as notas dos alunos aprovados
notas_aprovadas = np.empty(alunos_aprovados)

# Preenche o vetor com as notas dos alunos aprovados
indice = 0
for nota in notas_alunos:
	 if nota >= nota_minima:
		  notas_aprovadas[indice] = nota
		  indice += 1

# Imprime a quantidade de alunos aprovados
print(alunos_aprovados)

# Imprime as notas dos alunos aprovados
print(notas_aprovadas)
#!#!#
6840#;#;##!#!#
